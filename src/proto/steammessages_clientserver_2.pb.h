// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_2.proto

#ifndef PROTOBUF_steammessages_5fclientserver_5f2_2eproto__INCLUDED
#define PROTOBUF_steammessages_5fclientserver_5f2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

class CMsgClientUpdateUserGameInfo;
class CMsgClientRichPresenceUpload;
class CMsgClientRichPresenceRequest;
class CMsgClientRichPresenceInfo;
class CMsgClientRichPresenceInfo_RichPresence;
class CMsgClientCheckFileSignature;
class CMsgClientCheckFileSignatureResponse;
class CMsgClientReadMachineAuth;
class CMsgClientReadMachineAuthResponse;
class CMsgClientUpdateMachineAuth;
class CMsgClientUpdateMachineAuthResponse;
class CMsgClientRequestMachineAuth;
class CMsgClientRequestMachineAuthResponse;
class CMsgClientRegisterKey;
class CMsgClientPurchaseResponse;
class CMsgClientActivateOEMLicense;
class CMsgClientRegisterOEMMachine;
class CMsgClientRegisterOEMMachineResponse;
class CMsgClientPurchaseWithMachineID;
class CMsgTrading_InitiateTradeRequest;
class CMsgTrading_InitiateTradeResponse;
class CMsgTrading_CancelTradeRequest;
class CMsgTrading_StartSession;
class CMsgClientGetCDNAuthToken;
class CMsgClientGetDepotDecryptionKey;
class CMsgClientGetDepotDecryptionKeyResponse;
class CMsgClientCheckAppBetaPassword;
class CMsgClientCheckAppBetaPasswordResponse;
class CMsgClientCheckAppBetaPasswordResponse_BetaPassword;
class CMsgClientUpdateAppJobReport;
class CMsgClientDPContentStatsReport;
class CMsgClientGetCDNAuthTokenResponse;
class CMsgDownloadRateStatistics;
class CMsgDownloadRateStatistics_StatsInfo;
class CMsgClientRequestAccountData;
class CMsgClientRequestAccountDataResponse;
class CMsgClientUGSGetGlobalStats;
class CMsgClientUGSGetGlobalStatsResponse;
class CMsgClientUGSGetGlobalStatsResponse_Day;
class CMsgClientUGSGetGlobalStatsResponse_Day_Stat;
class CMsgClientRedeemGuestPass;
class CMsgClientRedeemGuestPassResponse;
class CMsgClientGetClanActivityCounts;
class CMsgClientGetClanActivityCountsResponse;
class CMsgClientOGSReportString;
class CMsgClientOGSReportBug;
class CMsgClientSentLogs;
class CMsgGCClient;
class CMsgClientRequestFreeLicense;
class CMsgClientRequestFreeLicenseResponse;
class CMsgDRMDownloadRequestWithCrashData;
class CMsgDRMDownloadResponse;
class CMsgDRMFinalResult;
class CMsgClientDPCheckSpecialSurvey;
class CMsgClientDPCheckSpecialSurveyResponse;
class CMsgClientDPSendSpecialSurveyResponse;
class CMsgClientDPSendSpecialSurveyResponseReply;
class CMsgClientRequestForgottenPasswordEmail;
class CMsgClientRequestForgottenPasswordEmailResponse;
class CMsgClientItemAnnouncements;
class CMsgClientItemAnnouncements_UnseenItem;
class CMsgClientRequestItemAnnouncements;
class CMsgClientUserNotifications;
class CMsgClientUserNotifications_Notification;
class CMsgClientCommentNotifications;
class CMsgClientRequestCommentNotifications;
class CMsgClientOfflineMessageNotification;
class CMsgClientRequestOfflineMessageCount;
class CMsgClientChatGetFriendMessageHistory;
class CMsgClientChatGetFriendMessageHistoryResponse;
class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage;
class CMsgClientChatGetFriendMessageHistoryForOfflineMessages;
class CMsgClientFSGetFriendsSteamLevels;
class CMsgClientFSGetFriendsSteamLevelsResponse;
class CMsgClientFSGetFriendsSteamLevelsResponse_Friend;
class CMsgClientEmailAddrInfo;
class CMsgCREItemVoteSummary;
class CMsgCREItemVoteSummary_PublishedFileId;
class CMsgCREItemVoteSummaryResponse;
class CMsgCREItemVoteSummaryResponse_ItemVoteSummary;
class CMsgCREUpdateUserPublishedItemVote;
class CMsgCREUpdateUserPublishedItemVoteResponse;
class CMsgCREGetUserPublishedItemVoteDetails;
class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId;
class CMsgCREGetUserPublishedItemVoteDetailsResponse;
class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail;
class CMsgFSGetFollowerCount;
class CMsgFSGetFollowerCountResponse;
class CMsgFSGetIsFollowing;
class CMsgFSGetIsFollowingResponse;
class CMsgFSEnumerateFollowingList;
class CMsgFSEnumerateFollowingListResponse;
class CMsgDPGetNumberOfCurrentPlayers;
class CMsgDPGetNumberOfCurrentPlayersResponse;
class CMsgClientFriendUserStatusPublished;
class CMsgClientServiceMethodLegacy;
class CMsgClientServiceMethodLegacyResponse;
class CMsgClientUIMode;
class CMsgClientVanityURLChangedNotification;
class CMsgClientAuthorizeLocalDeviceRequest;
class CMsgClientAuthorizeLocalDevice;
class CMsgClientAuthorizeLocalDeviceNotification;
class CMsgClientDeauthorizeDeviceRequest;
class CMsgClientDeauthorizeDevice;
class CMsgClientUseLocalDeviceAuthorizations;
class CMsgClientUseLocalDeviceAuthorizations_DeviceToken;
class CMsgClientGetAuthorizedDevices;
class CMsgClientGetAuthorizedDevicesResponse;
class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice;
class CMsgClientSharedLibraryLockStatus;
class CMsgClientSharedLibraryLockStatus_LockedLibrary;
class CMsgClientSharedLibraryStopPlaying;
class CMsgClientSharedLibraryStopPlaying_StopApp;
class CMsgClientServiceCall;
class CMsgClientServiceModule;
class CMsgClientServiceCallResponse;
class CMsgAMUnlockStreaming;
class CMsgAMUnlockStreamingResponse;
class CMsgAMUnlockHEVC;
class CMsgAMUnlockHEVCResponse;
class CMsgClientPlayingSessionState;
class CMsgClientKickPlayingSession;
class CMsgClientVoiceCallPreAuthorize;
class CMsgClientVoiceCallPreAuthorizeResponse;
class CMsgBadgeCraftedNotification;

// ===================================================================

class CMsgClientUpdateUserGameInfo : public ::google::protobuf::Message {
 public:
  CMsgClientUpdateUserGameInfo();
  virtual ~CMsgClientUpdateUserGameInfo();

  CMsgClientUpdateUserGameInfo(const CMsgClientUpdateUserGameInfo& from);

  inline CMsgClientUpdateUserGameInfo& operator=(const CMsgClientUpdateUserGameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUpdateUserGameInfo& default_instance();

  void Swap(CMsgClientUpdateUserGameInfo* other);

  // implements Message ----------------------------------------------

  CMsgClientUpdateUserGameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUpdateUserGameInfo& from);
  void MergeFrom(const CMsgClientUpdateUserGameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid_idgs = 1;
  inline bool has_steamid_idgs() const;
  inline void clear_steamid_idgs();
  static const int kSteamidIdgsFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid_idgs() const;
  inline void set_steamid_idgs(::google::protobuf::uint64 value);

  // optional fixed64 gameid = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 2;
  inline ::google::protobuf::uint64 gameid() const;
  inline void set_gameid(::google::protobuf::uint64 value);

  // optional uint32 game_ip = 3;
  inline bool has_game_ip() const;
  inline void clear_game_ip();
  static const int kGameIpFieldNumber = 3;
  inline ::google::protobuf::uint32 game_ip() const;
  inline void set_game_ip(::google::protobuf::uint32 value);

  // optional uint32 game_port = 4;
  inline bool has_game_port() const;
  inline void clear_game_port();
  static const int kGamePortFieldNumber = 4;
  inline ::google::protobuf::uint32 game_port() const;
  inline void set_game_port(::google::protobuf::uint32 value);

  // optional bytes token = 5;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 5;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const void* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateUserGameInfo)
 private:
  inline void set_has_steamid_idgs();
  inline void clear_has_steamid_idgs();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_game_ip();
  inline void clear_has_game_ip();
  inline void set_has_game_port();
  inline void clear_has_game_port();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_idgs_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 game_ip_;
  ::google::protobuf::uint32 game_port_;
  ::std::string* token_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUpdateUserGameInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceUpload : public ::google::protobuf::Message {
 public:
  CMsgClientRichPresenceUpload();
  virtual ~CMsgClientRichPresenceUpload();

  CMsgClientRichPresenceUpload(const CMsgClientRichPresenceUpload& from);

  inline CMsgClientRichPresenceUpload& operator=(const CMsgClientRichPresenceUpload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRichPresenceUpload& default_instance();

  void Swap(CMsgClientRichPresenceUpload* other);

  // implements Message ----------------------------------------------

  CMsgClientRichPresenceUpload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRichPresenceUpload& from);
  void MergeFrom(const CMsgClientRichPresenceUpload& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes rich_presence_kv = 1;
  inline bool has_rich_presence_kv() const;
  inline void clear_rich_presence_kv();
  static const int kRichPresenceKvFieldNumber = 1;
  inline const ::std::string& rich_presence_kv() const;
  inline void set_rich_presence_kv(const ::std::string& value);
  inline void set_rich_presence_kv(const char* value);
  inline void set_rich_presence_kv(const void* value, size_t size);
  inline ::std::string* mutable_rich_presence_kv();
  inline ::std::string* release_rich_presence_kv();
  inline void set_allocated_rich_presence_kv(::std::string* rich_presence_kv);

  // repeated fixed64 steamid_broadcast = 2;
  inline int steamid_broadcast_size() const;
  inline void clear_steamid_broadcast();
  static const int kSteamidBroadcastFieldNumber = 2;
  inline ::google::protobuf::uint64 steamid_broadcast(int index) const;
  inline void set_steamid_broadcast(int index, ::google::protobuf::uint64 value);
  inline void add_steamid_broadcast(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamid_broadcast() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamid_broadcast();

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceUpload)
 private:
  inline void set_has_rich_presence_kv();
  inline void clear_has_rich_presence_kv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rich_presence_kv_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamid_broadcast_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRichPresenceUpload* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceRequest : public ::google::protobuf::Message {
 public:
  CMsgClientRichPresenceRequest();
  virtual ~CMsgClientRichPresenceRequest();

  CMsgClientRichPresenceRequest(const CMsgClientRichPresenceRequest& from);

  inline CMsgClientRichPresenceRequest& operator=(const CMsgClientRichPresenceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRichPresenceRequest& default_instance();

  void Swap(CMsgClientRichPresenceRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientRichPresenceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRichPresenceRequest& from);
  void MergeFrom(const CMsgClientRichPresenceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamid_request = 1;
  inline int steamid_request_size() const;
  inline void clear_steamid_request();
  static const int kSteamidRequestFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid_request(int index) const;
  inline void set_steamid_request(int index, ::google::protobuf::uint64 value);
  inline void add_steamid_request(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamid_request() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamid_request();

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamid_request_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRichPresenceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceInfo_RichPresence : public ::google::protobuf::Message {
 public:
  CMsgClientRichPresenceInfo_RichPresence();
  virtual ~CMsgClientRichPresenceInfo_RichPresence();

  CMsgClientRichPresenceInfo_RichPresence(const CMsgClientRichPresenceInfo_RichPresence& from);

  inline CMsgClientRichPresenceInfo_RichPresence& operator=(const CMsgClientRichPresenceInfo_RichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRichPresenceInfo_RichPresence& default_instance();

  void Swap(CMsgClientRichPresenceInfo_RichPresence* other);

  // implements Message ----------------------------------------------

  CMsgClientRichPresenceInfo_RichPresence* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRichPresenceInfo_RichPresence& from);
  void MergeFrom(const CMsgClientRichPresenceInfo_RichPresence& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid_user = 1;
  inline bool has_steamid_user() const;
  inline void clear_steamid_user();
  static const int kSteamidUserFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid_user() const;
  inline void set_steamid_user(::google::protobuf::uint64 value);

  // optional bytes rich_presence_kv = 2;
  inline bool has_rich_presence_kv() const;
  inline void clear_rich_presence_kv();
  static const int kRichPresenceKvFieldNumber = 2;
  inline const ::std::string& rich_presence_kv() const;
  inline void set_rich_presence_kv(const ::std::string& value);
  inline void set_rich_presence_kv(const char* value);
  inline void set_rich_presence_kv(const void* value, size_t size);
  inline ::std::string* mutable_rich_presence_kv();
  inline ::std::string* release_rich_presence_kv();
  inline void set_allocated_rich_presence_kv(::std::string* rich_presence_kv);

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceInfo.RichPresence)
 private:
  inline void set_has_steamid_user();
  inline void clear_has_steamid_user();
  inline void set_has_rich_presence_kv();
  inline void clear_has_rich_presence_kv();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_user_;
  ::std::string* rich_presence_kv_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRichPresenceInfo_RichPresence* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceInfo : public ::google::protobuf::Message {
 public:
  CMsgClientRichPresenceInfo();
  virtual ~CMsgClientRichPresenceInfo();

  CMsgClientRichPresenceInfo(const CMsgClientRichPresenceInfo& from);

  inline CMsgClientRichPresenceInfo& operator=(const CMsgClientRichPresenceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRichPresenceInfo& default_instance();

  void Swap(CMsgClientRichPresenceInfo* other);

  // implements Message ----------------------------------------------

  CMsgClientRichPresenceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRichPresenceInfo& from);
  void MergeFrom(const CMsgClientRichPresenceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientRichPresenceInfo_RichPresence RichPresence;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  inline int rich_presence_size() const;
  inline void clear_rich_presence();
  static const int kRichPresenceFieldNumber = 1;
  inline const ::CMsgClientRichPresenceInfo_RichPresence& rich_presence(int index) const;
  inline ::CMsgClientRichPresenceInfo_RichPresence* mutable_rich_presence(int index);
  inline ::CMsgClientRichPresenceInfo_RichPresence* add_rich_presence();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >&
      rich_presence() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >*
      mutable_rich_presence();

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence > rich_presence_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRichPresenceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientCheckFileSignature : public ::google::protobuf::Message {
 public:
  CMsgClientCheckFileSignature();
  virtual ~CMsgClientCheckFileSignature();

  CMsgClientCheckFileSignature(const CMsgClientCheckFileSignature& from);

  inline CMsgClientCheckFileSignature& operator=(const CMsgClientCheckFileSignature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCheckFileSignature& default_instance();

  void Swap(CMsgClientCheckFileSignature* other);

  // implements Message ----------------------------------------------

  CMsgClientCheckFileSignature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientCheckFileSignature& from);
  void MergeFrom(const CMsgClientCheckFileSignature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientCheckFileSignature)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 app_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientCheckFileSignature* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientCheckFileSignatureResponse : public ::google::protobuf::Message {
 public:
  CMsgClientCheckFileSignatureResponse();
  virtual ~CMsgClientCheckFileSignatureResponse();

  CMsgClientCheckFileSignatureResponse(const CMsgClientCheckFileSignatureResponse& from);

  inline CMsgClientCheckFileSignatureResponse& operator=(const CMsgClientCheckFileSignatureResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCheckFileSignatureResponse& default_instance();

  void Swap(CMsgClientCheckFileSignatureResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientCheckFileSignatureResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientCheckFileSignatureResponse& from);
  void MergeFrom(const CMsgClientCheckFileSignatureResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 pid = 2;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 2;
  inline ::google::protobuf::uint32 pid() const;
  inline void set_pid(::google::protobuf::uint32 value);

  // optional uint32 eresult = 3;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 3;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional string filename = 4;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 4;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional uint32 esignatureresult = 5;
  inline bool has_esignatureresult() const;
  inline void clear_esignatureresult();
  static const int kEsignatureresultFieldNumber = 5;
  inline ::google::protobuf::uint32 esignatureresult() const;
  inline void set_esignatureresult(::google::protobuf::uint32 value);

  // optional bytes sha_file = 6;
  inline bool has_sha_file() const;
  inline void clear_sha_file();
  static const int kShaFileFieldNumber = 6;
  inline const ::std::string& sha_file() const;
  inline void set_sha_file(const ::std::string& value);
  inline void set_sha_file(const char* value);
  inline void set_sha_file(const void* value, size_t size);
  inline ::std::string* mutable_sha_file();
  inline ::std::string* release_sha_file();
  inline void set_allocated_sha_file(::std::string* sha_file);

  // optional bytes signatureheader = 7;
  inline bool has_signatureheader() const;
  inline void clear_signatureheader();
  static const int kSignatureheaderFieldNumber = 7;
  inline const ::std::string& signatureheader() const;
  inline void set_signatureheader(const ::std::string& value);
  inline void set_signatureheader(const char* value);
  inline void set_signatureheader(const void* value, size_t size);
  inline ::std::string* mutable_signatureheader();
  inline ::std::string* release_signatureheader();
  inline void set_allocated_signatureheader(::std::string* signatureheader);

  // optional uint32 filesize = 8;
  inline bool has_filesize() const;
  inline void clear_filesize();
  static const int kFilesizeFieldNumber = 8;
  inline ::google::protobuf::uint32 filesize() const;
  inline void set_filesize(::google::protobuf::uint32 value);

  // optional uint32 getlasterror = 9;
  inline bool has_getlasterror() const;
  inline void clear_getlasterror();
  static const int kGetlasterrorFieldNumber = 9;
  inline ::google::protobuf::uint32 getlasterror() const;
  inline void set_getlasterror(::google::protobuf::uint32 value);

  // optional uint32 evalvesignaturecheckdetail = 10;
  inline bool has_evalvesignaturecheckdetail() const;
  inline void clear_evalvesignaturecheckdetail();
  static const int kEvalvesignaturecheckdetailFieldNumber = 10;
  inline ::google::protobuf::uint32 evalvesignaturecheckdetail() const;
  inline void set_evalvesignaturecheckdetail(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientCheckFileSignatureResponse)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_esignatureresult();
  inline void clear_has_esignatureresult();
  inline void set_has_sha_file();
  inline void clear_has_sha_file();
  inline void set_has_signatureheader();
  inline void clear_has_signatureheader();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_getlasterror();
  inline void clear_has_getlasterror();
  inline void set_has_evalvesignaturecheckdetail();
  inline void clear_has_evalvesignaturecheckdetail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 pid_;
  ::std::string* filename_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 esignatureresult_;
  ::std::string* sha_file_;
  ::std::string* signatureheader_;
  ::google::protobuf::uint32 filesize_;
  ::google::protobuf::uint32 getlasterror_;
  ::google::protobuf::uint32 evalvesignaturecheckdetail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientCheckFileSignatureResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientReadMachineAuth : public ::google::protobuf::Message {
 public:
  CMsgClientReadMachineAuth();
  virtual ~CMsgClientReadMachineAuth();

  CMsgClientReadMachineAuth(const CMsgClientReadMachineAuth& from);

  inline CMsgClientReadMachineAuth& operator=(const CMsgClientReadMachineAuth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientReadMachineAuth& default_instance();

  void Swap(CMsgClientReadMachineAuth* other);

  // implements Message ----------------------------------------------

  CMsgClientReadMachineAuth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientReadMachineAuth& from);
  void MergeFrom(const CMsgClientReadMachineAuth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional uint32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 cubtoread = 3;
  inline bool has_cubtoread() const;
  inline void clear_cubtoread();
  static const int kCubtoreadFieldNumber = 3;
  inline ::google::protobuf::uint32 cubtoread() const;
  inline void set_cubtoread(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientReadMachineAuth)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_cubtoread();
  inline void clear_has_cubtoread();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 cubtoread_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientReadMachineAuth* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientReadMachineAuthResponse : public ::google::protobuf::Message {
 public:
  CMsgClientReadMachineAuthResponse();
  virtual ~CMsgClientReadMachineAuthResponse();

  CMsgClientReadMachineAuthResponse(const CMsgClientReadMachineAuthResponse& from);

  inline CMsgClientReadMachineAuthResponse& operator=(const CMsgClientReadMachineAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientReadMachineAuthResponse& default_instance();

  void Swap(CMsgClientReadMachineAuthResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientReadMachineAuthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientReadMachineAuthResponse& from);
  void MergeFrom(const CMsgClientReadMachineAuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 filesize = 3;
  inline bool has_filesize() const;
  inline void clear_filesize();
  static const int kFilesizeFieldNumber = 3;
  inline ::google::protobuf::uint32 filesize() const;
  inline void set_filesize(::google::protobuf::uint32 value);

  // optional bytes sha_file = 4;
  inline bool has_sha_file() const;
  inline void clear_sha_file();
  static const int kShaFileFieldNumber = 4;
  inline const ::std::string& sha_file() const;
  inline void set_sha_file(const ::std::string& value);
  inline void set_sha_file(const char* value);
  inline void set_sha_file(const void* value, size_t size);
  inline ::std::string* mutable_sha_file();
  inline ::std::string* release_sha_file();
  inline void set_allocated_sha_file(::std::string* sha_file);

  // optional uint32 getlasterror = 5;
  inline bool has_getlasterror() const;
  inline void clear_getlasterror();
  static const int kGetlasterrorFieldNumber = 5;
  inline ::google::protobuf::uint32 getlasterror() const;
  inline void set_getlasterror(::google::protobuf::uint32 value);

  // optional uint32 offset = 6;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 6;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 cubread = 7;
  inline bool has_cubread() const;
  inline void clear_cubread();
  static const int kCubreadFieldNumber = 7;
  inline ::google::protobuf::uint32 cubread() const;
  inline void set_cubread(::google::protobuf::uint32 value);

  // optional bytes bytes_read = 8;
  inline bool has_bytes_read() const;
  inline void clear_bytes_read();
  static const int kBytesReadFieldNumber = 8;
  inline const ::std::string& bytes_read() const;
  inline void set_bytes_read(const ::std::string& value);
  inline void set_bytes_read(const char* value);
  inline void set_bytes_read(const void* value, size_t size);
  inline ::std::string* mutable_bytes_read();
  inline ::std::string* release_bytes_read();
  inline void set_allocated_bytes_read(::std::string* bytes_read);

  // optional string filename_sentry = 9;
  inline bool has_filename_sentry() const;
  inline void clear_filename_sentry();
  static const int kFilenameSentryFieldNumber = 9;
  inline const ::std::string& filename_sentry() const;
  inline void set_filename_sentry(const ::std::string& value);
  inline void set_filename_sentry(const char* value);
  inline void set_filename_sentry(const char* value, size_t size);
  inline ::std::string* mutable_filename_sentry();
  inline ::std::string* release_filename_sentry();
  inline void set_allocated_filename_sentry(::std::string* filename_sentry);

  // @@protoc_insertion_point(class_scope:CMsgClientReadMachineAuthResponse)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_sha_file();
  inline void clear_has_sha_file();
  inline void set_has_getlasterror();
  inline void clear_has_getlasterror();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_cubread();
  inline void clear_has_cubread();
  inline void set_has_bytes_read();
  inline void clear_has_bytes_read();
  inline void set_has_filename_sentry();
  inline void clear_has_filename_sentry();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 filesize_;
  ::std::string* sha_file_;
  ::google::protobuf::uint32 getlasterror_;
  ::google::protobuf::uint32 offset_;
  ::std::string* bytes_read_;
  ::std::string* filename_sentry_;
  ::google::protobuf::uint32 cubread_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientReadMachineAuthResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUpdateMachineAuth : public ::google::protobuf::Message {
 public:
  CMsgClientUpdateMachineAuth();
  virtual ~CMsgClientUpdateMachineAuth();

  CMsgClientUpdateMachineAuth(const CMsgClientUpdateMachineAuth& from);

  inline CMsgClientUpdateMachineAuth& operator=(const CMsgClientUpdateMachineAuth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUpdateMachineAuth& default_instance();

  void Swap(CMsgClientUpdateMachineAuth* other);

  // implements Message ----------------------------------------------

  CMsgClientUpdateMachineAuth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUpdateMachineAuth& from);
  void MergeFrom(const CMsgClientUpdateMachineAuth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional uint32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 cubtowrite = 3;
  inline bool has_cubtowrite() const;
  inline void clear_cubtowrite();
  static const int kCubtowriteFieldNumber = 3;
  inline ::google::protobuf::uint32 cubtowrite() const;
  inline void set_cubtowrite(::google::protobuf::uint32 value);

  // optional bytes bytes = 4;
  inline bool has_bytes() const;
  inline void clear_bytes();
  static const int kBytesFieldNumber = 4;
  inline const ::std::string& bytes() const;
  inline void set_bytes(const ::std::string& value);
  inline void set_bytes(const char* value);
  inline void set_bytes(const void* value, size_t size);
  inline ::std::string* mutable_bytes();
  inline ::std::string* release_bytes();
  inline void set_allocated_bytes(::std::string* bytes);

  // optional uint32 otp_type = 5;
  inline bool has_otp_type() const;
  inline void clear_otp_type();
  static const int kOtpTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 otp_type() const;
  inline void set_otp_type(::google::protobuf::uint32 value);

  // optional string otp_identifier = 6;
  inline bool has_otp_identifier() const;
  inline void clear_otp_identifier();
  static const int kOtpIdentifierFieldNumber = 6;
  inline const ::std::string& otp_identifier() const;
  inline void set_otp_identifier(const ::std::string& value);
  inline void set_otp_identifier(const char* value);
  inline void set_otp_identifier(const char* value, size_t size);
  inline ::std::string* mutable_otp_identifier();
  inline ::std::string* release_otp_identifier();
  inline void set_allocated_otp_identifier(::std::string* otp_identifier);

  // optional bytes otp_sharedsecret = 7;
  inline bool has_otp_sharedsecret() const;
  inline void clear_otp_sharedsecret();
  static const int kOtpSharedsecretFieldNumber = 7;
  inline const ::std::string& otp_sharedsecret() const;
  inline void set_otp_sharedsecret(const ::std::string& value);
  inline void set_otp_sharedsecret(const char* value);
  inline void set_otp_sharedsecret(const void* value, size_t size);
  inline ::std::string* mutable_otp_sharedsecret();
  inline ::std::string* release_otp_sharedsecret();
  inline void set_allocated_otp_sharedsecret(::std::string* otp_sharedsecret);

  // optional uint32 otp_timedrift = 8;
  inline bool has_otp_timedrift() const;
  inline void clear_otp_timedrift();
  static const int kOtpTimedriftFieldNumber = 8;
  inline ::google::protobuf::uint32 otp_timedrift() const;
  inline void set_otp_timedrift(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateMachineAuth)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_cubtowrite();
  inline void clear_has_cubtowrite();
  inline void set_has_bytes();
  inline void clear_has_bytes();
  inline void set_has_otp_type();
  inline void clear_has_otp_type();
  inline void set_has_otp_identifier();
  inline void clear_has_otp_identifier();
  inline void set_has_otp_sharedsecret();
  inline void clear_has_otp_sharedsecret();
  inline void set_has_otp_timedrift();
  inline void clear_has_otp_timedrift();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 cubtowrite_;
  ::std::string* bytes_;
  ::std::string* otp_identifier_;
  ::google::protobuf::uint32 otp_type_;
  ::google::protobuf::uint32 otp_timedrift_;
  ::std::string* otp_sharedsecret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUpdateMachineAuth* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUpdateMachineAuthResponse : public ::google::protobuf::Message {
 public:
  CMsgClientUpdateMachineAuthResponse();
  virtual ~CMsgClientUpdateMachineAuthResponse();

  CMsgClientUpdateMachineAuthResponse(const CMsgClientUpdateMachineAuthResponse& from);

  inline CMsgClientUpdateMachineAuthResponse& operator=(const CMsgClientUpdateMachineAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUpdateMachineAuthResponse& default_instance();

  void Swap(CMsgClientUpdateMachineAuthResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientUpdateMachineAuthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUpdateMachineAuthResponse& from);
  void MergeFrom(const CMsgClientUpdateMachineAuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 filesize = 3;
  inline bool has_filesize() const;
  inline void clear_filesize();
  static const int kFilesizeFieldNumber = 3;
  inline ::google::protobuf::uint32 filesize() const;
  inline void set_filesize(::google::protobuf::uint32 value);

  // optional bytes sha_file = 4;
  inline bool has_sha_file() const;
  inline void clear_sha_file();
  static const int kShaFileFieldNumber = 4;
  inline const ::std::string& sha_file() const;
  inline void set_sha_file(const ::std::string& value);
  inline void set_sha_file(const char* value);
  inline void set_sha_file(const void* value, size_t size);
  inline ::std::string* mutable_sha_file();
  inline ::std::string* release_sha_file();
  inline void set_allocated_sha_file(::std::string* sha_file);

  // optional uint32 getlasterror = 5;
  inline bool has_getlasterror() const;
  inline void clear_getlasterror();
  static const int kGetlasterrorFieldNumber = 5;
  inline ::google::protobuf::uint32 getlasterror() const;
  inline void set_getlasterror(::google::protobuf::uint32 value);

  // optional uint32 offset = 6;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 6;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // optional uint32 cubwrote = 7;
  inline bool has_cubwrote() const;
  inline void clear_cubwrote();
  static const int kCubwroteFieldNumber = 7;
  inline ::google::protobuf::uint32 cubwrote() const;
  inline void set_cubwrote(::google::protobuf::uint32 value);

  // optional int32 otp_type = 8;
  inline bool has_otp_type() const;
  inline void clear_otp_type();
  static const int kOtpTypeFieldNumber = 8;
  inline ::google::protobuf::int32 otp_type() const;
  inline void set_otp_type(::google::protobuf::int32 value);

  // optional uint32 otp_value = 9;
  inline bool has_otp_value() const;
  inline void clear_otp_value();
  static const int kOtpValueFieldNumber = 9;
  inline ::google::protobuf::uint32 otp_value() const;
  inline void set_otp_value(::google::protobuf::uint32 value);

  // optional string otp_identifier = 10;
  inline bool has_otp_identifier() const;
  inline void clear_otp_identifier();
  static const int kOtpIdentifierFieldNumber = 10;
  inline const ::std::string& otp_identifier() const;
  inline void set_otp_identifier(const ::std::string& value);
  inline void set_otp_identifier(const char* value);
  inline void set_otp_identifier(const char* value, size_t size);
  inline ::std::string* mutable_otp_identifier();
  inline ::std::string* release_otp_identifier();
  inline void set_allocated_otp_identifier(::std::string* otp_identifier);

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateMachineAuthResponse)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_sha_file();
  inline void clear_has_sha_file();
  inline void set_has_getlasterror();
  inline void clear_has_getlasterror();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_cubwrote();
  inline void clear_has_cubwrote();
  inline void set_has_otp_type();
  inline void clear_has_otp_type();
  inline void set_has_otp_value();
  inline void clear_has_otp_value();
  inline void set_has_otp_identifier();
  inline void clear_has_otp_identifier();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 filesize_;
  ::std::string* sha_file_;
  ::google::protobuf::uint32 getlasterror_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 cubwrote_;
  ::google::protobuf::int32 otp_type_;
  ::std::string* otp_identifier_;
  ::google::protobuf::uint32 otp_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUpdateMachineAuthResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestMachineAuth : public ::google::protobuf::Message {
 public:
  CMsgClientRequestMachineAuth();
  virtual ~CMsgClientRequestMachineAuth();

  CMsgClientRequestMachineAuth(const CMsgClientRequestMachineAuth& from);

  inline CMsgClientRequestMachineAuth& operator=(const CMsgClientRequestMachineAuth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestMachineAuth& default_instance();

  void Swap(CMsgClientRequestMachineAuth* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestMachineAuth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestMachineAuth& from);
  void MergeFrom(const CMsgClientRequestMachineAuth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFilenameFieldNumber = 1;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // optional uint32 eresult_sentryfile = 2;
  inline bool has_eresult_sentryfile() const;
  inline void clear_eresult_sentryfile();
  static const int kEresultSentryfileFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult_sentryfile() const;
  inline void set_eresult_sentryfile(::google::protobuf::uint32 value);

  // optional uint32 filesize = 3;
  inline bool has_filesize() const;
  inline void clear_filesize();
  static const int kFilesizeFieldNumber = 3;
  inline ::google::protobuf::uint32 filesize() const;
  inline void set_filesize(::google::protobuf::uint32 value);

  // optional bytes sha_sentryfile = 4;
  inline bool has_sha_sentryfile() const;
  inline void clear_sha_sentryfile();
  static const int kShaSentryfileFieldNumber = 4;
  inline const ::std::string& sha_sentryfile() const;
  inline void set_sha_sentryfile(const ::std::string& value);
  inline void set_sha_sentryfile(const char* value);
  inline void set_sha_sentryfile(const void* value, size_t size);
  inline ::std::string* mutable_sha_sentryfile();
  inline ::std::string* release_sha_sentryfile();
  inline void set_allocated_sha_sentryfile(::std::string* sha_sentryfile);

  // optional int32 lock_account_action = 6;
  inline bool has_lock_account_action() const;
  inline void clear_lock_account_action();
  static const int kLockAccountActionFieldNumber = 6;
  inline ::google::protobuf::int32 lock_account_action() const;
  inline void set_lock_account_action(::google::protobuf::int32 value);

  // optional uint32 otp_type = 7;
  inline bool has_otp_type() const;
  inline void clear_otp_type();
  static const int kOtpTypeFieldNumber = 7;
  inline ::google::protobuf::uint32 otp_type() const;
  inline void set_otp_type(::google::protobuf::uint32 value);

  // optional string otp_identifier = 8;
  inline bool has_otp_identifier() const;
  inline void clear_otp_identifier();
  static const int kOtpIdentifierFieldNumber = 8;
  inline const ::std::string& otp_identifier() const;
  inline void set_otp_identifier(const ::std::string& value);
  inline void set_otp_identifier(const char* value);
  inline void set_otp_identifier(const char* value, size_t size);
  inline ::std::string* mutable_otp_identifier();
  inline ::std::string* release_otp_identifier();
  inline void set_allocated_otp_identifier(::std::string* otp_identifier);

  // optional bytes otp_sharedsecret = 9;
  inline bool has_otp_sharedsecret() const;
  inline void clear_otp_sharedsecret();
  static const int kOtpSharedsecretFieldNumber = 9;
  inline const ::std::string& otp_sharedsecret() const;
  inline void set_otp_sharedsecret(const ::std::string& value);
  inline void set_otp_sharedsecret(const char* value);
  inline void set_otp_sharedsecret(const void* value, size_t size);
  inline ::std::string* mutable_otp_sharedsecret();
  inline ::std::string* release_otp_sharedsecret();
  inline void set_allocated_otp_sharedsecret(::std::string* otp_sharedsecret);

  // optional uint32 otp_value = 10;
  inline bool has_otp_value() const;
  inline void clear_otp_value();
  static const int kOtpValueFieldNumber = 10;
  inline ::google::protobuf::uint32 otp_value() const;
  inline void set_otp_value(::google::protobuf::uint32 value);

  // optional string machine_name = 11;
  inline bool has_machine_name() const;
  inline void clear_machine_name();
  static const int kMachineNameFieldNumber = 11;
  inline const ::std::string& machine_name() const;
  inline void set_machine_name(const ::std::string& value);
  inline void set_machine_name(const char* value);
  inline void set_machine_name(const char* value, size_t size);
  inline ::std::string* mutable_machine_name();
  inline ::std::string* release_machine_name();
  inline void set_allocated_machine_name(::std::string* machine_name);

  // optional string machine_name_userchosen = 12;
  inline bool has_machine_name_userchosen() const;
  inline void clear_machine_name_userchosen();
  static const int kMachineNameUserchosenFieldNumber = 12;
  inline const ::std::string& machine_name_userchosen() const;
  inline void set_machine_name_userchosen(const ::std::string& value);
  inline void set_machine_name_userchosen(const char* value);
  inline void set_machine_name_userchosen(const char* value, size_t size);
  inline ::std::string* mutable_machine_name_userchosen();
  inline ::std::string* release_machine_name_userchosen();
  inline void set_allocated_machine_name_userchosen(::std::string* machine_name_userchosen);

  // @@protoc_insertion_point(class_scope:CMsgClientRequestMachineAuth)
 private:
  inline void set_has_filename();
  inline void clear_has_filename();
  inline void set_has_eresult_sentryfile();
  inline void clear_has_eresult_sentryfile();
  inline void set_has_filesize();
  inline void clear_has_filesize();
  inline void set_has_sha_sentryfile();
  inline void clear_has_sha_sentryfile();
  inline void set_has_lock_account_action();
  inline void clear_has_lock_account_action();
  inline void set_has_otp_type();
  inline void clear_has_otp_type();
  inline void set_has_otp_identifier();
  inline void clear_has_otp_identifier();
  inline void set_has_otp_sharedsecret();
  inline void clear_has_otp_sharedsecret();
  inline void set_has_otp_value();
  inline void clear_has_otp_value();
  inline void set_has_machine_name();
  inline void clear_has_machine_name();
  inline void set_has_machine_name_userchosen();
  inline void clear_has_machine_name_userchosen();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* filename_;
  ::google::protobuf::uint32 eresult_sentryfile_;
  ::google::protobuf::uint32 filesize_;
  ::std::string* sha_sentryfile_;
  ::google::protobuf::int32 lock_account_action_;
  ::google::protobuf::uint32 otp_type_;
  ::std::string* otp_identifier_;
  ::std::string* otp_sharedsecret_;
  ::std::string* machine_name_;
  ::std::string* machine_name_userchosen_;
  ::google::protobuf::uint32 otp_value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestMachineAuth* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestMachineAuthResponse : public ::google::protobuf::Message {
 public:
  CMsgClientRequestMachineAuthResponse();
  virtual ~CMsgClientRequestMachineAuthResponse();

  CMsgClientRequestMachineAuthResponse(const CMsgClientRequestMachineAuthResponse& from);

  inline CMsgClientRequestMachineAuthResponse& operator=(const CMsgClientRequestMachineAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestMachineAuthResponse& default_instance();

  void Swap(CMsgClientRequestMachineAuthResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestMachineAuthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestMachineAuthResponse& from);
  void MergeFrom(const CMsgClientRequestMachineAuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientRequestMachineAuthResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestMachineAuthResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRegisterKey : public ::google::protobuf::Message {
 public:
  CMsgClientRegisterKey();
  virtual ~CMsgClientRegisterKey();

  CMsgClientRegisterKey(const CMsgClientRegisterKey& from);

  inline CMsgClientRegisterKey& operator=(const CMsgClientRegisterKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRegisterKey& default_instance();

  void Swap(CMsgClientRegisterKey* other);

  // implements Message ----------------------------------------------

  CMsgClientRegisterKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRegisterKey& from);
  void MergeFrom(const CMsgClientRegisterKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:CMsgClientRegisterKey)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRegisterKey* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientPurchaseResponse : public ::google::protobuf::Message {
 public:
  CMsgClientPurchaseResponse();
  virtual ~CMsgClientPurchaseResponse();

  CMsgClientPurchaseResponse(const CMsgClientPurchaseResponse& from);

  inline CMsgClientPurchaseResponse& operator=(const CMsgClientPurchaseResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPurchaseResponse& default_instance();

  void Swap(CMsgClientPurchaseResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientPurchaseResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientPurchaseResponse& from);
  void MergeFrom(const CMsgClientPurchaseResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 purchase_result_details = 2;
  inline bool has_purchase_result_details() const;
  inline void clear_purchase_result_details();
  static const int kPurchaseResultDetailsFieldNumber = 2;
  inline ::google::protobuf::int32 purchase_result_details() const;
  inline void set_purchase_result_details(::google::protobuf::int32 value);

  // optional bytes purchase_receipt_info = 3;
  inline bool has_purchase_receipt_info() const;
  inline void clear_purchase_receipt_info();
  static const int kPurchaseReceiptInfoFieldNumber = 3;
  inline const ::std::string& purchase_receipt_info() const;
  inline void set_purchase_receipt_info(const ::std::string& value);
  inline void set_purchase_receipt_info(const char* value);
  inline void set_purchase_receipt_info(const void* value, size_t size);
  inline ::std::string* mutable_purchase_receipt_info();
  inline ::std::string* release_purchase_receipt_info();
  inline void set_allocated_purchase_receipt_info(::std::string* purchase_receipt_info);

  // @@protoc_insertion_point(class_scope:CMsgClientPurchaseResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_purchase_result_details();
  inline void clear_has_purchase_result_details();
  inline void set_has_purchase_receipt_info();
  inline void clear_has_purchase_receipt_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 purchase_result_details_;
  ::std::string* purchase_receipt_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientPurchaseResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientActivateOEMLicense : public ::google::protobuf::Message {
 public:
  CMsgClientActivateOEMLicense();
  virtual ~CMsgClientActivateOEMLicense();

  CMsgClientActivateOEMLicense(const CMsgClientActivateOEMLicense& from);

  inline CMsgClientActivateOEMLicense& operator=(const CMsgClientActivateOEMLicense& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientActivateOEMLicense& default_instance();

  void Swap(CMsgClientActivateOEMLicense* other);

  // implements Message ----------------------------------------------

  CMsgClientActivateOEMLicense* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientActivateOEMLicense& from);
  void MergeFrom(const CMsgClientActivateOEMLicense& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bios_manufacturer = 1;
  inline bool has_bios_manufacturer() const;
  inline void clear_bios_manufacturer();
  static const int kBiosManufacturerFieldNumber = 1;
  inline const ::std::string& bios_manufacturer() const;
  inline void set_bios_manufacturer(const ::std::string& value);
  inline void set_bios_manufacturer(const char* value);
  inline void set_bios_manufacturer(const char* value, size_t size);
  inline ::std::string* mutable_bios_manufacturer();
  inline ::std::string* release_bios_manufacturer();
  inline void set_allocated_bios_manufacturer(::std::string* bios_manufacturer);

  // optional string bios_serialnumber = 2;
  inline bool has_bios_serialnumber() const;
  inline void clear_bios_serialnumber();
  static const int kBiosSerialnumberFieldNumber = 2;
  inline const ::std::string& bios_serialnumber() const;
  inline void set_bios_serialnumber(const ::std::string& value);
  inline void set_bios_serialnumber(const char* value);
  inline void set_bios_serialnumber(const char* value, size_t size);
  inline ::std::string* mutable_bios_serialnumber();
  inline ::std::string* release_bios_serialnumber();
  inline void set_allocated_bios_serialnumber(::std::string* bios_serialnumber);

  // optional bytes license_file = 3;
  inline bool has_license_file() const;
  inline void clear_license_file();
  static const int kLicenseFileFieldNumber = 3;
  inline const ::std::string& license_file() const;
  inline void set_license_file(const ::std::string& value);
  inline void set_license_file(const char* value);
  inline void set_license_file(const void* value, size_t size);
  inline ::std::string* mutable_license_file();
  inline ::std::string* release_license_file();
  inline void set_allocated_license_file(::std::string* license_file);

  // optional string mainboard_manufacturer = 4;
  inline bool has_mainboard_manufacturer() const;
  inline void clear_mainboard_manufacturer();
  static const int kMainboardManufacturerFieldNumber = 4;
  inline const ::std::string& mainboard_manufacturer() const;
  inline void set_mainboard_manufacturer(const ::std::string& value);
  inline void set_mainboard_manufacturer(const char* value);
  inline void set_mainboard_manufacturer(const char* value, size_t size);
  inline ::std::string* mutable_mainboard_manufacturer();
  inline ::std::string* release_mainboard_manufacturer();
  inline void set_allocated_mainboard_manufacturer(::std::string* mainboard_manufacturer);

  // optional string mainboard_product = 5;
  inline bool has_mainboard_product() const;
  inline void clear_mainboard_product();
  static const int kMainboardProductFieldNumber = 5;
  inline const ::std::string& mainboard_product() const;
  inline void set_mainboard_product(const ::std::string& value);
  inline void set_mainboard_product(const char* value);
  inline void set_mainboard_product(const char* value, size_t size);
  inline ::std::string* mutable_mainboard_product();
  inline ::std::string* release_mainboard_product();
  inline void set_allocated_mainboard_product(::std::string* mainboard_product);

  // optional string mainboard_serialnumber = 6;
  inline bool has_mainboard_serialnumber() const;
  inline void clear_mainboard_serialnumber();
  static const int kMainboardSerialnumberFieldNumber = 6;
  inline const ::std::string& mainboard_serialnumber() const;
  inline void set_mainboard_serialnumber(const ::std::string& value);
  inline void set_mainboard_serialnumber(const char* value);
  inline void set_mainboard_serialnumber(const char* value, size_t size);
  inline ::std::string* mutable_mainboard_serialnumber();
  inline ::std::string* release_mainboard_serialnumber();
  inline void set_allocated_mainboard_serialnumber(::std::string* mainboard_serialnumber);

  // @@protoc_insertion_point(class_scope:CMsgClientActivateOEMLicense)
 private:
  inline void set_has_bios_manufacturer();
  inline void clear_has_bios_manufacturer();
  inline void set_has_bios_serialnumber();
  inline void clear_has_bios_serialnumber();
  inline void set_has_license_file();
  inline void clear_has_license_file();
  inline void set_has_mainboard_manufacturer();
  inline void clear_has_mainboard_manufacturer();
  inline void set_has_mainboard_product();
  inline void clear_has_mainboard_product();
  inline void set_has_mainboard_serialnumber();
  inline void clear_has_mainboard_serialnumber();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* bios_manufacturer_;
  ::std::string* bios_serialnumber_;
  ::std::string* license_file_;
  ::std::string* mainboard_manufacturer_;
  ::std::string* mainboard_product_;
  ::std::string* mainboard_serialnumber_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientActivateOEMLicense* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRegisterOEMMachine : public ::google::protobuf::Message {
 public:
  CMsgClientRegisterOEMMachine();
  virtual ~CMsgClientRegisterOEMMachine();

  CMsgClientRegisterOEMMachine(const CMsgClientRegisterOEMMachine& from);

  inline CMsgClientRegisterOEMMachine& operator=(const CMsgClientRegisterOEMMachine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRegisterOEMMachine& default_instance();

  void Swap(CMsgClientRegisterOEMMachine* other);

  // implements Message ----------------------------------------------

  CMsgClientRegisterOEMMachine* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRegisterOEMMachine& from);
  void MergeFrom(const CMsgClientRegisterOEMMachine& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes oem_register_file = 1;
  inline bool has_oem_register_file() const;
  inline void clear_oem_register_file();
  static const int kOemRegisterFileFieldNumber = 1;
  inline const ::std::string& oem_register_file() const;
  inline void set_oem_register_file(const ::std::string& value);
  inline void set_oem_register_file(const char* value);
  inline void set_oem_register_file(const void* value, size_t size);
  inline ::std::string* mutable_oem_register_file();
  inline ::std::string* release_oem_register_file();
  inline void set_allocated_oem_register_file(::std::string* oem_register_file);

  // @@protoc_insertion_point(class_scope:CMsgClientRegisterOEMMachine)
 private:
  inline void set_has_oem_register_file();
  inline void clear_has_oem_register_file();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* oem_register_file_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRegisterOEMMachine* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRegisterOEMMachineResponse : public ::google::protobuf::Message {
 public:
  CMsgClientRegisterOEMMachineResponse();
  virtual ~CMsgClientRegisterOEMMachineResponse();

  CMsgClientRegisterOEMMachineResponse(const CMsgClientRegisterOEMMachineResponse& from);

  inline CMsgClientRegisterOEMMachineResponse& operator=(const CMsgClientRegisterOEMMachineResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRegisterOEMMachineResponse& default_instance();

  void Swap(CMsgClientRegisterOEMMachineResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientRegisterOEMMachineResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRegisterOEMMachineResponse& from);
  void MergeFrom(const CMsgClientRegisterOEMMachineResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientRegisterOEMMachineResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRegisterOEMMachineResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientPurchaseWithMachineID : public ::google::protobuf::Message {
 public:
  CMsgClientPurchaseWithMachineID();
  virtual ~CMsgClientPurchaseWithMachineID();

  CMsgClientPurchaseWithMachineID(const CMsgClientPurchaseWithMachineID& from);

  inline CMsgClientPurchaseWithMachineID& operator=(const CMsgClientPurchaseWithMachineID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPurchaseWithMachineID& default_instance();

  void Swap(CMsgClientPurchaseWithMachineID* other);

  // implements Message ----------------------------------------------

  CMsgClientPurchaseWithMachineID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientPurchaseWithMachineID& from);
  void MergeFrom(const CMsgClientPurchaseWithMachineID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 package_id = 1;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 package_id() const;
  inline void set_package_id(::google::protobuf::uint32 value);

  // optional bytes machine_info = 2;
  inline bool has_machine_info() const;
  inline void clear_machine_info();
  static const int kMachineInfoFieldNumber = 2;
  inline const ::std::string& machine_info() const;
  inline void set_machine_info(const ::std::string& value);
  inline void set_machine_info(const char* value);
  inline void set_machine_info(const void* value, size_t size);
  inline ::std::string* mutable_machine_info();
  inline ::std::string* release_machine_info();
  inline void set_allocated_machine_info(::std::string* machine_info);

  // @@protoc_insertion_point(class_scope:CMsgClientPurchaseWithMachineID)
 private:
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_machine_info();
  inline void clear_has_machine_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* machine_info_;
  ::google::protobuf::uint32 package_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientPurchaseWithMachineID* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTrading_InitiateTradeRequest : public ::google::protobuf::Message {
 public:
  CMsgTrading_InitiateTradeRequest();
  virtual ~CMsgTrading_InitiateTradeRequest();

  CMsgTrading_InitiateTradeRequest(const CMsgTrading_InitiateTradeRequest& from);

  inline CMsgTrading_InitiateTradeRequest& operator=(const CMsgTrading_InitiateTradeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTrading_InitiateTradeRequest& default_instance();

  void Swap(CMsgTrading_InitiateTradeRequest* other);

  // implements Message ----------------------------------------------

  CMsgTrading_InitiateTradeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTrading_InitiateTradeRequest& from);
  void MergeFrom(const CMsgTrading_InitiateTradeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trade_request_id = 1;
  inline bool has_trade_request_id() const;
  inline void clear_trade_request_id();
  static const int kTradeRequestIdFieldNumber = 1;
  inline ::google::protobuf::uint32 trade_request_id() const;
  inline void set_trade_request_id(::google::protobuf::uint32 value);

  // optional uint64 other_steamid = 2;
  inline bool has_other_steamid() const;
  inline void clear_other_steamid();
  static const int kOtherSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 other_steamid() const;
  inline void set_other_steamid(::google::protobuf::uint64 value);

  // optional string other_name = 3;
  inline bool has_other_name() const;
  inline void clear_other_name();
  static const int kOtherNameFieldNumber = 3;
  inline const ::std::string& other_name() const;
  inline void set_other_name(const ::std::string& value);
  inline void set_other_name(const char* value);
  inline void set_other_name(const char* value, size_t size);
  inline ::std::string* mutable_other_name();
  inline ::std::string* release_other_name();
  inline void set_allocated_other_name(::std::string* other_name);

  // @@protoc_insertion_point(class_scope:CMsgTrading_InitiateTradeRequest)
 private:
  inline void set_has_trade_request_id();
  inline void clear_has_trade_request_id();
  inline void set_has_other_steamid();
  inline void clear_has_other_steamid();
  inline void set_has_other_name();
  inline void clear_has_other_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 other_steamid_;
  ::std::string* other_name_;
  ::google::protobuf::uint32 trade_request_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgTrading_InitiateTradeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTrading_InitiateTradeResponse : public ::google::protobuf::Message {
 public:
  CMsgTrading_InitiateTradeResponse();
  virtual ~CMsgTrading_InitiateTradeResponse();

  CMsgTrading_InitiateTradeResponse(const CMsgTrading_InitiateTradeResponse& from);

  inline CMsgTrading_InitiateTradeResponse& operator=(const CMsgTrading_InitiateTradeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTrading_InitiateTradeResponse& default_instance();

  void Swap(CMsgTrading_InitiateTradeResponse* other);

  // implements Message ----------------------------------------------

  CMsgTrading_InitiateTradeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTrading_InitiateTradeResponse& from);
  void MergeFrom(const CMsgTrading_InitiateTradeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 response = 1;
  inline bool has_response() const;
  inline void clear_response();
  static const int kResponseFieldNumber = 1;
  inline ::google::protobuf::uint32 response() const;
  inline void set_response(::google::protobuf::uint32 value);

  // optional uint32 trade_request_id = 2;
  inline bool has_trade_request_id() const;
  inline void clear_trade_request_id();
  static const int kTradeRequestIdFieldNumber = 2;
  inline ::google::protobuf::uint32 trade_request_id() const;
  inline void set_trade_request_id(::google::protobuf::uint32 value);

  // optional uint64 other_steamid = 3;
  inline bool has_other_steamid() const;
  inline void clear_other_steamid();
  static const int kOtherSteamidFieldNumber = 3;
  inline ::google::protobuf::uint64 other_steamid() const;
  inline void set_other_steamid(::google::protobuf::uint64 value);

  // optional uint32 steamguard_required_days = 4;
  inline bool has_steamguard_required_days() const;
  inline void clear_steamguard_required_days();
  static const int kSteamguardRequiredDaysFieldNumber = 4;
  inline ::google::protobuf::uint32 steamguard_required_days() const;
  inline void set_steamguard_required_days(::google::protobuf::uint32 value);

  // optional uint32 new_device_cooldown_days = 5;
  inline bool has_new_device_cooldown_days() const;
  inline void clear_new_device_cooldown_days();
  static const int kNewDeviceCooldownDaysFieldNumber = 5;
  inline ::google::protobuf::uint32 new_device_cooldown_days() const;
  inline void set_new_device_cooldown_days(::google::protobuf::uint32 value);

  // optional uint32 default_password_reset_probation_days = 6;
  inline bool has_default_password_reset_probation_days() const;
  inline void clear_default_password_reset_probation_days();
  static const int kDefaultPasswordResetProbationDaysFieldNumber = 6;
  inline ::google::protobuf::uint32 default_password_reset_probation_days() const;
  inline void set_default_password_reset_probation_days(::google::protobuf::uint32 value);

  // optional uint32 password_reset_probation_days = 7;
  inline bool has_password_reset_probation_days() const;
  inline void clear_password_reset_probation_days();
  static const int kPasswordResetProbationDaysFieldNumber = 7;
  inline ::google::protobuf::uint32 password_reset_probation_days() const;
  inline void set_password_reset_probation_days(::google::protobuf::uint32 value);

  // optional uint32 default_email_change_probation_days = 8;
  inline bool has_default_email_change_probation_days() const;
  inline void clear_default_email_change_probation_days();
  static const int kDefaultEmailChangeProbationDaysFieldNumber = 8;
  inline ::google::protobuf::uint32 default_email_change_probation_days() const;
  inline void set_default_email_change_probation_days(::google::protobuf::uint32 value);

  // optional uint32 email_change_probation_days = 9;
  inline bool has_email_change_probation_days() const;
  inline void clear_email_change_probation_days();
  static const int kEmailChangeProbationDaysFieldNumber = 9;
  inline ::google::protobuf::uint32 email_change_probation_days() const;
  inline void set_email_change_probation_days(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgTrading_InitiateTradeResponse)
 private:
  inline void set_has_response();
  inline void clear_has_response();
  inline void set_has_trade_request_id();
  inline void clear_has_trade_request_id();
  inline void set_has_other_steamid();
  inline void clear_has_other_steamid();
  inline void set_has_steamguard_required_days();
  inline void clear_has_steamguard_required_days();
  inline void set_has_new_device_cooldown_days();
  inline void clear_has_new_device_cooldown_days();
  inline void set_has_default_password_reset_probation_days();
  inline void clear_has_default_password_reset_probation_days();
  inline void set_has_password_reset_probation_days();
  inline void clear_has_password_reset_probation_days();
  inline void set_has_default_email_change_probation_days();
  inline void clear_has_default_email_change_probation_days();
  inline void set_has_email_change_probation_days();
  inline void clear_has_email_change_probation_days();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 response_;
  ::google::protobuf::uint32 trade_request_id_;
  ::google::protobuf::uint64 other_steamid_;
  ::google::protobuf::uint32 steamguard_required_days_;
  ::google::protobuf::uint32 new_device_cooldown_days_;
  ::google::protobuf::uint32 default_password_reset_probation_days_;
  ::google::protobuf::uint32 password_reset_probation_days_;
  ::google::protobuf::uint32 default_email_change_probation_days_;
  ::google::protobuf::uint32 email_change_probation_days_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgTrading_InitiateTradeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTrading_CancelTradeRequest : public ::google::protobuf::Message {
 public:
  CMsgTrading_CancelTradeRequest();
  virtual ~CMsgTrading_CancelTradeRequest();

  CMsgTrading_CancelTradeRequest(const CMsgTrading_CancelTradeRequest& from);

  inline CMsgTrading_CancelTradeRequest& operator=(const CMsgTrading_CancelTradeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTrading_CancelTradeRequest& default_instance();

  void Swap(CMsgTrading_CancelTradeRequest* other);

  // implements Message ----------------------------------------------

  CMsgTrading_CancelTradeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTrading_CancelTradeRequest& from);
  void MergeFrom(const CMsgTrading_CancelTradeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 other_steamid = 1;
  inline bool has_other_steamid() const;
  inline void clear_other_steamid();
  static const int kOtherSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 other_steamid() const;
  inline void set_other_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTrading_CancelTradeRequest)
 private:
  inline void set_has_other_steamid();
  inline void clear_has_other_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 other_steamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgTrading_CancelTradeRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgTrading_StartSession : public ::google::protobuf::Message {
 public:
  CMsgTrading_StartSession();
  virtual ~CMsgTrading_StartSession();

  CMsgTrading_StartSession(const CMsgTrading_StartSession& from);

  inline CMsgTrading_StartSession& operator=(const CMsgTrading_StartSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgTrading_StartSession& default_instance();

  void Swap(CMsgTrading_StartSession* other);

  // implements Message ----------------------------------------------

  CMsgTrading_StartSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgTrading_StartSession& from);
  void MergeFrom(const CMsgTrading_StartSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 other_steamid = 1;
  inline bool has_other_steamid() const;
  inline void clear_other_steamid();
  static const int kOtherSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 other_steamid() const;
  inline void set_other_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgTrading_StartSession)
 private:
  inline void set_has_other_steamid();
  inline void clear_has_other_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 other_steamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgTrading_StartSession* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetCDNAuthToken : public ::google::protobuf::Message {
 public:
  CMsgClientGetCDNAuthToken();
  virtual ~CMsgClientGetCDNAuthToken();

  CMsgClientGetCDNAuthToken(const CMsgClientGetCDNAuthToken& from);

  inline CMsgClientGetCDNAuthToken& operator=(const CMsgClientGetCDNAuthToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetCDNAuthToken& default_instance();

  void Swap(CMsgClientGetCDNAuthToken* other);

  // implements Message ----------------------------------------------

  CMsgClientGetCDNAuthToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetCDNAuthToken& from);
  void MergeFrom(const CMsgClientGetCDNAuthToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 depot_id = 1;
  inline bool has_depot_id() const;
  inline void clear_depot_id();
  static const int kDepotIdFieldNumber = 1;
  inline ::google::protobuf::uint32 depot_id() const;
  inline void set_depot_id(::google::protobuf::uint32 value);

  // optional string host_name = 2;
  inline bool has_host_name() const;
  inline void clear_host_name();
  static const int kHostNameFieldNumber = 2;
  inline const ::std::string& host_name() const;
  inline void set_host_name(const ::std::string& value);
  inline void set_host_name(const char* value);
  inline void set_host_name(const char* value, size_t size);
  inline ::std::string* mutable_host_name();
  inline ::std::string* release_host_name();
  inline void set_allocated_host_name(::std::string* host_name);

  // optional uint32 app_id = 3;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientGetCDNAuthToken)
 private:
  inline void set_has_depot_id();
  inline void clear_has_depot_id();
  inline void set_has_host_name();
  inline void clear_has_host_name();
  inline void set_has_app_id();
  inline void clear_has_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* host_name_;
  ::google::protobuf::uint32 depot_id_;
  ::google::protobuf::uint32 app_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetCDNAuthToken* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetDepotDecryptionKey : public ::google::protobuf::Message {
 public:
  CMsgClientGetDepotDecryptionKey();
  virtual ~CMsgClientGetDepotDecryptionKey();

  CMsgClientGetDepotDecryptionKey(const CMsgClientGetDepotDecryptionKey& from);

  inline CMsgClientGetDepotDecryptionKey& operator=(const CMsgClientGetDepotDecryptionKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetDepotDecryptionKey& default_instance();

  void Swap(CMsgClientGetDepotDecryptionKey* other);

  // implements Message ----------------------------------------------

  CMsgClientGetDepotDecryptionKey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetDepotDecryptionKey& from);
  void MergeFrom(const CMsgClientGetDepotDecryptionKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 depot_id = 1;
  inline bool has_depot_id() const;
  inline void clear_depot_id();
  static const int kDepotIdFieldNumber = 1;
  inline ::google::protobuf::uint32 depot_id() const;
  inline void set_depot_id(::google::protobuf::uint32 value);

  // optional uint32 app_id = 2;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientGetDepotDecryptionKey)
 private:
  inline void set_has_depot_id();
  inline void clear_has_depot_id();
  inline void set_has_app_id();
  inline void clear_has_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 depot_id_;
  ::google::protobuf::uint32 app_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetDepotDecryptionKey* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetDepotDecryptionKeyResponse : public ::google::protobuf::Message {
 public:
  CMsgClientGetDepotDecryptionKeyResponse();
  virtual ~CMsgClientGetDepotDecryptionKeyResponse();

  CMsgClientGetDepotDecryptionKeyResponse(const CMsgClientGetDepotDecryptionKeyResponse& from);

  inline CMsgClientGetDepotDecryptionKeyResponse& operator=(const CMsgClientGetDepotDecryptionKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetDepotDecryptionKeyResponse& default_instance();

  void Swap(CMsgClientGetDepotDecryptionKeyResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientGetDepotDecryptionKeyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetDepotDecryptionKeyResponse& from);
  void MergeFrom(const CMsgClientGetDepotDecryptionKeyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional uint32 depot_id = 2;
  inline bool has_depot_id() const;
  inline void clear_depot_id();
  static const int kDepotIdFieldNumber = 2;
  inline ::google::protobuf::uint32 depot_id() const;
  inline void set_depot_id(::google::protobuf::uint32 value);

  // optional bytes depot_encryption_key = 3;
  inline bool has_depot_encryption_key() const;
  inline void clear_depot_encryption_key();
  static const int kDepotEncryptionKeyFieldNumber = 3;
  inline const ::std::string& depot_encryption_key() const;
  inline void set_depot_encryption_key(const ::std::string& value);
  inline void set_depot_encryption_key(const char* value);
  inline void set_depot_encryption_key(const void* value, size_t size);
  inline ::std::string* mutable_depot_encryption_key();
  inline ::std::string* release_depot_encryption_key();
  inline void set_allocated_depot_encryption_key(::std::string* depot_encryption_key);

  // @@protoc_insertion_point(class_scope:CMsgClientGetDepotDecryptionKeyResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_depot_id();
  inline void clear_has_depot_id();
  inline void set_has_depot_encryption_key();
  inline void clear_has_depot_encryption_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::uint32 depot_id_;
  ::std::string* depot_encryption_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetDepotDecryptionKeyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientCheckAppBetaPassword : public ::google::protobuf::Message {
 public:
  CMsgClientCheckAppBetaPassword();
  virtual ~CMsgClientCheckAppBetaPassword();

  CMsgClientCheckAppBetaPassword(const CMsgClientCheckAppBetaPassword& from);

  inline CMsgClientCheckAppBetaPassword& operator=(const CMsgClientCheckAppBetaPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCheckAppBetaPassword& default_instance();

  void Swap(CMsgClientCheckAppBetaPassword* other);

  // implements Message ----------------------------------------------

  CMsgClientCheckAppBetaPassword* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientCheckAppBetaPassword& from);
  void MergeFrom(const CMsgClientCheckAppBetaPassword& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional string betapassword = 2;
  inline bool has_betapassword() const;
  inline void clear_betapassword();
  static const int kBetapasswordFieldNumber = 2;
  inline const ::std::string& betapassword() const;
  inline void set_betapassword(const ::std::string& value);
  inline void set_betapassword(const char* value);
  inline void set_betapassword(const char* value, size_t size);
  inline ::std::string* mutable_betapassword();
  inline ::std::string* release_betapassword();
  inline void set_allocated_betapassword(::std::string* betapassword);

  // optional int32 language = 3;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 3;
  inline ::google::protobuf::int32 language() const;
  inline void set_language(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientCheckAppBetaPassword)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_betapassword();
  inline void clear_has_betapassword();
  inline void set_has_language();
  inline void clear_has_language();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* betapassword_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::int32 language_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientCheckAppBetaPassword* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientCheckAppBetaPasswordResponse_BetaPassword : public ::google::protobuf::Message {
 public:
  CMsgClientCheckAppBetaPasswordResponse_BetaPassword();
  virtual ~CMsgClientCheckAppBetaPasswordResponse_BetaPassword();

  CMsgClientCheckAppBetaPasswordResponse_BetaPassword(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from);

  inline CMsgClientCheckAppBetaPasswordResponse_BetaPassword& operator=(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& default_instance();

  void Swap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other);

  // implements Message ----------------------------------------------

  CMsgClientCheckAppBetaPasswordResponse_BetaPassword* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from);
  void MergeFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string betaname = 1;
  inline bool has_betaname() const;
  inline void clear_betaname();
  static const int kBetanameFieldNumber = 1;
  inline const ::std::string& betaname() const;
  inline void set_betaname(const ::std::string& value);
  inline void set_betaname(const char* value);
  inline void set_betaname(const char* value, size_t size);
  inline ::std::string* mutable_betaname();
  inline ::std::string* release_betaname();
  inline void set_allocated_betaname(::std::string* betaname);

  // optional string betapassword = 2;
  inline bool has_betapassword() const;
  inline void clear_betapassword();
  static const int kBetapasswordFieldNumber = 2;
  inline const ::std::string& betapassword() const;
  inline void set_betapassword(const ::std::string& value);
  inline void set_betapassword(const char* value);
  inline void set_betapassword(const char* value, size_t size);
  inline ::std::string* mutable_betapassword();
  inline ::std::string* release_betapassword();
  inline void set_allocated_betapassword(::std::string* betapassword);

  // optional string betadescription = 3;
  inline bool has_betadescription() const;
  inline void clear_betadescription();
  static const int kBetadescriptionFieldNumber = 3;
  inline const ::std::string& betadescription() const;
  inline void set_betadescription(const ::std::string& value);
  inline void set_betadescription(const char* value);
  inline void set_betadescription(const char* value, size_t size);
  inline ::std::string* mutable_betadescription();
  inline ::std::string* release_betadescription();
  inline void set_allocated_betadescription(::std::string* betadescription);

  // @@protoc_insertion_point(class_scope:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
 private:
  inline void set_has_betaname();
  inline void clear_has_betaname();
  inline void set_has_betapassword();
  inline void clear_has_betapassword();
  inline void set_has_betadescription();
  inline void clear_has_betadescription();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* betaname_;
  ::std::string* betapassword_;
  ::std::string* betadescription_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientCheckAppBetaPasswordResponse_BetaPassword* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientCheckAppBetaPasswordResponse : public ::google::protobuf::Message {
 public:
  CMsgClientCheckAppBetaPasswordResponse();
  virtual ~CMsgClientCheckAppBetaPasswordResponse();

  CMsgClientCheckAppBetaPasswordResponse(const CMsgClientCheckAppBetaPasswordResponse& from);

  inline CMsgClientCheckAppBetaPasswordResponse& operator=(const CMsgClientCheckAppBetaPasswordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCheckAppBetaPasswordResponse& default_instance();

  void Swap(CMsgClientCheckAppBetaPasswordResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientCheckAppBetaPasswordResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientCheckAppBetaPasswordResponse& from);
  void MergeFrom(const CMsgClientCheckAppBetaPasswordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientCheckAppBetaPasswordResponse_BetaPassword BetaPassword;

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  inline int betapasswords_size() const;
  inline void clear_betapasswords();
  static const int kBetapasswordsFieldNumber = 4;
  inline const ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& betapasswords(int index) const;
  inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* mutable_betapasswords(int index);
  inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* add_betapasswords();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >&
      betapasswords() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >*
      mutable_betapasswords();

  // @@protoc_insertion_point(class_scope:CMsgClientCheckAppBetaPasswordResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword > betapasswords_;
  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientCheckAppBetaPasswordResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUpdateAppJobReport : public ::google::protobuf::Message {
 public:
  CMsgClientUpdateAppJobReport();
  virtual ~CMsgClientUpdateAppJobReport();

  CMsgClientUpdateAppJobReport(const CMsgClientUpdateAppJobReport& from);

  inline CMsgClientUpdateAppJobReport& operator=(const CMsgClientUpdateAppJobReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUpdateAppJobReport& default_instance();

  void Swap(CMsgClientUpdateAppJobReport* other);

  // implements Message ----------------------------------------------

  CMsgClientUpdateAppJobReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUpdateAppJobReport& from);
  void MergeFrom(const CMsgClientUpdateAppJobReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // repeated uint32 depot_ids = 2;
  inline int depot_ids_size() const;
  inline void clear_depot_ids();
  static const int kDepotIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 depot_ids(int index) const;
  inline void set_depot_ids(int index, ::google::protobuf::uint32 value);
  inline void add_depot_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      depot_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_depot_ids();

  // optional uint32 app_state = 3;
  inline bool has_app_state() const;
  inline void clear_app_state();
  static const int kAppStateFieldNumber = 3;
  inline ::google::protobuf::uint32 app_state() const;
  inline void set_app_state(::google::protobuf::uint32 value);

  // optional uint32 job_app_error = 4;
  inline bool has_job_app_error() const;
  inline void clear_job_app_error();
  static const int kJobAppErrorFieldNumber = 4;
  inline ::google::protobuf::uint32 job_app_error() const;
  inline void set_job_app_error(::google::protobuf::uint32 value);

  // optional string error_details = 5;
  inline bool has_error_details() const;
  inline void clear_error_details();
  static const int kErrorDetailsFieldNumber = 5;
  inline const ::std::string& error_details() const;
  inline void set_error_details(const ::std::string& value);
  inline void set_error_details(const char* value);
  inline void set_error_details(const char* value, size_t size);
  inline ::std::string* mutable_error_details();
  inline ::std::string* release_error_details();
  inline void set_allocated_error_details(::std::string* error_details);

  // optional uint32 job_duration = 6;
  inline bool has_job_duration() const;
  inline void clear_job_duration();
  static const int kJobDurationFieldNumber = 6;
  inline ::google::protobuf::uint32 job_duration() const;
  inline void set_job_duration(::google::protobuf::uint32 value);

  // optional uint32 files_validation_failed = 7;
  inline bool has_files_validation_failed() const;
  inline void clear_files_validation_failed();
  static const int kFilesValidationFailedFieldNumber = 7;
  inline ::google::protobuf::uint32 files_validation_failed() const;
  inline void set_files_validation_failed(::google::protobuf::uint32 value);

  // optional uint64 job_bytes_downloaded = 8;
  inline bool has_job_bytes_downloaded() const;
  inline void clear_job_bytes_downloaded();
  static const int kJobBytesDownloadedFieldNumber = 8;
  inline ::google::protobuf::uint64 job_bytes_downloaded() const;
  inline void set_job_bytes_downloaded(::google::protobuf::uint64 value);

  // optional uint64 job_bytes_staged = 9;
  inline bool has_job_bytes_staged() const;
  inline void clear_job_bytes_staged();
  static const int kJobBytesStagedFieldNumber = 9;
  inline ::google::protobuf::uint64 job_bytes_staged() const;
  inline void set_job_bytes_staged(::google::protobuf::uint64 value);

  // optional uint64 bytes_comitted = 10;
  inline bool has_bytes_comitted() const;
  inline void clear_bytes_comitted();
  static const int kBytesComittedFieldNumber = 10;
  inline ::google::protobuf::uint64 bytes_comitted() const;
  inline void set_bytes_comitted(::google::protobuf::uint64 value);

  // optional uint32 start_app_state = 11;
  inline bool has_start_app_state() const;
  inline void clear_start_app_state();
  static const int kStartAppStateFieldNumber = 11;
  inline ::google::protobuf::uint32 start_app_state() const;
  inline void set_start_app_state(::google::protobuf::uint32 value);

  // optional fixed64 stats_machine_id = 12;
  inline bool has_stats_machine_id() const;
  inline void clear_stats_machine_id();
  static const int kStatsMachineIdFieldNumber = 12;
  inline ::google::protobuf::uint64 stats_machine_id() const;
  inline void set_stats_machine_id(::google::protobuf::uint64 value);

  // optional string branch_name = 13;
  inline bool has_branch_name() const;
  inline void clear_branch_name();
  static const int kBranchNameFieldNumber = 13;
  inline const ::std::string& branch_name() const;
  inline void set_branch_name(const ::std::string& value);
  inline void set_branch_name(const char* value);
  inline void set_branch_name(const char* value, size_t size);
  inline ::std::string* mutable_branch_name();
  inline ::std::string* release_branch_name();
  inline void set_allocated_branch_name(::std::string* branch_name);

  // optional uint64 total_bytes_downloaded = 14;
  inline bool has_total_bytes_downloaded() const;
  inline void clear_total_bytes_downloaded();
  static const int kTotalBytesDownloadedFieldNumber = 14;
  inline ::google::protobuf::uint64 total_bytes_downloaded() const;
  inline void set_total_bytes_downloaded(::google::protobuf::uint64 value);

  // optional uint64 total_bytes_staged = 15;
  inline bool has_total_bytes_staged() const;
  inline void clear_total_bytes_staged();
  static const int kTotalBytesStagedFieldNumber = 15;
  inline ::google::protobuf::uint64 total_bytes_staged() const;
  inline void set_total_bytes_staged(::google::protobuf::uint64 value);

  // optional uint64 total_bytes_restored = 16;
  inline bool has_total_bytes_restored() const;
  inline void clear_total_bytes_restored();
  static const int kTotalBytesRestoredFieldNumber = 16;
  inline ::google::protobuf::uint64 total_bytes_restored() const;
  inline void set_total_bytes_restored(::google::protobuf::uint64 value);

  // optional bool is_borrowed = 17;
  inline bool has_is_borrowed() const;
  inline void clear_is_borrowed();
  static const int kIsBorrowedFieldNumber = 17;
  inline bool is_borrowed() const;
  inline void set_is_borrowed(bool value);

  // optional bool is_free_weekend = 18;
  inline bool has_is_free_weekend() const;
  inline void clear_is_free_weekend();
  static const int kIsFreeWeekendFieldNumber = 18;
  inline bool is_free_weekend() const;
  inline void set_is_free_weekend(bool value);

  // optional uint64 total_bytes_legacy = 19;
  inline bool has_total_bytes_legacy() const;
  inline void clear_total_bytes_legacy();
  static const int kTotalBytesLegacyFieldNumber = 19;
  inline ::google::protobuf::uint64 total_bytes_legacy() const;
  inline void set_total_bytes_legacy(::google::protobuf::uint64 value);

  // optional uint64 total_bytes_patched = 20;
  inline bool has_total_bytes_patched() const;
  inline void clear_total_bytes_patched();
  static const int kTotalBytesPatchedFieldNumber = 20;
  inline ::google::protobuf::uint64 total_bytes_patched() const;
  inline void set_total_bytes_patched(::google::protobuf::uint64 value);

  // optional uint64 total_bytes_saved = 21;
  inline bool has_total_bytes_saved() const;
  inline void clear_total_bytes_saved();
  static const int kTotalBytesSavedFieldNumber = 21;
  inline ::google::protobuf::uint64 total_bytes_saved() const;
  inline void set_total_bytes_saved(::google::protobuf::uint64 value);

  // optional uint32 cell_id = 22;
  inline bool has_cell_id() const;
  inline void clear_cell_id();
  static const int kCellIdFieldNumber = 22;
  inline ::google::protobuf::uint32 cell_id() const;
  inline void set_cell_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateAppJobReport)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_app_state();
  inline void clear_has_app_state();
  inline void set_has_job_app_error();
  inline void clear_has_job_app_error();
  inline void set_has_error_details();
  inline void clear_has_error_details();
  inline void set_has_job_duration();
  inline void clear_has_job_duration();
  inline void set_has_files_validation_failed();
  inline void clear_has_files_validation_failed();
  inline void set_has_job_bytes_downloaded();
  inline void clear_has_job_bytes_downloaded();
  inline void set_has_job_bytes_staged();
  inline void clear_has_job_bytes_staged();
  inline void set_has_bytes_comitted();
  inline void clear_has_bytes_comitted();
  inline void set_has_start_app_state();
  inline void clear_has_start_app_state();
  inline void set_has_stats_machine_id();
  inline void clear_has_stats_machine_id();
  inline void set_has_branch_name();
  inline void clear_has_branch_name();
  inline void set_has_total_bytes_downloaded();
  inline void clear_has_total_bytes_downloaded();
  inline void set_has_total_bytes_staged();
  inline void clear_has_total_bytes_staged();
  inline void set_has_total_bytes_restored();
  inline void clear_has_total_bytes_restored();
  inline void set_has_is_borrowed();
  inline void clear_has_is_borrowed();
  inline void set_has_is_free_weekend();
  inline void clear_has_is_free_weekend();
  inline void set_has_total_bytes_legacy();
  inline void clear_has_total_bytes_legacy();
  inline void set_has_total_bytes_patched();
  inline void clear_has_total_bytes_patched();
  inline void set_has_total_bytes_saved();
  inline void clear_has_total_bytes_saved();
  inline void set_has_cell_id();
  inline void clear_has_cell_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > depot_ids_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 app_state_;
  ::std::string* error_details_;
  ::google::protobuf::uint32 job_app_error_;
  ::google::protobuf::uint32 job_duration_;
  ::google::protobuf::uint64 job_bytes_downloaded_;
  ::google::protobuf::uint64 job_bytes_staged_;
  ::google::protobuf::uint32 files_validation_failed_;
  ::google::protobuf::uint32 start_app_state_;
  ::google::protobuf::uint64 bytes_comitted_;
  ::google::protobuf::uint64 stats_machine_id_;
  ::std::string* branch_name_;
  ::google::protobuf::uint64 total_bytes_downloaded_;
  ::google::protobuf::uint64 total_bytes_staged_;
  ::google::protobuf::uint64 total_bytes_restored_;
  ::google::protobuf::uint64 total_bytes_legacy_;
  bool is_borrowed_;
  bool is_free_weekend_;
  ::google::protobuf::uint32 cell_id_;
  ::google::protobuf::uint64 total_bytes_patched_;
  ::google::protobuf::uint64 total_bytes_saved_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUpdateAppJobReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDPContentStatsReport : public ::google::protobuf::Message {
 public:
  CMsgClientDPContentStatsReport();
  virtual ~CMsgClientDPContentStatsReport();

  CMsgClientDPContentStatsReport(const CMsgClientDPContentStatsReport& from);

  inline CMsgClientDPContentStatsReport& operator=(const CMsgClientDPContentStatsReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDPContentStatsReport& default_instance();

  void Swap(CMsgClientDPContentStatsReport* other);

  // implements Message ----------------------------------------------

  CMsgClientDPContentStatsReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDPContentStatsReport& from);
  void MergeFrom(const CMsgClientDPContentStatsReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 stats_machine_id = 1;
  inline bool has_stats_machine_id() const;
  inline void clear_stats_machine_id();
  static const int kStatsMachineIdFieldNumber = 1;
  inline ::google::protobuf::uint64 stats_machine_id() const;
  inline void set_stats_machine_id(::google::protobuf::uint64 value);

  // optional string country_code = 2;
  inline bool has_country_code() const;
  inline void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  inline const ::std::string& country_code() const;
  inline void set_country_code(const ::std::string& value);
  inline void set_country_code(const char* value);
  inline void set_country_code(const char* value, size_t size);
  inline ::std::string* mutable_country_code();
  inline ::std::string* release_country_code();
  inline void set_allocated_country_code(::std::string* country_code);

  // optional int32 os_type = 3;
  inline bool has_os_type() const;
  inline void clear_os_type();
  static const int kOsTypeFieldNumber = 3;
  inline ::google::protobuf::int32 os_type() const;
  inline void set_os_type(::google::protobuf::int32 value);

  // optional int32 language = 4;
  inline bool has_language() const;
  inline void clear_language();
  static const int kLanguageFieldNumber = 4;
  inline ::google::protobuf::int32 language() const;
  inline void set_language(::google::protobuf::int32 value);

  // optional uint32 num_install_folders = 5;
  inline bool has_num_install_folders() const;
  inline void clear_num_install_folders();
  static const int kNumInstallFoldersFieldNumber = 5;
  inline ::google::protobuf::uint32 num_install_folders() const;
  inline void set_num_install_folders(::google::protobuf::uint32 value);

  // optional uint32 num_installed_games = 6;
  inline bool has_num_installed_games() const;
  inline void clear_num_installed_games();
  static const int kNumInstalledGamesFieldNumber = 6;
  inline ::google::protobuf::uint32 num_installed_games() const;
  inline void set_num_installed_games(::google::protobuf::uint32 value);

  // optional uint64 size_installed_games = 7;
  inline bool has_size_installed_games() const;
  inline void clear_size_installed_games();
  static const int kSizeInstalledGamesFieldNumber = 7;
  inline ::google::protobuf::uint64 size_installed_games() const;
  inline void set_size_installed_games(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientDPContentStatsReport)
 private:
  inline void set_has_stats_machine_id();
  inline void clear_has_stats_machine_id();
  inline void set_has_country_code();
  inline void clear_has_country_code();
  inline void set_has_os_type();
  inline void clear_has_os_type();
  inline void set_has_language();
  inline void clear_has_language();
  inline void set_has_num_install_folders();
  inline void clear_has_num_install_folders();
  inline void set_has_num_installed_games();
  inline void clear_has_num_installed_games();
  inline void set_has_size_installed_games();
  inline void clear_has_size_installed_games();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 stats_machine_id_;
  ::std::string* country_code_;
  ::google::protobuf::int32 os_type_;
  ::google::protobuf::int32 language_;
  ::google::protobuf::uint32 num_install_folders_;
  ::google::protobuf::uint32 num_installed_games_;
  ::google::protobuf::uint64 size_installed_games_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDPContentStatsReport* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetCDNAuthTokenResponse : public ::google::protobuf::Message {
 public:
  CMsgClientGetCDNAuthTokenResponse();
  virtual ~CMsgClientGetCDNAuthTokenResponse();

  CMsgClientGetCDNAuthTokenResponse(const CMsgClientGetCDNAuthTokenResponse& from);

  inline CMsgClientGetCDNAuthTokenResponse& operator=(const CMsgClientGetCDNAuthTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetCDNAuthTokenResponse& default_instance();

  void Swap(CMsgClientGetCDNAuthTokenResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientGetCDNAuthTokenResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetCDNAuthTokenResponse& from);
  void MergeFrom(const CMsgClientGetCDNAuthTokenResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional string token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const char* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // optional uint32 expiration_time = 3;
  inline bool has_expiration_time() const;
  inline void clear_expiration_time();
  static const int kExpirationTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 expiration_time() const;
  inline void set_expiration_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientGetCDNAuthTokenResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_token();
  inline void clear_has_token();
  inline void set_has_expiration_time();
  inline void clear_has_expiration_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 expiration_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetCDNAuthTokenResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDownloadRateStatistics_StatsInfo : public ::google::protobuf::Message {
 public:
  CMsgDownloadRateStatistics_StatsInfo();
  virtual ~CMsgDownloadRateStatistics_StatsInfo();

  CMsgDownloadRateStatistics_StatsInfo(const CMsgDownloadRateStatistics_StatsInfo& from);

  inline CMsgDownloadRateStatistics_StatsInfo& operator=(const CMsgDownloadRateStatistics_StatsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDownloadRateStatistics_StatsInfo& default_instance();

  void Swap(CMsgDownloadRateStatistics_StatsInfo* other);

  // implements Message ----------------------------------------------

  CMsgDownloadRateStatistics_StatsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDownloadRateStatistics_StatsInfo& from);
  void MergeFrom(const CMsgDownloadRateStatistics_StatsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 source_type = 1;
  inline bool has_source_type() const;
  inline void clear_source_type();
  static const int kSourceTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 source_type() const;
  inline void set_source_type(::google::protobuf::uint32 value);

  // optional uint32 source_id = 2;
  inline bool has_source_id() const;
  inline void clear_source_id();
  static const int kSourceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 source_id() const;
  inline void set_source_id(::google::protobuf::uint32 value);

  // optional uint32 seconds = 3;
  inline bool has_seconds() const;
  inline void clear_seconds();
  static const int kSecondsFieldNumber = 3;
  inline ::google::protobuf::uint32 seconds() const;
  inline void set_seconds(::google::protobuf::uint32 value);

  // optional uint64 bytes = 4;
  inline bool has_bytes() const;
  inline void clear_bytes();
  static const int kBytesFieldNumber = 4;
  inline ::google::protobuf::uint64 bytes() const;
  inline void set_bytes(::google::protobuf::uint64 value);

  // optional string host_name = 5;
  inline bool has_host_name() const;
  inline void clear_host_name();
  static const int kHostNameFieldNumber = 5;
  inline const ::std::string& host_name() const;
  inline void set_host_name(const ::std::string& value);
  inline void set_host_name(const char* value);
  inline void set_host_name(const char* value, size_t size);
  inline ::std::string* mutable_host_name();
  inline ::std::string* release_host_name();
  inline void set_allocated_host_name(::std::string* host_name);

  // optional uint64 microseconds = 6;
  inline bool has_microseconds() const;
  inline void clear_microseconds();
  static const int kMicrosecondsFieldNumber = 6;
  inline ::google::protobuf::uint64 microseconds() const;
  inline void set_microseconds(::google::protobuf::uint64 value);

  // optional bool used_ipv6 = 7;
  inline bool has_used_ipv6() const;
  inline void clear_used_ipv6();
  static const int kUsedIpv6FieldNumber = 7;
  inline bool used_ipv6() const;
  inline void set_used_ipv6(bool value);

  // optional bool proxied = 8;
  inline bool has_proxied() const;
  inline void clear_proxied();
  static const int kProxiedFieldNumber = 8;
  inline bool proxied() const;
  inline void set_proxied(bool value);

  // @@protoc_insertion_point(class_scope:CMsgDownloadRateStatistics.StatsInfo)
 private:
  inline void set_has_source_type();
  inline void clear_has_source_type();
  inline void set_has_source_id();
  inline void clear_has_source_id();
  inline void set_has_seconds();
  inline void clear_has_seconds();
  inline void set_has_bytes();
  inline void clear_has_bytes();
  inline void set_has_host_name();
  inline void clear_has_host_name();
  inline void set_has_microseconds();
  inline void clear_has_microseconds();
  inline void set_has_used_ipv6();
  inline void clear_has_used_ipv6();
  inline void set_has_proxied();
  inline void clear_has_proxied();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 source_id_;
  ::google::protobuf::uint64 bytes_;
  ::std::string* host_name_;
  ::google::protobuf::uint64 microseconds_;
  ::google::protobuf::uint32 seconds_;
  bool used_ipv6_;
  bool proxied_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDownloadRateStatistics_StatsInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDownloadRateStatistics : public ::google::protobuf::Message {
 public:
  CMsgDownloadRateStatistics();
  virtual ~CMsgDownloadRateStatistics();

  CMsgDownloadRateStatistics(const CMsgDownloadRateStatistics& from);

  inline CMsgDownloadRateStatistics& operator=(const CMsgDownloadRateStatistics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDownloadRateStatistics& default_instance();

  void Swap(CMsgDownloadRateStatistics* other);

  // implements Message ----------------------------------------------

  CMsgDownloadRateStatistics* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDownloadRateStatistics& from);
  void MergeFrom(const CMsgDownloadRateStatistics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgDownloadRateStatistics_StatsInfo StatsInfo;

  // accessors -------------------------------------------------------

  // optional uint32 cell_id = 1;
  inline bool has_cell_id() const;
  inline void clear_cell_id();
  static const int kCellIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cell_id() const;
  inline void set_cell_id(::google::protobuf::uint32 value);

  // repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 2;
  inline const ::CMsgDownloadRateStatistics_StatsInfo& stats(int index) const;
  inline ::CMsgDownloadRateStatistics_StatsInfo* mutable_stats(int index);
  inline ::CMsgDownloadRateStatistics_StatsInfo* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >*
      mutable_stats();

  // optional uint32 throttling_kbps = 3;
  inline bool has_throttling_kbps() const;
  inline void clear_throttling_kbps();
  static const int kThrottlingKbpsFieldNumber = 3;
  inline ::google::protobuf::uint32 throttling_kbps() const;
  inline void set_throttling_kbps(::google::protobuf::uint32 value);

  // optional uint32 steam_realm = 4;
  inline bool has_steam_realm() const;
  inline void clear_steam_realm();
  static const int kSteamRealmFieldNumber = 4;
  inline ::google::protobuf::uint32 steam_realm() const;
  inline void set_steam_realm(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDownloadRateStatistics)
 private:
  inline void set_has_cell_id();
  inline void clear_has_cell_id();
  inline void set_has_throttling_kbps();
  inline void clear_has_throttling_kbps();
  inline void set_has_steam_realm();
  inline void clear_has_steam_realm();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo > stats_;
  ::google::protobuf::uint32 cell_id_;
  ::google::protobuf::uint32 throttling_kbps_;
  ::google::protobuf::uint32 steam_realm_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDownloadRateStatistics* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestAccountData : public ::google::protobuf::Message {
 public:
  CMsgClientRequestAccountData();
  virtual ~CMsgClientRequestAccountData();

  CMsgClientRequestAccountData(const CMsgClientRequestAccountData& from);

  inline CMsgClientRequestAccountData& operator=(const CMsgClientRequestAccountData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestAccountData& default_instance();

  void Swap(CMsgClientRequestAccountData* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestAccountData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestAccountData& from);
  void MergeFrom(const CMsgClientRequestAccountData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_or_email = 1;
  inline bool has_account_or_email() const;
  inline void clear_account_or_email();
  static const int kAccountOrEmailFieldNumber = 1;
  inline const ::std::string& account_or_email() const;
  inline void set_account_or_email(const ::std::string& value);
  inline void set_account_or_email(const char* value);
  inline void set_account_or_email(const char* value, size_t size);
  inline ::std::string* mutable_account_or_email();
  inline ::std::string* release_account_or_email();
  inline void set_allocated_account_or_email(::std::string* account_or_email);

  // optional uint32 action = 2;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 2;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientRequestAccountData)
 private:
  inline void set_has_account_or_email();
  inline void clear_has_account_or_email();
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_or_email_;
  ::google::protobuf::uint32 action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestAccountData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestAccountDataResponse : public ::google::protobuf::Message {
 public:
  CMsgClientRequestAccountDataResponse();
  virtual ~CMsgClientRequestAccountDataResponse();

  CMsgClientRequestAccountDataResponse(const CMsgClientRequestAccountDataResponse& from);

  inline CMsgClientRequestAccountDataResponse& operator=(const CMsgClientRequestAccountDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestAccountDataResponse& default_instance();

  void Swap(CMsgClientRequestAccountDataResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestAccountDataResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestAccountDataResponse& from);
  void MergeFrom(const CMsgClientRequestAccountDataResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::google::protobuf::uint32 action() const;
  inline void set_action(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 2;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional string account_name = 3;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 3;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  inline void set_allocated_account_name(::std::string* account_name);

  // optional uint32 ct_matches = 4;
  inline bool has_ct_matches() const;
  inline void clear_ct_matches();
  static const int kCtMatchesFieldNumber = 4;
  inline ::google::protobuf::uint32 ct_matches() const;
  inline void set_ct_matches(::google::protobuf::uint32 value);

  // optional string account_name_suggestion1 = 5;
  inline bool has_account_name_suggestion1() const;
  inline void clear_account_name_suggestion1();
  static const int kAccountNameSuggestion1FieldNumber = 5;
  inline const ::std::string& account_name_suggestion1() const;
  inline void set_account_name_suggestion1(const ::std::string& value);
  inline void set_account_name_suggestion1(const char* value);
  inline void set_account_name_suggestion1(const char* value, size_t size);
  inline ::std::string* mutable_account_name_suggestion1();
  inline ::std::string* release_account_name_suggestion1();
  inline void set_allocated_account_name_suggestion1(::std::string* account_name_suggestion1);

  // optional string account_name_suggestion2 = 6;
  inline bool has_account_name_suggestion2() const;
  inline void clear_account_name_suggestion2();
  static const int kAccountNameSuggestion2FieldNumber = 6;
  inline const ::std::string& account_name_suggestion2() const;
  inline void set_account_name_suggestion2(const ::std::string& value);
  inline void set_account_name_suggestion2(const char* value);
  inline void set_account_name_suggestion2(const char* value, size_t size);
  inline ::std::string* mutable_account_name_suggestion2();
  inline ::std::string* release_account_name_suggestion2();
  inline void set_allocated_account_name_suggestion2(::std::string* account_name_suggestion2);

  // optional string account_name_suggestion3 = 7;
  inline bool has_account_name_suggestion3() const;
  inline void clear_account_name_suggestion3();
  static const int kAccountNameSuggestion3FieldNumber = 7;
  inline const ::std::string& account_name_suggestion3() const;
  inline void set_account_name_suggestion3(const ::std::string& value);
  inline void set_account_name_suggestion3(const char* value);
  inline void set_account_name_suggestion3(const char* value, size_t size);
  inline ::std::string* mutable_account_name_suggestion3();
  inline ::std::string* release_account_name_suggestion3();
  inline void set_allocated_account_name_suggestion3(::std::string* account_name_suggestion3);

  // @@protoc_insertion_point(class_scope:CMsgClientRequestAccountDataResponse)
 private:
  inline void set_has_action();
  inline void clear_has_action();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_ct_matches();
  inline void clear_has_ct_matches();
  inline void set_has_account_name_suggestion1();
  inline void clear_has_account_name_suggestion1();
  inline void set_has_account_name_suggestion2();
  inline void clear_has_account_name_suggestion2();
  inline void set_has_account_name_suggestion3();
  inline void clear_has_account_name_suggestion3();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 action_;
  ::google::protobuf::uint32 eresult_;
  ::std::string* account_name_;
  ::std::string* account_name_suggestion1_;
  ::std::string* account_name_suggestion2_;
  ::std::string* account_name_suggestion3_;
  ::google::protobuf::uint32 ct_matches_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestAccountDataResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStats : public ::google::protobuf::Message {
 public:
  CMsgClientUGSGetGlobalStats();
  virtual ~CMsgClientUGSGetGlobalStats();

  CMsgClientUGSGetGlobalStats(const CMsgClientUGSGetGlobalStats& from);

  inline CMsgClientUGSGetGlobalStats& operator=(const CMsgClientUGSGetGlobalStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUGSGetGlobalStats& default_instance();

  void Swap(CMsgClientUGSGetGlobalStats* other);

  // implements Message ----------------------------------------------

  CMsgClientUGSGetGlobalStats* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUGSGetGlobalStats& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 gameid = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 1;
  inline ::google::protobuf::uint64 gameid() const;
  inline void set_gameid(::google::protobuf::uint64 value);

  // optional uint32 history_days_requested = 2;
  inline bool has_history_days_requested() const;
  inline void clear_history_days_requested();
  static const int kHistoryDaysRequestedFieldNumber = 2;
  inline ::google::protobuf::uint32 history_days_requested() const;
  inline void set_history_days_requested(::google::protobuf::uint32 value);

  // optional fixed32 time_last_requested = 3;
  inline bool has_time_last_requested() const;
  inline void clear_time_last_requested();
  static const int kTimeLastRequestedFieldNumber = 3;
  inline ::google::protobuf::uint32 time_last_requested() const;
  inline void set_time_last_requested(::google::protobuf::uint32 value);

  // optional uint32 first_day_cached = 4;
  inline bool has_first_day_cached() const;
  inline void clear_first_day_cached();
  static const int kFirstDayCachedFieldNumber = 4;
  inline ::google::protobuf::uint32 first_day_cached() const;
  inline void set_first_day_cached(::google::protobuf::uint32 value);

  // optional uint32 days_cached = 5;
  inline bool has_days_cached() const;
  inline void clear_days_cached();
  static const int kDaysCachedFieldNumber = 5;
  inline ::google::protobuf::uint32 days_cached() const;
  inline void set_days_cached(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStats)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_history_days_requested();
  inline void clear_has_history_days_requested();
  inline void set_has_time_last_requested();
  inline void clear_has_time_last_requested();
  inline void set_has_first_day_cached();
  inline void clear_has_first_day_cached();
  inline void set_has_days_cached();
  inline void clear_has_days_cached();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 history_days_requested_;
  ::google::protobuf::uint32 time_last_requested_;
  ::google::protobuf::uint32 first_day_cached_;
  ::google::protobuf::uint32 days_cached_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUGSGetGlobalStats* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStatsResponse_Day_Stat : public ::google::protobuf::Message {
 public:
  CMsgClientUGSGetGlobalStatsResponse_Day_Stat();
  virtual ~CMsgClientUGSGetGlobalStatsResponse_Day_Stat();

  CMsgClientUGSGetGlobalStatsResponse_Day_Stat(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from);

  inline CMsgClientUGSGetGlobalStatsResponse_Day_Stat& operator=(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& default_instance();

  void Swap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other);

  // implements Message ----------------------------------------------

  CMsgClientUGSGetGlobalStatsResponse_Day_Stat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 stat_id = 1;
  inline bool has_stat_id() const;
  inline void clear_stat_id();
  static const int kStatIdFieldNumber = 1;
  inline ::google::protobuf::int32 stat_id() const;
  inline void set_stat_id(::google::protobuf::int32 value);

  // optional int64 data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline ::google::protobuf::int64 data() const;
  inline void set_data(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
 private:
  inline void set_has_stat_id();
  inline void clear_has_stat_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 data_;
  ::google::protobuf::int32 stat_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUGSGetGlobalStatsResponse_Day_Stat* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStatsResponse_Day : public ::google::protobuf::Message {
 public:
  CMsgClientUGSGetGlobalStatsResponse_Day();
  virtual ~CMsgClientUGSGetGlobalStatsResponse_Day();

  CMsgClientUGSGetGlobalStatsResponse_Day(const CMsgClientUGSGetGlobalStatsResponse_Day& from);

  inline CMsgClientUGSGetGlobalStatsResponse_Day& operator=(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUGSGetGlobalStatsResponse_Day& default_instance();

  void Swap(CMsgClientUGSGetGlobalStatsResponse_Day* other);

  // implements Message ----------------------------------------------

  CMsgClientUGSGetGlobalStatsResponse_Day* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientUGSGetGlobalStatsResponse_Day_Stat Stat;

  // accessors -------------------------------------------------------

  // optional uint32 day_id = 1;
  inline bool has_day_id() const;
  inline void clear_day_id();
  static const int kDayIdFieldNumber = 1;
  inline ::google::protobuf::uint32 day_id() const;
  inline void set_day_id(::google::protobuf::uint32 value);

  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  inline int stats_size() const;
  inline void clear_stats();
  static const int kStatsFieldNumber = 2;
  inline const ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& stats(int index) const;
  inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* mutable_stats(int index);
  inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* add_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >&
      stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >*
      mutable_stats();

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStatsResponse.Day)
 private:
  inline void set_has_day_id();
  inline void clear_has_day_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat > stats_;
  ::google::protobuf::uint32 day_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUGSGetGlobalStatsResponse_Day* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStatsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientUGSGetGlobalStatsResponse();
  virtual ~CMsgClientUGSGetGlobalStatsResponse();

  CMsgClientUGSGetGlobalStatsResponse(const CMsgClientUGSGetGlobalStatsResponse& from);

  inline CMsgClientUGSGetGlobalStatsResponse& operator=(const CMsgClientUGSGetGlobalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUGSGetGlobalStatsResponse& default_instance();

  void Swap(CMsgClientUGSGetGlobalStatsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientUGSGetGlobalStatsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUGSGetGlobalStatsResponse& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStatsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientUGSGetGlobalStatsResponse_Day Day;

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional fixed32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional int32 day_current = 3;
  inline bool has_day_current() const;
  inline void clear_day_current();
  static const int kDayCurrentFieldNumber = 3;
  inline ::google::protobuf::int32 day_current() const;
  inline void set_day_current(::google::protobuf::int32 value);

  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  inline int days_size() const;
  inline void clear_days();
  static const int kDaysFieldNumber = 4;
  inline const ::CMsgClientUGSGetGlobalStatsResponse_Day& days(int index) const;
  inline ::CMsgClientUGSGetGlobalStatsResponse_Day* mutable_days(int index);
  inline ::CMsgClientUGSGetGlobalStatsResponse_Day* add_days();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >&
      days() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >*
      mutable_days();

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStatsResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_day_current();
  inline void clear_has_day_current();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day > days_;
  ::google::protobuf::int32 day_current_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUGSGetGlobalStatsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRedeemGuestPass : public ::google::protobuf::Message {
 public:
  CMsgClientRedeemGuestPass();
  virtual ~CMsgClientRedeemGuestPass();

  CMsgClientRedeemGuestPass(const CMsgClientRedeemGuestPass& from);

  inline CMsgClientRedeemGuestPass& operator=(const CMsgClientRedeemGuestPass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRedeemGuestPass& default_instance();

  void Swap(CMsgClientRedeemGuestPass* other);

  // implements Message ----------------------------------------------

  CMsgClientRedeemGuestPass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRedeemGuestPass& from);
  void MergeFrom(const CMsgClientRedeemGuestPass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 guest_pass_id = 1;
  inline bool has_guest_pass_id() const;
  inline void clear_guest_pass_id();
  static const int kGuestPassIdFieldNumber = 1;
  inline ::google::protobuf::uint64 guest_pass_id() const;
  inline void set_guest_pass_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientRedeemGuestPass)
 private:
  inline void set_has_guest_pass_id();
  inline void clear_has_guest_pass_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guest_pass_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRedeemGuestPass* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRedeemGuestPassResponse : public ::google::protobuf::Message {
 public:
  CMsgClientRedeemGuestPassResponse();
  virtual ~CMsgClientRedeemGuestPassResponse();

  CMsgClientRedeemGuestPassResponse(const CMsgClientRedeemGuestPassResponse& from);

  inline CMsgClientRedeemGuestPassResponse& operator=(const CMsgClientRedeemGuestPassResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRedeemGuestPassResponse& default_instance();

  void Swap(CMsgClientRedeemGuestPassResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientRedeemGuestPassResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRedeemGuestPassResponse& from);
  void MergeFrom(const CMsgClientRedeemGuestPassResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 package_id = 2;
  inline bool has_package_id() const;
  inline void clear_package_id();
  static const int kPackageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 package_id() const;
  inline void set_package_id(::google::protobuf::uint32 value);

  // optional uint32 must_own_appid = 3;
  inline bool has_must_own_appid() const;
  inline void clear_must_own_appid();
  static const int kMustOwnAppidFieldNumber = 3;
  inline ::google::protobuf::uint32 must_own_appid() const;
  inline void set_must_own_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientRedeemGuestPassResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_package_id();
  inline void clear_has_package_id();
  inline void set_has_must_own_appid();
  inline void clear_has_must_own_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 package_id_;
  ::google::protobuf::uint32 must_own_appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRedeemGuestPassResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetClanActivityCounts : public ::google::protobuf::Message {
 public:
  CMsgClientGetClanActivityCounts();
  virtual ~CMsgClientGetClanActivityCounts();

  CMsgClientGetClanActivityCounts(const CMsgClientGetClanActivityCounts& from);

  inline CMsgClientGetClanActivityCounts& operator=(const CMsgClientGetClanActivityCounts& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetClanActivityCounts& default_instance();

  void Swap(CMsgClientGetClanActivityCounts* other);

  // implements Message ----------------------------------------------

  CMsgClientGetClanActivityCounts* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetClanActivityCounts& from);
  void MergeFrom(const CMsgClientGetClanActivityCounts& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 steamid_clans = 1;
  inline int steamid_clans_size() const;
  inline void clear_steamid_clans();
  static const int kSteamidClansFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid_clans(int index) const;
  inline void set_steamid_clans(int index, ::google::protobuf::uint64 value);
  inline void add_steamid_clans(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamid_clans() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamid_clans();

  // @@protoc_insertion_point(class_scope:CMsgClientGetClanActivityCounts)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamid_clans_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetClanActivityCounts* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetClanActivityCountsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientGetClanActivityCountsResponse();
  virtual ~CMsgClientGetClanActivityCountsResponse();

  CMsgClientGetClanActivityCountsResponse(const CMsgClientGetClanActivityCountsResponse& from);

  inline CMsgClientGetClanActivityCountsResponse& operator=(const CMsgClientGetClanActivityCountsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetClanActivityCountsResponse& default_instance();

  void Swap(CMsgClientGetClanActivityCountsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientGetClanActivityCountsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetClanActivityCountsResponse& from);
  void MergeFrom(const CMsgClientGetClanActivityCountsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientGetClanActivityCountsResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetClanActivityCountsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientOGSReportString : public ::google::protobuf::Message {
 public:
  CMsgClientOGSReportString();
  virtual ~CMsgClientOGSReportString();

  CMsgClientOGSReportString(const CMsgClientOGSReportString& from);

  inline CMsgClientOGSReportString& operator=(const CMsgClientOGSReportString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientOGSReportString& default_instance();

  void Swap(CMsgClientOGSReportString* other);

  // implements Message ----------------------------------------------

  CMsgClientOGSReportString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientOGSReportString& from);
  void MergeFrom(const CMsgClientOGSReportString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accumulated = 1;
  inline bool has_accumulated() const;
  inline void clear_accumulated();
  static const int kAccumulatedFieldNumber = 1;
  inline bool accumulated() const;
  inline void set_accumulated(bool value);

  // optional uint64 sessionid = 2;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 2;
  inline ::google::protobuf::uint64 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint64 value);

  // optional int32 severity = 3;
  inline bool has_severity() const;
  inline void clear_severity();
  static const int kSeverityFieldNumber = 3;
  inline ::google::protobuf::int32 severity() const;
  inline void set_severity(::google::protobuf::int32 value);

  // optional string formatter = 4;
  inline bool has_formatter() const;
  inline void clear_formatter();
  static const int kFormatterFieldNumber = 4;
  inline const ::std::string& formatter() const;
  inline void set_formatter(const ::std::string& value);
  inline void set_formatter(const char* value);
  inline void set_formatter(const char* value, size_t size);
  inline ::std::string* mutable_formatter();
  inline ::std::string* release_formatter();
  inline void set_allocated_formatter(::std::string* formatter);

  // optional bytes varargs = 5;
  inline bool has_varargs() const;
  inline void clear_varargs();
  static const int kVarargsFieldNumber = 5;
  inline const ::std::string& varargs() const;
  inline void set_varargs(const ::std::string& value);
  inline void set_varargs(const char* value);
  inline void set_varargs(const void* value, size_t size);
  inline ::std::string* mutable_varargs();
  inline ::std::string* release_varargs();
  inline void set_allocated_varargs(::std::string* varargs);

  // @@protoc_insertion_point(class_scope:CMsgClientOGSReportString)
 private:
  inline void set_has_accumulated();
  inline void clear_has_accumulated();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_severity();
  inline void clear_has_severity();
  inline void set_has_formatter();
  inline void clear_has_formatter();
  inline void set_has_varargs();
  inline void clear_has_varargs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sessionid_;
  bool accumulated_;
  ::google::protobuf::int32 severity_;
  ::std::string* formatter_;
  ::std::string* varargs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientOGSReportString* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientOGSReportBug : public ::google::protobuf::Message {
 public:
  CMsgClientOGSReportBug();
  virtual ~CMsgClientOGSReportBug();

  CMsgClientOGSReportBug(const CMsgClientOGSReportBug& from);

  inline CMsgClientOGSReportBug& operator=(const CMsgClientOGSReportBug& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientOGSReportBug& default_instance();

  void Swap(CMsgClientOGSReportBug* other);

  // implements Message ----------------------------------------------

  CMsgClientOGSReportBug* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientOGSReportBug& from);
  void MergeFrom(const CMsgClientOGSReportBug& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 sessionid = 1;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionidFieldNumber = 1;
  inline ::google::protobuf::uint64 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint64 value);

  // optional string bugtext = 2;
  inline bool has_bugtext() const;
  inline void clear_bugtext();
  static const int kBugtextFieldNumber = 2;
  inline const ::std::string& bugtext() const;
  inline void set_bugtext(const ::std::string& value);
  inline void set_bugtext(const char* value);
  inline void set_bugtext(const char* value, size_t size);
  inline ::std::string* mutable_bugtext();
  inline ::std::string* release_bugtext();
  inline void set_allocated_bugtext(::std::string* bugtext);

  // optional bytes screenshot = 3;
  inline bool has_screenshot() const;
  inline void clear_screenshot();
  static const int kScreenshotFieldNumber = 3;
  inline const ::std::string& screenshot() const;
  inline void set_screenshot(const ::std::string& value);
  inline void set_screenshot(const char* value);
  inline void set_screenshot(const void* value, size_t size);
  inline ::std::string* mutable_screenshot();
  inline ::std::string* release_screenshot();
  inline void set_allocated_screenshot(::std::string* screenshot);

  // @@protoc_insertion_point(class_scope:CMsgClientOGSReportBug)
 private:
  inline void set_has_sessionid();
  inline void clear_has_sessionid();
  inline void set_has_bugtext();
  inline void clear_has_bugtext();
  inline void set_has_screenshot();
  inline void clear_has_screenshot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sessionid_;
  ::std::string* bugtext_;
  ::std::string* screenshot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientOGSReportBug* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientSentLogs : public ::google::protobuf::Message {
 public:
  CMsgClientSentLogs();
  virtual ~CMsgClientSentLogs();

  CMsgClientSentLogs(const CMsgClientSentLogs& from);

  inline CMsgClientSentLogs& operator=(const CMsgClientSentLogs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSentLogs& default_instance();

  void Swap(CMsgClientSentLogs* other);

  // implements Message ----------------------------------------------

  CMsgClientSentLogs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSentLogs& from);
  void MergeFrom(const CMsgClientSentLogs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientSentLogs)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSentLogs* default_instance_;
};
// -------------------------------------------------------------------

class CMsgGCClient : public ::google::protobuf::Message {
 public:
  CMsgGCClient();
  virtual ~CMsgGCClient();

  CMsgGCClient(const CMsgGCClient& from);

  inline CMsgGCClient& operator=(const CMsgGCClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCClient& default_instance();

  void Swap(CMsgGCClient* other);

  // implements Message ----------------------------------------------

  CMsgGCClient* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgGCClient& from);
  void MergeFrom(const CMsgGCClient& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint32 msgtype = 2;
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgtypeFieldNumber = 2;
  inline ::google::protobuf::uint32 msgtype() const;
  inline void set_msgtype(::google::protobuf::uint32 value);

  // optional bytes payload = 3;
  inline bool has_payload() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 3;
  inline const ::std::string& payload() const;
  inline void set_payload(const ::std::string& value);
  inline void set_payload(const char* value);
  inline void set_payload(const void* value, size_t size);
  inline ::std::string* mutable_payload();
  inline ::std::string* release_payload();
  inline void set_allocated_payload(::std::string* payload);

  // optional fixed64 steamid = 4;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 4;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional string gcname = 5;
  inline bool has_gcname() const;
  inline void clear_gcname();
  static const int kGcnameFieldNumber = 5;
  inline const ::std::string& gcname() const;
  inline void set_gcname(const ::std::string& value);
  inline void set_gcname(const char* value);
  inline void set_gcname(const char* value, size_t size);
  inline ::std::string* mutable_gcname();
  inline ::std::string* release_gcname();
  inline void set_allocated_gcname(::std::string* gcname);

  // optional uint32 ip = 6;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 6;
  inline ::google::protobuf::uint32 ip() const;
  inline void set_ip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgGCClient)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_payload();
  inline void clear_has_payload();
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_gcname();
  inline void clear_has_gcname();
  inline void set_has_ip();
  inline void clear_has_ip();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 msgtype_;
  ::std::string* payload_;
  ::google::protobuf::uint64 steamid_;
  ::std::string* gcname_;
  ::google::protobuf::uint32 ip_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgGCClient* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestFreeLicense : public ::google::protobuf::Message {
 public:
  CMsgClientRequestFreeLicense();
  virtual ~CMsgClientRequestFreeLicense();

  CMsgClientRequestFreeLicense(const CMsgClientRequestFreeLicense& from);

  inline CMsgClientRequestFreeLicense& operator=(const CMsgClientRequestFreeLicense& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestFreeLicense& default_instance();

  void Swap(CMsgClientRequestFreeLicense* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestFreeLicense* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestFreeLicense& from);
  void MergeFrom(const CMsgClientRequestFreeLicense& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 appids = 2;
  inline int appids_size() const;
  inline void clear_appids();
  static const int kAppidsFieldNumber = 2;
  inline ::google::protobuf::uint32 appids(int index) const;
  inline void set_appids(int index, ::google::protobuf::uint32 value);
  inline void add_appids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      appids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_appids();

  // @@protoc_insertion_point(class_scope:CMsgClientRequestFreeLicense)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > appids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestFreeLicense* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestFreeLicenseResponse : public ::google::protobuf::Message {
 public:
  CMsgClientRequestFreeLicenseResponse();
  virtual ~CMsgClientRequestFreeLicenseResponse();

  CMsgClientRequestFreeLicenseResponse(const CMsgClientRequestFreeLicenseResponse& from);

  inline CMsgClientRequestFreeLicenseResponse& operator=(const CMsgClientRequestFreeLicenseResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestFreeLicenseResponse& default_instance();

  void Swap(CMsgClientRequestFreeLicenseResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestFreeLicenseResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestFreeLicenseResponse& from);
  void MergeFrom(const CMsgClientRequestFreeLicenseResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // repeated uint32 granted_packageids = 2;
  inline int granted_packageids_size() const;
  inline void clear_granted_packageids();
  static const int kGrantedPackageidsFieldNumber = 2;
  inline ::google::protobuf::uint32 granted_packageids(int index) const;
  inline void set_granted_packageids(int index, ::google::protobuf::uint32 value);
  inline void add_granted_packageids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      granted_packageids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_granted_packageids();

  // repeated uint32 granted_appids = 3;
  inline int granted_appids_size() const;
  inline void clear_granted_appids();
  static const int kGrantedAppidsFieldNumber = 3;
  inline ::google::protobuf::uint32 granted_appids(int index) const;
  inline void set_granted_appids(int index, ::google::protobuf::uint32 value);
  inline void add_granted_appids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      granted_appids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_granted_appids();

  // @@protoc_insertion_point(class_scope:CMsgClientRequestFreeLicenseResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > granted_packageids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > granted_appids_;
  ::google::protobuf::uint32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestFreeLicenseResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDRMDownloadRequestWithCrashData : public ::google::protobuf::Message {
 public:
  CMsgDRMDownloadRequestWithCrashData();
  virtual ~CMsgDRMDownloadRequestWithCrashData();

  CMsgDRMDownloadRequestWithCrashData(const CMsgDRMDownloadRequestWithCrashData& from);

  inline CMsgDRMDownloadRequestWithCrashData& operator=(const CMsgDRMDownloadRequestWithCrashData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDRMDownloadRequestWithCrashData& default_instance();

  void Swap(CMsgDRMDownloadRequestWithCrashData* other);

  // implements Message ----------------------------------------------

  CMsgDRMDownloadRequestWithCrashData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDRMDownloadRequestWithCrashData& from);
  void MergeFrom(const CMsgDRMDownloadRequestWithCrashData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 download_flags = 1;
  inline bool has_download_flags() const;
  inline void clear_download_flags();
  static const int kDownloadFlagsFieldNumber = 1;
  inline ::google::protobuf::uint32 download_flags() const;
  inline void set_download_flags(::google::protobuf::uint32 value);

  // optional uint32 download_types_known = 2;
  inline bool has_download_types_known() const;
  inline void clear_download_types_known();
  static const int kDownloadTypesKnownFieldNumber = 2;
  inline ::google::protobuf::uint32 download_types_known() const;
  inline void set_download_types_known(::google::protobuf::uint32 value);

  // optional bytes guid_drm = 3;
  inline bool has_guid_drm() const;
  inline void clear_guid_drm();
  static const int kGuidDrmFieldNumber = 3;
  inline const ::std::string& guid_drm() const;
  inline void set_guid_drm(const ::std::string& value);
  inline void set_guid_drm(const char* value);
  inline void set_guid_drm(const void* value, size_t size);
  inline ::std::string* mutable_guid_drm();
  inline ::std::string* release_guid_drm();
  inline void set_allocated_guid_drm(::std::string* guid_drm);

  // optional bytes guid_split = 4;
  inline bool has_guid_split() const;
  inline void clear_guid_split();
  static const int kGuidSplitFieldNumber = 4;
  inline const ::std::string& guid_split() const;
  inline void set_guid_split(const ::std::string& value);
  inline void set_guid_split(const char* value);
  inline void set_guid_split(const void* value, size_t size);
  inline ::std::string* mutable_guid_split();
  inline ::std::string* release_guid_split();
  inline void set_allocated_guid_split(::std::string* guid_split);

  // optional bytes guid_merge = 5;
  inline bool has_guid_merge() const;
  inline void clear_guid_merge();
  static const int kGuidMergeFieldNumber = 5;
  inline const ::std::string& guid_merge() const;
  inline void set_guid_merge(const ::std::string& value);
  inline void set_guid_merge(const char* value);
  inline void set_guid_merge(const void* value, size_t size);
  inline ::std::string* mutable_guid_merge();
  inline ::std::string* release_guid_merge();
  inline void set_allocated_guid_merge(::std::string* guid_merge);

  // optional string module_name = 6;
  inline bool has_module_name() const;
  inline void clear_module_name();
  static const int kModuleNameFieldNumber = 6;
  inline const ::std::string& module_name() const;
  inline void set_module_name(const ::std::string& value);
  inline void set_module_name(const char* value);
  inline void set_module_name(const char* value, size_t size);
  inline ::std::string* mutable_module_name();
  inline ::std::string* release_module_name();
  inline void set_allocated_module_name(::std::string* module_name);

  // optional string module_path = 7;
  inline bool has_module_path() const;
  inline void clear_module_path();
  static const int kModulePathFieldNumber = 7;
  inline const ::std::string& module_path() const;
  inline void set_module_path(const ::std::string& value);
  inline void set_module_path(const char* value);
  inline void set_module_path(const char* value, size_t size);
  inline ::std::string* mutable_module_path();
  inline ::std::string* release_module_path();
  inline void set_allocated_module_path(::std::string* module_path);

  // optional bytes crash_data = 8;
  inline bool has_crash_data() const;
  inline void clear_crash_data();
  static const int kCrashDataFieldNumber = 8;
  inline const ::std::string& crash_data() const;
  inline void set_crash_data(const ::std::string& value);
  inline void set_crash_data(const char* value);
  inline void set_crash_data(const void* value, size_t size);
  inline ::std::string* mutable_crash_data();
  inline ::std::string* release_crash_data();
  inline void set_allocated_crash_data(::std::string* crash_data);

  // @@protoc_insertion_point(class_scope:CMsgDRMDownloadRequestWithCrashData)
 private:
  inline void set_has_download_flags();
  inline void clear_has_download_flags();
  inline void set_has_download_types_known();
  inline void clear_has_download_types_known();
  inline void set_has_guid_drm();
  inline void clear_has_guid_drm();
  inline void set_has_guid_split();
  inline void clear_has_guid_split();
  inline void set_has_guid_merge();
  inline void clear_has_guid_merge();
  inline void set_has_module_name();
  inline void clear_has_module_name();
  inline void set_has_module_path();
  inline void clear_has_module_path();
  inline void set_has_crash_data();
  inline void clear_has_crash_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 download_flags_;
  ::google::protobuf::uint32 download_types_known_;
  ::std::string* guid_drm_;
  ::std::string* guid_split_;
  ::std::string* guid_merge_;
  ::std::string* module_name_;
  ::std::string* module_path_;
  ::std::string* crash_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDRMDownloadRequestWithCrashData* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDRMDownloadResponse : public ::google::protobuf::Message {
 public:
  CMsgDRMDownloadResponse();
  virtual ~CMsgDRMDownloadResponse();

  CMsgDRMDownloadResponse(const CMsgDRMDownloadResponse& from);

  inline CMsgDRMDownloadResponse& operator=(const CMsgDRMDownloadResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDRMDownloadResponse& default_instance();

  void Swap(CMsgDRMDownloadResponse* other);

  // implements Message ----------------------------------------------

  CMsgDRMDownloadResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDRMDownloadResponse& from);
  void MergeFrom(const CMsgDRMDownloadResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 app_id = 2;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 blob_download_type = 3;
  inline bool has_blob_download_type() const;
  inline void clear_blob_download_type();
  static const int kBlobDownloadTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 blob_download_type() const;
  inline void set_blob_download_type(::google::protobuf::uint32 value);

  // optional bytes merge_guid = 4;
  inline bool has_merge_guid() const;
  inline void clear_merge_guid();
  static const int kMergeGuidFieldNumber = 4;
  inline const ::std::string& merge_guid() const;
  inline void set_merge_guid(const ::std::string& value);
  inline void set_merge_guid(const char* value);
  inline void set_merge_guid(const void* value, size_t size);
  inline ::std::string* mutable_merge_guid();
  inline ::std::string* release_merge_guid();
  inline void set_allocated_merge_guid(::std::string* merge_guid);

  // optional uint32 download_file_dfs_ip = 5;
  inline bool has_download_file_dfs_ip() const;
  inline void clear_download_file_dfs_ip();
  static const int kDownloadFileDfsIpFieldNumber = 5;
  inline ::google::protobuf::uint32 download_file_dfs_ip() const;
  inline void set_download_file_dfs_ip(::google::protobuf::uint32 value);

  // optional uint32 download_file_dfs_port = 6;
  inline bool has_download_file_dfs_port() const;
  inline void clear_download_file_dfs_port();
  static const int kDownloadFileDfsPortFieldNumber = 6;
  inline ::google::protobuf::uint32 download_file_dfs_port() const;
  inline void set_download_file_dfs_port(::google::protobuf::uint32 value);

  // optional string download_file_url = 7;
  inline bool has_download_file_url() const;
  inline void clear_download_file_url();
  static const int kDownloadFileUrlFieldNumber = 7;
  inline const ::std::string& download_file_url() const;
  inline void set_download_file_url(const ::std::string& value);
  inline void set_download_file_url(const char* value);
  inline void set_download_file_url(const char* value, size_t size);
  inline ::std::string* mutable_download_file_url();
  inline ::std::string* release_download_file_url();
  inline void set_allocated_download_file_url(::std::string* download_file_url);

  // optional string module_path = 8;
  inline bool has_module_path() const;
  inline void clear_module_path();
  static const int kModulePathFieldNumber = 8;
  inline const ::std::string& module_path() const;
  inline void set_module_path(const ::std::string& value);
  inline void set_module_path(const char* value);
  inline void set_module_path(const char* value, size_t size);
  inline ::std::string* mutable_module_path();
  inline ::std::string* release_module_path();
  inline void set_allocated_module_path(::std::string* module_path);

  // @@protoc_insertion_point(class_scope:CMsgDRMDownloadResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_blob_download_type();
  inline void clear_has_blob_download_type();
  inline void set_has_merge_guid();
  inline void clear_has_merge_guid();
  inline void set_has_download_file_dfs_ip();
  inline void clear_has_download_file_dfs_ip();
  inline void set_has_download_file_dfs_port();
  inline void clear_has_download_file_dfs_port();
  inline void set_has_download_file_url();
  inline void clear_has_download_file_url();
  inline void set_has_module_path();
  inline void clear_has_module_path();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 app_id_;
  ::std::string* merge_guid_;
  ::google::protobuf::uint32 blob_download_type_;
  ::google::protobuf::uint32 download_file_dfs_ip_;
  ::std::string* download_file_url_;
  ::std::string* module_path_;
  ::google::protobuf::uint32 download_file_dfs_port_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDRMDownloadResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDRMFinalResult : public ::google::protobuf::Message {
 public:
  CMsgDRMFinalResult();
  virtual ~CMsgDRMFinalResult();

  CMsgDRMFinalResult(const CMsgDRMFinalResult& from);

  inline CMsgDRMFinalResult& operator=(const CMsgDRMFinalResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDRMFinalResult& default_instance();

  void Swap(CMsgDRMFinalResult* other);

  // implements Message ----------------------------------------------

  CMsgDRMFinalResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDRMFinalResult& from);
  void MergeFrom(const CMsgDRMFinalResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eResult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEResultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 app_id = 2;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 blob_download_type = 3;
  inline bool has_blob_download_type() const;
  inline void clear_blob_download_type();
  static const int kBlobDownloadTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 blob_download_type() const;
  inline void set_blob_download_type(::google::protobuf::uint32 value);

  // optional uint32 error_detail = 4;
  inline bool has_error_detail() const;
  inline void clear_error_detail();
  static const int kErrorDetailFieldNumber = 4;
  inline ::google::protobuf::uint32 error_detail() const;
  inline void set_error_detail(::google::protobuf::uint32 value);

  // optional bytes merge_guid = 5;
  inline bool has_merge_guid() const;
  inline void clear_merge_guid();
  static const int kMergeGuidFieldNumber = 5;
  inline const ::std::string& merge_guid() const;
  inline void set_merge_guid(const ::std::string& value);
  inline void set_merge_guid(const char* value);
  inline void set_merge_guid(const void* value, size_t size);
  inline ::std::string* mutable_merge_guid();
  inline ::std::string* release_merge_guid();
  inline void set_allocated_merge_guid(::std::string* merge_guid);

  // optional uint32 download_file_dfs_ip = 6;
  inline bool has_download_file_dfs_ip() const;
  inline void clear_download_file_dfs_ip();
  static const int kDownloadFileDfsIpFieldNumber = 6;
  inline ::google::protobuf::uint32 download_file_dfs_ip() const;
  inline void set_download_file_dfs_ip(::google::protobuf::uint32 value);

  // optional uint32 download_file_dfs_port = 7;
  inline bool has_download_file_dfs_port() const;
  inline void clear_download_file_dfs_port();
  static const int kDownloadFileDfsPortFieldNumber = 7;
  inline ::google::protobuf::uint32 download_file_dfs_port() const;
  inline void set_download_file_dfs_port(::google::protobuf::uint32 value);

  // optional string download_file_url = 8;
  inline bool has_download_file_url() const;
  inline void clear_download_file_url();
  static const int kDownloadFileUrlFieldNumber = 8;
  inline const ::std::string& download_file_url() const;
  inline void set_download_file_url(const ::std::string& value);
  inline void set_download_file_url(const char* value);
  inline void set_download_file_url(const char* value, size_t size);
  inline ::std::string* mutable_download_file_url();
  inline ::std::string* release_download_file_url();
  inline void set_allocated_download_file_url(::std::string* download_file_url);

  // @@protoc_insertion_point(class_scope:CMsgDRMFinalResult)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_blob_download_type();
  inline void clear_has_blob_download_type();
  inline void set_has_error_detail();
  inline void clear_has_error_detail();
  inline void set_has_merge_guid();
  inline void clear_has_merge_guid();
  inline void set_has_download_file_dfs_ip();
  inline void clear_has_download_file_dfs_ip();
  inline void set_has_download_file_dfs_port();
  inline void clear_has_download_file_dfs_port();
  inline void set_has_download_file_url();
  inline void clear_has_download_file_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 blob_download_type_;
  ::google::protobuf::uint32 error_detail_;
  ::std::string* merge_guid_;
  ::google::protobuf::uint32 download_file_dfs_ip_;
  ::google::protobuf::uint32 download_file_dfs_port_;
  ::std::string* download_file_url_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDRMFinalResult* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDPCheckSpecialSurvey : public ::google::protobuf::Message {
 public:
  CMsgClientDPCheckSpecialSurvey();
  virtual ~CMsgClientDPCheckSpecialSurvey();

  CMsgClientDPCheckSpecialSurvey(const CMsgClientDPCheckSpecialSurvey& from);

  inline CMsgClientDPCheckSpecialSurvey& operator=(const CMsgClientDPCheckSpecialSurvey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDPCheckSpecialSurvey& default_instance();

  void Swap(CMsgClientDPCheckSpecialSurvey* other);

  // implements Message ----------------------------------------------

  CMsgClientDPCheckSpecialSurvey* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDPCheckSpecialSurvey& from);
  void MergeFrom(const CMsgClientDPCheckSpecialSurvey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 survey_id = 1;
  inline bool has_survey_id() const;
  inline void clear_survey_id();
  static const int kSurveyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 survey_id() const;
  inline void set_survey_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientDPCheckSpecialSurvey)
 private:
  inline void set_has_survey_id();
  inline void clear_has_survey_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 survey_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDPCheckSpecialSurvey* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDPCheckSpecialSurveyResponse : public ::google::protobuf::Message {
 public:
  CMsgClientDPCheckSpecialSurveyResponse();
  virtual ~CMsgClientDPCheckSpecialSurveyResponse();

  CMsgClientDPCheckSpecialSurveyResponse(const CMsgClientDPCheckSpecialSurveyResponse& from);

  inline CMsgClientDPCheckSpecialSurveyResponse& operator=(const CMsgClientDPCheckSpecialSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDPCheckSpecialSurveyResponse& default_instance();

  void Swap(CMsgClientDPCheckSpecialSurveyResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientDPCheckSpecialSurveyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDPCheckSpecialSurveyResponse& from);
  void MergeFrom(const CMsgClientDPCheckSpecialSurveyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eResult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEResultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional uint32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string custom_url = 4;
  inline bool has_custom_url() const;
  inline void clear_custom_url();
  static const int kCustomUrlFieldNumber = 4;
  inline const ::std::string& custom_url() const;
  inline void set_custom_url(const ::std::string& value);
  inline void set_custom_url(const char* value);
  inline void set_custom_url(const char* value, size_t size);
  inline ::std::string* mutable_custom_url();
  inline ::std::string* release_custom_url();
  inline void set_allocated_custom_url(::std::string* custom_url);

  // optional bool include_software = 5;
  inline bool has_include_software() const;
  inline void clear_include_software();
  static const int kIncludeSoftwareFieldNumber = 5;
  inline bool include_software() const;
  inline void set_include_software(bool value);

  // optional bytes token = 6;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 6;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const void* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:CMsgClientDPCheckSpecialSurveyResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_custom_url();
  inline void clear_has_custom_url();
  inline void set_has_include_software();
  inline void clear_has_include_software();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::uint32 state_;
  ::std::string* name_;
  ::std::string* custom_url_;
  ::std::string* token_;
  bool include_software_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDPCheckSpecialSurveyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDPSendSpecialSurveyResponse : public ::google::protobuf::Message {
 public:
  CMsgClientDPSendSpecialSurveyResponse();
  virtual ~CMsgClientDPSendSpecialSurveyResponse();

  CMsgClientDPSendSpecialSurveyResponse(const CMsgClientDPSendSpecialSurveyResponse& from);

  inline CMsgClientDPSendSpecialSurveyResponse& operator=(const CMsgClientDPSendSpecialSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDPSendSpecialSurveyResponse& default_instance();

  void Swap(CMsgClientDPSendSpecialSurveyResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientDPSendSpecialSurveyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDPSendSpecialSurveyResponse& from);
  void MergeFrom(const CMsgClientDPSendSpecialSurveyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 survey_id = 1;
  inline bool has_survey_id() const;
  inline void clear_survey_id();
  static const int kSurveyIdFieldNumber = 1;
  inline ::google::protobuf::uint32 survey_id() const;
  inline void set_survey_id(::google::protobuf::uint32 value);

  // optional bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:CMsgClientDPSendSpecialSurveyResponse)
 private:
  inline void set_has_survey_id();
  inline void clear_has_survey_id();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* data_;
  ::google::protobuf::uint32 survey_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDPSendSpecialSurveyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDPSendSpecialSurveyResponseReply : public ::google::protobuf::Message {
 public:
  CMsgClientDPSendSpecialSurveyResponseReply();
  virtual ~CMsgClientDPSendSpecialSurveyResponseReply();

  CMsgClientDPSendSpecialSurveyResponseReply(const CMsgClientDPSendSpecialSurveyResponseReply& from);

  inline CMsgClientDPSendSpecialSurveyResponseReply& operator=(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDPSendSpecialSurveyResponseReply& default_instance();

  void Swap(CMsgClientDPSendSpecialSurveyResponseReply* other);

  // implements Message ----------------------------------------------

  CMsgClientDPSendSpecialSurveyResponseReply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from);
  void MergeFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eResult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEResultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional bytes token = 2;
  inline bool has_token() const;
  inline void clear_token();
  static const int kTokenFieldNumber = 2;
  inline const ::std::string& token() const;
  inline void set_token(const ::std::string& value);
  inline void set_token(const char* value);
  inline void set_token(const void* value, size_t size);
  inline ::std::string* mutable_token();
  inline ::std::string* release_token();
  inline void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:CMsgClientDPSendSpecialSurveyResponseReply)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_token();
  inline void clear_has_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* token_;
  ::google::protobuf::uint32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDPSendSpecialSurveyResponseReply* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestForgottenPasswordEmail : public ::google::protobuf::Message {
 public:
  CMsgClientRequestForgottenPasswordEmail();
  virtual ~CMsgClientRequestForgottenPasswordEmail();

  CMsgClientRequestForgottenPasswordEmail(const CMsgClientRequestForgottenPasswordEmail& from);

  inline CMsgClientRequestForgottenPasswordEmail& operator=(const CMsgClientRequestForgottenPasswordEmail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestForgottenPasswordEmail& default_instance();

  void Swap(CMsgClientRequestForgottenPasswordEmail* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestForgottenPasswordEmail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestForgottenPasswordEmail& from);
  void MergeFrom(const CMsgClientRequestForgottenPasswordEmail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account_name = 1;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  inline void set_allocated_account_name(::std::string* account_name);

  // optional string password_tried = 2;
  inline bool has_password_tried() const;
  inline void clear_password_tried();
  static const int kPasswordTriedFieldNumber = 2;
  inline const ::std::string& password_tried() const;
  inline void set_password_tried(const ::std::string& value);
  inline void set_password_tried(const char* value);
  inline void set_password_tried(const char* value, size_t size);
  inline ::std::string* mutable_password_tried();
  inline ::std::string* release_password_tried();
  inline void set_allocated_password_tried(::std::string* password_tried);

  // @@protoc_insertion_point(class_scope:CMsgClientRequestForgottenPasswordEmail)
 private:
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_password_tried();
  inline void clear_has_password_tried();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* account_name_;
  ::std::string* password_tried_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestForgottenPasswordEmail* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestForgottenPasswordEmailResponse : public ::google::protobuf::Message {
 public:
  CMsgClientRequestForgottenPasswordEmailResponse();
  virtual ~CMsgClientRequestForgottenPasswordEmailResponse();

  CMsgClientRequestForgottenPasswordEmailResponse(const CMsgClientRequestForgottenPasswordEmailResponse& from);

  inline CMsgClientRequestForgottenPasswordEmailResponse& operator=(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestForgottenPasswordEmailResponse& default_instance();

  void Swap(CMsgClientRequestForgottenPasswordEmailResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestForgottenPasswordEmailResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from);
  void MergeFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eResult = 1;
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEResultFieldNumber = 1;
  inline ::google::protobuf::uint32 eresult() const;
  inline void set_eresult(::google::protobuf::uint32 value);

  // optional bool use_secret_question = 2;
  inline bool has_use_secret_question() const;
  inline void clear_use_secret_question();
  static const int kUseSecretQuestionFieldNumber = 2;
  inline bool use_secret_question() const;
  inline void set_use_secret_question(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientRequestForgottenPasswordEmailResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_use_secret_question();
  inline void clear_has_use_secret_question();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eresult_;
  bool use_secret_question_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestForgottenPasswordEmailResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientItemAnnouncements_UnseenItem : public ::google::protobuf::Message {
 public:
  CMsgClientItemAnnouncements_UnseenItem();
  virtual ~CMsgClientItemAnnouncements_UnseenItem();

  CMsgClientItemAnnouncements_UnseenItem(const CMsgClientItemAnnouncements_UnseenItem& from);

  inline CMsgClientItemAnnouncements_UnseenItem& operator=(const CMsgClientItemAnnouncements_UnseenItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientItemAnnouncements_UnseenItem& default_instance();

  void Swap(CMsgClientItemAnnouncements_UnseenItem* other);

  // implements Message ----------------------------------------------

  CMsgClientItemAnnouncements_UnseenItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientItemAnnouncements_UnseenItem& from);
  void MergeFrom(const CMsgClientItemAnnouncements_UnseenItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint64 context_id = 2;
  inline bool has_context_id() const;
  inline void clear_context_id();
  static const int kContextIdFieldNumber = 2;
  inline ::google::protobuf::uint64 context_id() const;
  inline void set_context_id(::google::protobuf::uint64 value);

  // optional uint64 asset_id = 3;
  inline bool has_asset_id() const;
  inline void clear_asset_id();
  static const int kAssetIdFieldNumber = 3;
  inline ::google::protobuf::uint64 asset_id() const;
  inline void set_asset_id(::google::protobuf::uint64 value);

  // optional uint64 amount = 4;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 4;
  inline ::google::protobuf::uint64 amount() const;
  inline void set_amount(::google::protobuf::uint64 value);

  // optional fixed32 rtime32_gained = 5;
  inline bool has_rtime32_gained() const;
  inline void clear_rtime32_gained();
  static const int kRtime32GainedFieldNumber = 5;
  inline ::google::protobuf::uint32 rtime32_gained() const;
  inline void set_rtime32_gained(::google::protobuf::uint32 value);

  // optional uint32 source_appid = 6;
  inline bool has_source_appid() const;
  inline void clear_source_appid();
  static const int kSourceAppidFieldNumber = 6;
  inline ::google::protobuf::uint32 source_appid() const;
  inline void set_source_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientItemAnnouncements.UnseenItem)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_context_id();
  inline void clear_has_context_id();
  inline void set_has_asset_id();
  inline void clear_has_asset_id();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_rtime32_gained();
  inline void clear_has_rtime32_gained();
  inline void set_has_source_appid();
  inline void clear_has_source_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 context_id_;
  ::google::protobuf::uint64 asset_id_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 rtime32_gained_;
  ::google::protobuf::uint64 amount_;
  ::google::protobuf::uint32 source_appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientItemAnnouncements_UnseenItem* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientItemAnnouncements : public ::google::protobuf::Message {
 public:
  CMsgClientItemAnnouncements();
  virtual ~CMsgClientItemAnnouncements();

  CMsgClientItemAnnouncements(const CMsgClientItemAnnouncements& from);

  inline CMsgClientItemAnnouncements& operator=(const CMsgClientItemAnnouncements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientItemAnnouncements& default_instance();

  void Swap(CMsgClientItemAnnouncements* other);

  // implements Message ----------------------------------------------

  CMsgClientItemAnnouncements* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientItemAnnouncements& from);
  void MergeFrom(const CMsgClientItemAnnouncements& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientItemAnnouncements_UnseenItem UnseenItem;

  // accessors -------------------------------------------------------

  // optional uint32 count_new_items = 1;
  inline bool has_count_new_items() const;
  inline void clear_count_new_items();
  static const int kCountNewItemsFieldNumber = 1;
  inline ::google::protobuf::uint32 count_new_items() const;
  inline void set_count_new_items(::google::protobuf::uint32 value);

  // repeated .CMsgClientItemAnnouncements.UnseenItem unseen_items = 2;
  inline int unseen_items_size() const;
  inline void clear_unseen_items();
  static const int kUnseenItemsFieldNumber = 2;
  inline const ::CMsgClientItemAnnouncements_UnseenItem& unseen_items(int index) const;
  inline ::CMsgClientItemAnnouncements_UnseenItem* mutable_unseen_items(int index);
  inline ::CMsgClientItemAnnouncements_UnseenItem* add_unseen_items();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >&
      unseen_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >*
      mutable_unseen_items();

  // @@protoc_insertion_point(class_scope:CMsgClientItemAnnouncements)
 private:
  inline void set_has_count_new_items();
  inline void clear_has_count_new_items();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem > unseen_items_;
  ::google::protobuf::uint32 count_new_items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientItemAnnouncements* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestItemAnnouncements : public ::google::protobuf::Message {
 public:
  CMsgClientRequestItemAnnouncements();
  virtual ~CMsgClientRequestItemAnnouncements();

  CMsgClientRequestItemAnnouncements(const CMsgClientRequestItemAnnouncements& from);

  inline CMsgClientRequestItemAnnouncements& operator=(const CMsgClientRequestItemAnnouncements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestItemAnnouncements& default_instance();

  void Swap(CMsgClientRequestItemAnnouncements* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestItemAnnouncements* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestItemAnnouncements& from);
  void MergeFrom(const CMsgClientRequestItemAnnouncements& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientRequestItemAnnouncements)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestItemAnnouncements* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUserNotifications_Notification : public ::google::protobuf::Message {
 public:
  CMsgClientUserNotifications_Notification();
  virtual ~CMsgClientUserNotifications_Notification();

  CMsgClientUserNotifications_Notification(const CMsgClientUserNotifications_Notification& from);

  inline CMsgClientUserNotifications_Notification& operator=(const CMsgClientUserNotifications_Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUserNotifications_Notification& default_instance();

  void Swap(CMsgClientUserNotifications_Notification* other);

  // implements Message ----------------------------------------------

  CMsgClientUserNotifications_Notification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUserNotifications_Notification& from);
  void MergeFrom(const CMsgClientUserNotifications_Notification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 user_notification_type = 1;
  inline bool has_user_notification_type() const;
  inline void clear_user_notification_type();
  static const int kUserNotificationTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 user_notification_type() const;
  inline void set_user_notification_type(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUserNotifications.Notification)
 private:
  inline void set_has_user_notification_type();
  inline void clear_has_user_notification_type();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 user_notification_type_;
  ::google::protobuf::uint32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUserNotifications_Notification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUserNotifications : public ::google::protobuf::Message {
 public:
  CMsgClientUserNotifications();
  virtual ~CMsgClientUserNotifications();

  CMsgClientUserNotifications(const CMsgClientUserNotifications& from);

  inline CMsgClientUserNotifications& operator=(const CMsgClientUserNotifications& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUserNotifications& default_instance();

  void Swap(CMsgClientUserNotifications* other);

  // implements Message ----------------------------------------------

  CMsgClientUserNotifications* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUserNotifications& from);
  void MergeFrom(const CMsgClientUserNotifications& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientUserNotifications_Notification Notification;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientUserNotifications.Notification notifications = 1;
  inline int notifications_size() const;
  inline void clear_notifications();
  static const int kNotificationsFieldNumber = 1;
  inline const ::CMsgClientUserNotifications_Notification& notifications(int index) const;
  inline ::CMsgClientUserNotifications_Notification* mutable_notifications(int index);
  inline ::CMsgClientUserNotifications_Notification* add_notifications();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >&
      notifications() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >*
      mutable_notifications();

  // @@protoc_insertion_point(class_scope:CMsgClientUserNotifications)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientUserNotifications_Notification > notifications_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUserNotifications* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientCommentNotifications : public ::google::protobuf::Message {
 public:
  CMsgClientCommentNotifications();
  virtual ~CMsgClientCommentNotifications();

  CMsgClientCommentNotifications(const CMsgClientCommentNotifications& from);

  inline CMsgClientCommentNotifications& operator=(const CMsgClientCommentNotifications& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCommentNotifications& default_instance();

  void Swap(CMsgClientCommentNotifications* other);

  // implements Message ----------------------------------------------

  CMsgClientCommentNotifications* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientCommentNotifications& from);
  void MergeFrom(const CMsgClientCommentNotifications& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 count_new_comments = 1;
  inline bool has_count_new_comments() const;
  inline void clear_count_new_comments();
  static const int kCountNewCommentsFieldNumber = 1;
  inline ::google::protobuf::uint32 count_new_comments() const;
  inline void set_count_new_comments(::google::protobuf::uint32 value);

  // optional uint32 count_new_comments_owner = 2;
  inline bool has_count_new_comments_owner() const;
  inline void clear_count_new_comments_owner();
  static const int kCountNewCommentsOwnerFieldNumber = 2;
  inline ::google::protobuf::uint32 count_new_comments_owner() const;
  inline void set_count_new_comments_owner(::google::protobuf::uint32 value);

  // optional uint32 count_new_comments_subscriptions = 3;
  inline bool has_count_new_comments_subscriptions() const;
  inline void clear_count_new_comments_subscriptions();
  static const int kCountNewCommentsSubscriptionsFieldNumber = 3;
  inline ::google::protobuf::uint32 count_new_comments_subscriptions() const;
  inline void set_count_new_comments_subscriptions(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientCommentNotifications)
 private:
  inline void set_has_count_new_comments();
  inline void clear_has_count_new_comments();
  inline void set_has_count_new_comments_owner();
  inline void clear_has_count_new_comments_owner();
  inline void set_has_count_new_comments_subscriptions();
  inline void clear_has_count_new_comments_subscriptions();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 count_new_comments_;
  ::google::protobuf::uint32 count_new_comments_owner_;
  ::google::protobuf::uint32 count_new_comments_subscriptions_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientCommentNotifications* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestCommentNotifications : public ::google::protobuf::Message {
 public:
  CMsgClientRequestCommentNotifications();
  virtual ~CMsgClientRequestCommentNotifications();

  CMsgClientRequestCommentNotifications(const CMsgClientRequestCommentNotifications& from);

  inline CMsgClientRequestCommentNotifications& operator=(const CMsgClientRequestCommentNotifications& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestCommentNotifications& default_instance();

  void Swap(CMsgClientRequestCommentNotifications* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestCommentNotifications* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestCommentNotifications& from);
  void MergeFrom(const CMsgClientRequestCommentNotifications& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientRequestCommentNotifications)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestCommentNotifications* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientOfflineMessageNotification : public ::google::protobuf::Message {
 public:
  CMsgClientOfflineMessageNotification();
  virtual ~CMsgClientOfflineMessageNotification();

  CMsgClientOfflineMessageNotification(const CMsgClientOfflineMessageNotification& from);

  inline CMsgClientOfflineMessageNotification& operator=(const CMsgClientOfflineMessageNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientOfflineMessageNotification& default_instance();

  void Swap(CMsgClientOfflineMessageNotification* other);

  // implements Message ----------------------------------------------

  CMsgClientOfflineMessageNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientOfflineMessageNotification& from);
  void MergeFrom(const CMsgClientOfflineMessageNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 offline_messages = 1;
  inline bool has_offline_messages() const;
  inline void clear_offline_messages();
  static const int kOfflineMessagesFieldNumber = 1;
  inline ::google::protobuf::uint32 offline_messages() const;
  inline void set_offline_messages(::google::protobuf::uint32 value);

  // repeated uint32 friends_with_offline_messages = 2;
  inline int friends_with_offline_messages_size() const;
  inline void clear_friends_with_offline_messages();
  static const int kFriendsWithOfflineMessagesFieldNumber = 2;
  inline ::google::protobuf::uint32 friends_with_offline_messages(int index) const;
  inline void set_friends_with_offline_messages(int index, ::google::protobuf::uint32 value);
  inline void add_friends_with_offline_messages(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      friends_with_offline_messages() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_friends_with_offline_messages();

  // @@protoc_insertion_point(class_scope:CMsgClientOfflineMessageNotification)
 private:
  inline void set_has_offline_messages();
  inline void clear_has_offline_messages();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > friends_with_offline_messages_;
  ::google::protobuf::uint32 offline_messages_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientOfflineMessageNotification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientRequestOfflineMessageCount : public ::google::protobuf::Message {
 public:
  CMsgClientRequestOfflineMessageCount();
  virtual ~CMsgClientRequestOfflineMessageCount();

  CMsgClientRequestOfflineMessageCount(const CMsgClientRequestOfflineMessageCount& from);

  inline CMsgClientRequestOfflineMessageCount& operator=(const CMsgClientRequestOfflineMessageCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestOfflineMessageCount& default_instance();

  void Swap(CMsgClientRequestOfflineMessageCount* other);

  // implements Message ----------------------------------------------

  CMsgClientRequestOfflineMessageCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientRequestOfflineMessageCount& from);
  void MergeFrom(const CMsgClientRequestOfflineMessageCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientRequestOfflineMessageCount)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientRequestOfflineMessageCount* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistory : public ::google::protobuf::Message {
 public:
  CMsgClientChatGetFriendMessageHistory();
  virtual ~CMsgClientChatGetFriendMessageHistory();

  CMsgClientChatGetFriendMessageHistory(const CMsgClientChatGetFriendMessageHistory& from);

  inline CMsgClientChatGetFriendMessageHistory& operator=(const CMsgClientChatGetFriendMessageHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientChatGetFriendMessageHistory& default_instance();

  void Swap(CMsgClientChatGetFriendMessageHistory* other);

  // implements Message ----------------------------------------------

  CMsgClientChatGetFriendMessageHistory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientChatGetFriendMessageHistory& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistory)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientChatGetFriendMessageHistory* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage : public ::google::protobuf::Message {
 public:
  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage();
  virtual ~CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage();

  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from);

  inline CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& operator=(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& default_instance();

  void Swap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other);

  // implements Message ----------------------------------------------

  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  inline ::google::protobuf::uint32 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint32 value);

  // optional string message = 3;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 3;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional bool unread = 4;
  inline bool has_unread() const;
  inline void clear_unread();
  static const int kUnreadFieldNumber = 4;
  inline bool unread() const;
  inline void set_unread(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_unread();
  inline void clear_has_unread();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 timestamp_;
  ::std::string* message_;
  bool unread_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistoryResponse : public ::google::protobuf::Message {
 public:
  CMsgClientChatGetFriendMessageHistoryResponse();
  virtual ~CMsgClientChatGetFriendMessageHistoryResponse();

  CMsgClientChatGetFriendMessageHistoryResponse(const CMsgClientChatGetFriendMessageHistoryResponse& from);

  inline CMsgClientChatGetFriendMessageHistoryResponse& operator=(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientChatGetFriendMessageHistoryResponse& default_instance();

  void Swap(CMsgClientChatGetFriendMessageHistoryResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientChatGetFriendMessageHistoryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage FriendMessage;

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  inline bool has_steamid() const;
  inline void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 steamid() const;
  inline void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 success = 2;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 2;
  inline ::google::protobuf::uint32 success() const;
  inline void set_success(::google::protobuf::uint32 value);

  // repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  inline int messages_size() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 3;
  inline const ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& messages(int index) const;
  inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* mutable_messages(int index);
  inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* add_messages();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >&
      messages() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >*
      mutable_messages();

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistoryResponse)
 private:
  inline void set_has_steamid();
  inline void clear_has_steamid();
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage > messages_;
  ::google::protobuf::uint32 success_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientChatGetFriendMessageHistoryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistoryForOfflineMessages : public ::google::protobuf::Message {
 public:
  CMsgClientChatGetFriendMessageHistoryForOfflineMessages();
  virtual ~CMsgClientChatGetFriendMessageHistoryForOfflineMessages();

  CMsgClientChatGetFriendMessageHistoryForOfflineMessages(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from);

  inline CMsgClientChatGetFriendMessageHistoryForOfflineMessages& operator=(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& default_instance();

  void Swap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other);

  // implements Message ----------------------------------------------

  CMsgClientChatGetFriendMessageHistoryForOfflineMessages* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientChatGetFriendMessageHistoryForOfflineMessages* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientFSGetFriendsSteamLevels : public ::google::protobuf::Message {
 public:
  CMsgClientFSGetFriendsSteamLevels();
  virtual ~CMsgClientFSGetFriendsSteamLevels();

  CMsgClientFSGetFriendsSteamLevels(const CMsgClientFSGetFriendsSteamLevels& from);

  inline CMsgClientFSGetFriendsSteamLevels& operator=(const CMsgClientFSGetFriendsSteamLevels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFSGetFriendsSteamLevels& default_instance();

  void Swap(CMsgClientFSGetFriendsSteamLevels* other);

  // implements Message ----------------------------------------------

  CMsgClientFSGetFriendsSteamLevels* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientFSGetFriendsSteamLevels& from);
  void MergeFrom(const CMsgClientFSGetFriendsSteamLevels& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 accountids = 1;
  inline int accountids_size() const;
  inline void clear_accountids();
  static const int kAccountidsFieldNumber = 1;
  inline ::google::protobuf::uint32 accountids(int index) const;
  inline void set_accountids(int index, ::google::protobuf::uint32 value);
  inline void add_accountids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      accountids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_accountids();

  // @@protoc_insertion_point(class_scope:CMsgClientFSGetFriendsSteamLevels)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > accountids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientFSGetFriendsSteamLevels* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientFSGetFriendsSteamLevelsResponse_Friend : public ::google::protobuf::Message {
 public:
  CMsgClientFSGetFriendsSteamLevelsResponse_Friend();
  virtual ~CMsgClientFSGetFriendsSteamLevelsResponse_Friend();

  CMsgClientFSGetFriendsSteamLevelsResponse_Friend(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from);

  inline CMsgClientFSGetFriendsSteamLevelsResponse_Friend& operator=(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& default_instance();

  void Swap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other);

  // implements Message ----------------------------------------------

  CMsgClientFSGetFriendsSteamLevelsResponse_Friend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from);
  void MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  inline ::google::protobuf::uint32 accountid() const;
  inline void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
 private:
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientFSGetFriendsSteamLevelsResponse_Friend* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientFSGetFriendsSteamLevelsResponse : public ::google::protobuf::Message {
 public:
  CMsgClientFSGetFriendsSteamLevelsResponse();
  virtual ~CMsgClientFSGetFriendsSteamLevelsResponse();

  CMsgClientFSGetFriendsSteamLevelsResponse(const CMsgClientFSGetFriendsSteamLevelsResponse& from);

  inline CMsgClientFSGetFriendsSteamLevelsResponse& operator=(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFSGetFriendsSteamLevelsResponse& default_instance();

  void Swap(CMsgClientFSGetFriendsSteamLevelsResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientFSGetFriendsSteamLevelsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from);
  void MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientFSGetFriendsSteamLevelsResponse_Friend Friend;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 1;
  inline const ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& friends(int index) const;
  inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* mutable_friends(int index);
  inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >*
      mutable_friends();

  // @@protoc_insertion_point(class_scope:CMsgClientFSGetFriendsSteamLevelsResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend > friends_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientFSGetFriendsSteamLevelsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientEmailAddrInfo : public ::google::protobuf::Message {
 public:
  CMsgClientEmailAddrInfo();
  virtual ~CMsgClientEmailAddrInfo();

  CMsgClientEmailAddrInfo(const CMsgClientEmailAddrInfo& from);

  inline CMsgClientEmailAddrInfo& operator=(const CMsgClientEmailAddrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientEmailAddrInfo& default_instance();

  void Swap(CMsgClientEmailAddrInfo* other);

  // implements Message ----------------------------------------------

  CMsgClientEmailAddrInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientEmailAddrInfo& from);
  void MergeFrom(const CMsgClientEmailAddrInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email_address = 1;
  inline bool has_email_address() const;
  inline void clear_email_address();
  static const int kEmailAddressFieldNumber = 1;
  inline const ::std::string& email_address() const;
  inline void set_email_address(const ::std::string& value);
  inline void set_email_address(const char* value);
  inline void set_email_address(const char* value, size_t size);
  inline ::std::string* mutable_email_address();
  inline ::std::string* release_email_address();
  inline void set_allocated_email_address(::std::string* email_address);

  // optional bool email_is_validated = 2;
  inline bool has_email_is_validated() const;
  inline void clear_email_is_validated();
  static const int kEmailIsValidatedFieldNumber = 2;
  inline bool email_is_validated() const;
  inline void set_email_is_validated(bool value);

  // optional bool email_validation_changed = 3;
  inline bool has_email_validation_changed() const;
  inline void clear_email_validation_changed();
  static const int kEmailValidationChangedFieldNumber = 3;
  inline bool email_validation_changed() const;
  inline void set_email_validation_changed(bool value);

  // optional bool credential_change_requires_code = 4;
  inline bool has_credential_change_requires_code() const;
  inline void clear_credential_change_requires_code();
  static const int kCredentialChangeRequiresCodeFieldNumber = 4;
  inline bool credential_change_requires_code() const;
  inline void set_credential_change_requires_code(bool value);

  // optional bool password_or_secretqa_change_requires_code = 5;
  inline bool has_password_or_secretqa_change_requires_code() const;
  inline void clear_password_or_secretqa_change_requires_code();
  static const int kPasswordOrSecretqaChangeRequiresCodeFieldNumber = 5;
  inline bool password_or_secretqa_change_requires_code() const;
  inline void set_password_or_secretqa_change_requires_code(bool value);

  // optional bool remind_user_about_email = 6;
  inline bool has_remind_user_about_email() const;
  inline void clear_remind_user_about_email();
  static const int kRemindUserAboutEmailFieldNumber = 6;
  inline bool remind_user_about_email() const;
  inline void set_remind_user_about_email(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientEmailAddrInfo)
 private:
  inline void set_has_email_address();
  inline void clear_has_email_address();
  inline void set_has_email_is_validated();
  inline void clear_has_email_is_validated();
  inline void set_has_email_validation_changed();
  inline void clear_has_email_validation_changed();
  inline void set_has_credential_change_requires_code();
  inline void clear_has_credential_change_requires_code();
  inline void set_has_password_or_secretqa_change_requires_code();
  inline void clear_has_password_or_secretqa_change_requires_code();
  inline void set_has_remind_user_about_email();
  inline void clear_has_remind_user_about_email();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* email_address_;
  bool email_is_validated_;
  bool email_validation_changed_;
  bool credential_change_requires_code_;
  bool password_or_secretqa_change_requires_code_;
  bool remind_user_about_email_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientEmailAddrInfo* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummary_PublishedFileId : public ::google::protobuf::Message {
 public:
  CMsgCREItemVoteSummary_PublishedFileId();
  virtual ~CMsgCREItemVoteSummary_PublishedFileId();

  CMsgCREItemVoteSummary_PublishedFileId(const CMsgCREItemVoteSummary_PublishedFileId& from);

  inline CMsgCREItemVoteSummary_PublishedFileId& operator=(const CMsgCREItemVoteSummary_PublishedFileId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREItemVoteSummary_PublishedFileId& default_instance();

  void Swap(CMsgCREItemVoteSummary_PublishedFileId* other);

  // implements Message ----------------------------------------------

  CMsgCREItemVoteSummary_PublishedFileId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREItemVoteSummary_PublishedFileId& from);
  void MergeFrom(const CMsgCREItemVoteSummary_PublishedFileId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 published_file_id = 1;
  inline bool has_published_file_id() const;
  inline void clear_published_file_id();
  static const int kPublishedFileIdFieldNumber = 1;
  inline ::google::protobuf::uint64 published_file_id() const;
  inline void set_published_file_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummary.PublishedFileId)
 private:
  inline void set_has_published_file_id();
  inline void clear_has_published_file_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 published_file_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREItemVoteSummary_PublishedFileId* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummary : public ::google::protobuf::Message {
 public:
  CMsgCREItemVoteSummary();
  virtual ~CMsgCREItemVoteSummary();

  CMsgCREItemVoteSummary(const CMsgCREItemVoteSummary& from);

  inline CMsgCREItemVoteSummary& operator=(const CMsgCREItemVoteSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREItemVoteSummary& default_instance();

  void Swap(CMsgCREItemVoteSummary* other);

  // implements Message ----------------------------------------------

  CMsgCREItemVoteSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREItemVoteSummary& from);
  void MergeFrom(const CMsgCREItemVoteSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgCREItemVoteSummary_PublishedFileId PublishedFileId;

  // accessors -------------------------------------------------------

  // repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  inline int published_file_ids_size() const;
  inline void clear_published_file_ids();
  static const int kPublishedFileIdsFieldNumber = 1;
  inline const ::CMsgCREItemVoteSummary_PublishedFileId& published_file_ids(int index) const;
  inline ::CMsgCREItemVoteSummary_PublishedFileId* mutable_published_file_ids(int index);
  inline ::CMsgCREItemVoteSummary_PublishedFileId* add_published_file_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >&
      published_file_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >*
      mutable_published_file_ids();

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummary)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId > published_file_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREItemVoteSummary* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummaryResponse_ItemVoteSummary : public ::google::protobuf::Message {
 public:
  CMsgCREItemVoteSummaryResponse_ItemVoteSummary();
  virtual ~CMsgCREItemVoteSummaryResponse_ItemVoteSummary();

  CMsgCREItemVoteSummaryResponse_ItemVoteSummary(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from);

  inline CMsgCREItemVoteSummaryResponse_ItemVoteSummary& operator=(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& default_instance();

  void Swap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other);

  // implements Message ----------------------------------------------

  CMsgCREItemVoteSummaryResponse_ItemVoteSummary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from);
  void MergeFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 published_file_id = 1;
  inline bool has_published_file_id() const;
  inline void clear_published_file_id();
  static const int kPublishedFileIdFieldNumber = 1;
  inline ::google::protobuf::uint64 published_file_id() const;
  inline void set_published_file_id(::google::protobuf::uint64 value);

  // optional int32 votes_for = 2;
  inline bool has_votes_for() const;
  inline void clear_votes_for();
  static const int kVotesForFieldNumber = 2;
  inline ::google::protobuf::int32 votes_for() const;
  inline void set_votes_for(::google::protobuf::int32 value);

  // optional int32 votes_against = 3;
  inline bool has_votes_against() const;
  inline void clear_votes_against();
  static const int kVotesAgainstFieldNumber = 3;
  inline ::google::protobuf::int32 votes_against() const;
  inline void set_votes_against(::google::protobuf::int32 value);

  // optional int32 reports = 4;
  inline bool has_reports() const;
  inline void clear_reports();
  static const int kReportsFieldNumber = 4;
  inline ::google::protobuf::int32 reports() const;
  inline void set_reports(::google::protobuf::int32 value);

  // optional float score = 5;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 5;
  inline float score() const;
  inline void set_score(float value);

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
 private:
  inline void set_has_published_file_id();
  inline void clear_has_published_file_id();
  inline void set_has_votes_for();
  inline void clear_has_votes_for();
  inline void set_has_votes_against();
  inline void clear_has_votes_against();
  inline void set_has_reports();
  inline void clear_has_reports();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 published_file_id_;
  ::google::protobuf::int32 votes_for_;
  ::google::protobuf::int32 votes_against_;
  ::google::protobuf::int32 reports_;
  float score_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREItemVoteSummaryResponse_ItemVoteSummary* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummaryResponse : public ::google::protobuf::Message {
 public:
  CMsgCREItemVoteSummaryResponse();
  virtual ~CMsgCREItemVoteSummaryResponse();

  CMsgCREItemVoteSummaryResponse(const CMsgCREItemVoteSummaryResponse& from);

  inline CMsgCREItemVoteSummaryResponse& operator=(const CMsgCREItemVoteSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREItemVoteSummaryResponse& default_instance();

  void Swap(CMsgCREItemVoteSummaryResponse* other);

  // implements Message ----------------------------------------------

  CMsgCREItemVoteSummaryResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREItemVoteSummaryResponse& from);
  void MergeFrom(const CMsgCREItemVoteSummaryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgCREItemVoteSummaryResponse_ItemVoteSummary ItemVoteSummary;

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  inline int item_vote_summaries_size() const;
  inline void clear_item_vote_summaries();
  static const int kItemVoteSummariesFieldNumber = 2;
  inline const ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& item_vote_summaries(int index) const;
  inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* mutable_item_vote_summaries(int index);
  inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* add_item_vote_summaries();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >&
      item_vote_summaries() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >*
      mutable_item_vote_summaries();

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummaryResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary > item_vote_summaries_;
  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREItemVoteSummaryResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREUpdateUserPublishedItemVote : public ::google::protobuf::Message {
 public:
  CMsgCREUpdateUserPublishedItemVote();
  virtual ~CMsgCREUpdateUserPublishedItemVote();

  CMsgCREUpdateUserPublishedItemVote(const CMsgCREUpdateUserPublishedItemVote& from);

  inline CMsgCREUpdateUserPublishedItemVote& operator=(const CMsgCREUpdateUserPublishedItemVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREUpdateUserPublishedItemVote& default_instance();

  void Swap(CMsgCREUpdateUserPublishedItemVote* other);

  // implements Message ----------------------------------------------

  CMsgCREUpdateUserPublishedItemVote* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREUpdateUserPublishedItemVote& from);
  void MergeFrom(const CMsgCREUpdateUserPublishedItemVote& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 published_file_id = 1;
  inline bool has_published_file_id() const;
  inline void clear_published_file_id();
  static const int kPublishedFileIdFieldNumber = 1;
  inline ::google::protobuf::uint64 published_file_id() const;
  inline void set_published_file_id(::google::protobuf::uint64 value);

  // optional bool vote_up = 2;
  inline bool has_vote_up() const;
  inline void clear_vote_up();
  static const int kVoteUpFieldNumber = 2;
  inline bool vote_up() const;
  inline void set_vote_up(bool value);

  // @@protoc_insertion_point(class_scope:CMsgCREUpdateUserPublishedItemVote)
 private:
  inline void set_has_published_file_id();
  inline void clear_has_published_file_id();
  inline void set_has_vote_up();
  inline void clear_has_vote_up();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 published_file_id_;
  bool vote_up_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREUpdateUserPublishedItemVote* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREUpdateUserPublishedItemVoteResponse : public ::google::protobuf::Message {
 public:
  CMsgCREUpdateUserPublishedItemVoteResponse();
  virtual ~CMsgCREUpdateUserPublishedItemVoteResponse();

  CMsgCREUpdateUserPublishedItemVoteResponse(const CMsgCREUpdateUserPublishedItemVoteResponse& from);

  inline CMsgCREUpdateUserPublishedItemVoteResponse& operator=(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREUpdateUserPublishedItemVoteResponse& default_instance();

  void Swap(CMsgCREUpdateUserPublishedItemVoteResponse* other);

  // implements Message ----------------------------------------------

  CMsgCREUpdateUserPublishedItemVoteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from);
  void MergeFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgCREUpdateUserPublishedItemVoteResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREUpdateUserPublishedItemVoteResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId : public ::google::protobuf::Message {
 public:
  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();
  virtual ~CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();

  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from);

  inline CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& operator=(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& default_instance();

  void Swap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other);

  // implements Message ----------------------------------------------

  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 published_file_id = 1;
  inline bool has_published_file_id() const;
  inline void clear_published_file_id();
  static const int kPublishedFileIdFieldNumber = 1;
  inline ::google::protobuf::uint64 published_file_id() const;
  inline void set_published_file_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
 private:
  inline void set_has_published_file_id();
  inline void clear_has_published_file_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 published_file_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetails : public ::google::protobuf::Message {
 public:
  CMsgCREGetUserPublishedItemVoteDetails();
  virtual ~CMsgCREGetUserPublishedItemVoteDetails();

  CMsgCREGetUserPublishedItemVoteDetails(const CMsgCREGetUserPublishedItemVoteDetails& from);

  inline CMsgCREGetUserPublishedItemVoteDetails& operator=(const CMsgCREGetUserPublishedItemVoteDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREGetUserPublishedItemVoteDetails& default_instance();

  void Swap(CMsgCREGetUserPublishedItemVoteDetails* other);

  // implements Message ----------------------------------------------

  CMsgCREGetUserPublishedItemVoteDetails* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId PublishedFileId;

  // accessors -------------------------------------------------------

  // repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  inline int published_file_ids_size() const;
  inline void clear_published_file_ids();
  static const int kPublishedFileIdsFieldNumber = 1;
  inline const ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& published_file_ids(int index) const;
  inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* mutable_published_file_ids(int index);
  inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* add_published_file_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >&
      published_file_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >*
      mutable_published_file_ids();

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetails)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId > published_file_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREGetUserPublishedItemVoteDetails* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail : public ::google::protobuf::Message {
 public:
  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();
  virtual ~CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();

  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from);

  inline CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& operator=(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& default_instance();

  void Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other);

  // implements Message ----------------------------------------------

  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 published_file_id = 1;
  inline bool has_published_file_id() const;
  inline void clear_published_file_id();
  static const int kPublishedFileIdFieldNumber = 1;
  inline ::google::protobuf::uint64 published_file_id() const;
  inline void set_published_file_id(::google::protobuf::uint64 value);

  // optional int32 vote = 2 [default = 0];
  inline bool has_vote() const;
  inline void clear_vote();
  static const int kVoteFieldNumber = 2;
  inline ::google::protobuf::int32 vote() const;
  inline void set_vote(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
 private:
  inline void set_has_published_file_id();
  inline void clear_has_published_file_id();
  inline void set_has_vote();
  inline void clear_has_vote();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 published_file_id_;
  ::google::protobuf::int32 vote_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* default_instance_;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetailsResponse : public ::google::protobuf::Message {
 public:
  CMsgCREGetUserPublishedItemVoteDetailsResponse();
  virtual ~CMsgCREGetUserPublishedItemVoteDetailsResponse();

  CMsgCREGetUserPublishedItemVoteDetailsResponse(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from);

  inline CMsgCREGetUserPublishedItemVoteDetailsResponse& operator=(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCREGetUserPublishedItemVoteDetailsResponse& default_instance();

  void Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other);

  // implements Message ----------------------------------------------

  CMsgCREGetUserPublishedItemVoteDetailsResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail UserItemVoteDetail;

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  inline int user_item_vote_details_size() const;
  inline void clear_user_item_vote_details();
  static const int kUserItemVoteDetailsFieldNumber = 2;
  inline const ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& user_item_vote_details(int index) const;
  inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* mutable_user_item_vote_details(int index);
  inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* add_user_item_vote_details();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >&
      user_item_vote_details() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >*
      mutable_user_item_vote_details();

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetailsResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail > user_item_vote_details_;
  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgCREGetUserPublishedItemVoteDetailsResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFSGetFollowerCount : public ::google::protobuf::Message {
 public:
  CMsgFSGetFollowerCount();
  virtual ~CMsgFSGetFollowerCount();

  CMsgFSGetFollowerCount(const CMsgFSGetFollowerCount& from);

  inline CMsgFSGetFollowerCount& operator=(const CMsgFSGetFollowerCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFSGetFollowerCount& default_instance();

  void Swap(CMsgFSGetFollowerCount* other);

  // implements Message ----------------------------------------------

  CMsgFSGetFollowerCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFSGetFollowerCount& from);
  void MergeFrom(const CMsgFSGetFollowerCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgFSGetFollowerCount)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgFSGetFollowerCount* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFSGetFollowerCountResponse : public ::google::protobuf::Message {
 public:
  CMsgFSGetFollowerCountResponse();
  virtual ~CMsgFSGetFollowerCountResponse();

  CMsgFSGetFollowerCountResponse(const CMsgFSGetFollowerCountResponse& from);

  inline CMsgFSGetFollowerCountResponse& operator=(const CMsgFSGetFollowerCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFSGetFollowerCountResponse& default_instance();

  void Swap(CMsgFSGetFollowerCountResponse* other);

  // implements Message ----------------------------------------------

  CMsgFSGetFollowerCountResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFSGetFollowerCountResponse& from);
  void MergeFrom(const CMsgFSGetFollowerCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 count = 2 [default = 0];
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgFSGetFollowerCountResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgFSGetFollowerCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFSGetIsFollowing : public ::google::protobuf::Message {
 public:
  CMsgFSGetIsFollowing();
  virtual ~CMsgFSGetIsFollowing();

  CMsgFSGetIsFollowing(const CMsgFSGetIsFollowing& from);

  inline CMsgFSGetIsFollowing& operator=(const CMsgFSGetIsFollowing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFSGetIsFollowing& default_instance();

  void Swap(CMsgFSGetIsFollowing* other);

  // implements Message ----------------------------------------------

  CMsgFSGetIsFollowing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFSGetIsFollowing& from);
  void MergeFrom(const CMsgFSGetIsFollowing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  inline bool has_steam_id() const;
  inline void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  inline ::google::protobuf::uint64 steam_id() const;
  inline void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgFSGetIsFollowing)
 private:
  inline void set_has_steam_id();
  inline void clear_has_steam_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 steam_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgFSGetIsFollowing* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFSGetIsFollowingResponse : public ::google::protobuf::Message {
 public:
  CMsgFSGetIsFollowingResponse();
  virtual ~CMsgFSGetIsFollowingResponse();

  CMsgFSGetIsFollowingResponse(const CMsgFSGetIsFollowingResponse& from);

  inline CMsgFSGetIsFollowingResponse& operator=(const CMsgFSGetIsFollowingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFSGetIsFollowingResponse& default_instance();

  void Swap(CMsgFSGetIsFollowingResponse* other);

  // implements Message ----------------------------------------------

  CMsgFSGetIsFollowingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFSGetIsFollowingResponse& from);
  void MergeFrom(const CMsgFSGetIsFollowingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional bool is_following = 2 [default = false];
  inline bool has_is_following() const;
  inline void clear_is_following();
  static const int kIsFollowingFieldNumber = 2;
  inline bool is_following() const;
  inline void set_is_following(bool value);

  // @@protoc_insertion_point(class_scope:CMsgFSGetIsFollowingResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_is_following();
  inline void clear_has_is_following();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  bool is_following_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgFSGetIsFollowingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFSEnumerateFollowingList : public ::google::protobuf::Message {
 public:
  CMsgFSEnumerateFollowingList();
  virtual ~CMsgFSEnumerateFollowingList();

  CMsgFSEnumerateFollowingList(const CMsgFSEnumerateFollowingList& from);

  inline CMsgFSEnumerateFollowingList& operator=(const CMsgFSEnumerateFollowingList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFSEnumerateFollowingList& default_instance();

  void Swap(CMsgFSEnumerateFollowingList* other);

  // implements Message ----------------------------------------------

  CMsgFSEnumerateFollowingList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFSEnumerateFollowingList& from);
  void MergeFrom(const CMsgFSEnumerateFollowingList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 start_index = 1;
  inline bool has_start_index() const;
  inline void clear_start_index();
  static const int kStartIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 start_index() const;
  inline void set_start_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgFSEnumerateFollowingList)
 private:
  inline void set_has_start_index();
  inline void clear_has_start_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 start_index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgFSEnumerateFollowingList* default_instance_;
};
// -------------------------------------------------------------------

class CMsgFSEnumerateFollowingListResponse : public ::google::protobuf::Message {
 public:
  CMsgFSEnumerateFollowingListResponse();
  virtual ~CMsgFSEnumerateFollowingListResponse();

  CMsgFSEnumerateFollowingListResponse(const CMsgFSEnumerateFollowingListResponse& from);

  inline CMsgFSEnumerateFollowingListResponse& operator=(const CMsgFSEnumerateFollowingListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFSEnumerateFollowingListResponse& default_instance();

  void Swap(CMsgFSEnumerateFollowingListResponse* other);

  // implements Message ----------------------------------------------

  CMsgFSEnumerateFollowingListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgFSEnumerateFollowingListResponse& from);
  void MergeFrom(const CMsgFSEnumerateFollowingListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 total_results = 2;
  inline bool has_total_results() const;
  inline void clear_total_results();
  static const int kTotalResultsFieldNumber = 2;
  inline ::google::protobuf::int32 total_results() const;
  inline void set_total_results(::google::protobuf::int32 value);

  // repeated fixed64 steam_ids = 3;
  inline int steam_ids_size() const;
  inline void clear_steam_ids();
  static const int kSteamIdsFieldNumber = 3;
  inline ::google::protobuf::uint64 steam_ids(int index) const;
  inline void set_steam_ids(int index, ::google::protobuf::uint64 value);
  inline void add_steam_ids(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steam_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steam_ids();

  // @@protoc_insertion_point(class_scope:CMsgFSEnumerateFollowingListResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_total_results();
  inline void clear_has_total_results();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 total_results_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steam_ids_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgFSEnumerateFollowingListResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDPGetNumberOfCurrentPlayers : public ::google::protobuf::Message {
 public:
  CMsgDPGetNumberOfCurrentPlayers();
  virtual ~CMsgDPGetNumberOfCurrentPlayers();

  CMsgDPGetNumberOfCurrentPlayers(const CMsgDPGetNumberOfCurrentPlayers& from);

  inline CMsgDPGetNumberOfCurrentPlayers& operator=(const CMsgDPGetNumberOfCurrentPlayers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDPGetNumberOfCurrentPlayers& default_instance();

  void Swap(CMsgDPGetNumberOfCurrentPlayers* other);

  // implements Message ----------------------------------------------

  CMsgDPGetNumberOfCurrentPlayers* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDPGetNumberOfCurrentPlayers& from);
  void MergeFrom(const CMsgDPGetNumberOfCurrentPlayers& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgDPGetNumberOfCurrentPlayers)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDPGetNumberOfCurrentPlayers* default_instance_;
};
// -------------------------------------------------------------------

class CMsgDPGetNumberOfCurrentPlayersResponse : public ::google::protobuf::Message {
 public:
  CMsgDPGetNumberOfCurrentPlayersResponse();
  virtual ~CMsgDPGetNumberOfCurrentPlayersResponse();

  CMsgDPGetNumberOfCurrentPlayersResponse(const CMsgDPGetNumberOfCurrentPlayersResponse& from);

  inline CMsgDPGetNumberOfCurrentPlayersResponse& operator=(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDPGetNumberOfCurrentPlayersResponse& default_instance();

  void Swap(CMsgDPGetNumberOfCurrentPlayersResponse* other);

  // implements Message ----------------------------------------------

  CMsgDPGetNumberOfCurrentPlayersResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from);
  void MergeFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 player_count = 2;
  inline bool has_player_count() const;
  inline void clear_player_count();
  static const int kPlayerCountFieldNumber = 2;
  inline ::google::protobuf::int32 player_count() const;
  inline void set_player_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgDPGetNumberOfCurrentPlayersResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_player_count();
  inline void clear_has_player_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 player_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgDPGetNumberOfCurrentPlayersResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientFriendUserStatusPublished : public ::google::protobuf::Message {
 public:
  CMsgClientFriendUserStatusPublished();
  virtual ~CMsgClientFriendUserStatusPublished();

  CMsgClientFriendUserStatusPublished(const CMsgClientFriendUserStatusPublished& from);

  inline CMsgClientFriendUserStatusPublished& operator=(const CMsgClientFriendUserStatusPublished& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendUserStatusPublished& default_instance();

  void Swap(CMsgClientFriendUserStatusPublished* other);

  // implements Message ----------------------------------------------

  CMsgClientFriendUserStatusPublished* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientFriendUserStatusPublished& from);
  void MergeFrom(const CMsgClientFriendUserStatusPublished& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 friend_steamid = 1;
  inline bool has_friend_steamid() const;
  inline void clear_friend_steamid();
  static const int kFriendSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 friend_steamid() const;
  inline void set_friend_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 2;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 2;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional string status_text = 3;
  inline bool has_status_text() const;
  inline void clear_status_text();
  static const int kStatusTextFieldNumber = 3;
  inline const ::std::string& status_text() const;
  inline void set_status_text(const ::std::string& value);
  inline void set_status_text(const char* value);
  inline void set_status_text(const char* value, size_t size);
  inline ::std::string* mutable_status_text();
  inline ::std::string* release_status_text();
  inline void set_allocated_status_text(::std::string* status_text);

  // @@protoc_insertion_point(class_scope:CMsgClientFriendUserStatusPublished)
 private:
  inline void set_has_friend_steamid();
  inline void clear_has_friend_steamid();
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_status_text();
  inline void clear_has_status_text();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 friend_steamid_;
  ::std::string* status_text_;
  ::google::protobuf::uint32 appid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientFriendUserStatusPublished* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientServiceMethodLegacy : public ::google::protobuf::Message {
 public:
  CMsgClientServiceMethodLegacy();
  virtual ~CMsgClientServiceMethodLegacy();

  CMsgClientServiceMethodLegacy(const CMsgClientServiceMethodLegacy& from);

  inline CMsgClientServiceMethodLegacy& operator=(const CMsgClientServiceMethodLegacy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientServiceMethodLegacy& default_instance();

  void Swap(CMsgClientServiceMethodLegacy* other);

  // implements Message ----------------------------------------------

  CMsgClientServiceMethodLegacy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientServiceMethodLegacy& from);
  void MergeFrom(const CMsgClientServiceMethodLegacy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method_name = 1;
  inline bool has_method_name() const;
  inline void clear_method_name();
  static const int kMethodNameFieldNumber = 1;
  inline const ::std::string& method_name() const;
  inline void set_method_name(const ::std::string& value);
  inline void set_method_name(const char* value);
  inline void set_method_name(const char* value, size_t size);
  inline ::std::string* mutable_method_name();
  inline ::std::string* release_method_name();
  inline void set_allocated_method_name(::std::string* method_name);

  // optional bytes serialized_method = 2;
  inline bool has_serialized_method() const;
  inline void clear_serialized_method();
  static const int kSerializedMethodFieldNumber = 2;
  inline const ::std::string& serialized_method() const;
  inline void set_serialized_method(const ::std::string& value);
  inline void set_serialized_method(const char* value);
  inline void set_serialized_method(const void* value, size_t size);
  inline ::std::string* mutable_serialized_method();
  inline ::std::string* release_serialized_method();
  inline void set_allocated_serialized_method(::std::string* serialized_method);

  // optional bool is_notification = 3;
  inline bool has_is_notification() const;
  inline void clear_is_notification();
  static const int kIsNotificationFieldNumber = 3;
  inline bool is_notification() const;
  inline void set_is_notification(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientServiceMethodLegacy)
 private:
  inline void set_has_method_name();
  inline void clear_has_method_name();
  inline void set_has_serialized_method();
  inline void clear_has_serialized_method();
  inline void set_has_is_notification();
  inline void clear_has_is_notification();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* method_name_;
  ::std::string* serialized_method_;
  bool is_notification_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientServiceMethodLegacy* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientServiceMethodLegacyResponse : public ::google::protobuf::Message {
 public:
  CMsgClientServiceMethodLegacyResponse();
  virtual ~CMsgClientServiceMethodLegacyResponse();

  CMsgClientServiceMethodLegacyResponse(const CMsgClientServiceMethodLegacyResponse& from);

  inline CMsgClientServiceMethodLegacyResponse& operator=(const CMsgClientServiceMethodLegacyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientServiceMethodLegacyResponse& default_instance();

  void Swap(CMsgClientServiceMethodLegacyResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientServiceMethodLegacyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientServiceMethodLegacyResponse& from);
  void MergeFrom(const CMsgClientServiceMethodLegacyResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string method_name = 1;
  inline bool has_method_name() const;
  inline void clear_method_name();
  static const int kMethodNameFieldNumber = 1;
  inline const ::std::string& method_name() const;
  inline void set_method_name(const ::std::string& value);
  inline void set_method_name(const char* value);
  inline void set_method_name(const char* value, size_t size);
  inline ::std::string* mutable_method_name();
  inline ::std::string* release_method_name();
  inline void set_allocated_method_name(::std::string* method_name);

  // optional bytes serialized_method_response = 2;
  inline bool has_serialized_method_response() const;
  inline void clear_serialized_method_response();
  static const int kSerializedMethodResponseFieldNumber = 2;
  inline const ::std::string& serialized_method_response() const;
  inline void set_serialized_method_response(const ::std::string& value);
  inline void set_serialized_method_response(const char* value);
  inline void set_serialized_method_response(const void* value, size_t size);
  inline ::std::string* mutable_serialized_method_response();
  inline ::std::string* release_serialized_method_response();
  inline void set_allocated_serialized_method_response(::std::string* serialized_method_response);

  // @@protoc_insertion_point(class_scope:CMsgClientServiceMethodLegacyResponse)
 private:
  inline void set_has_method_name();
  inline void clear_has_method_name();
  inline void set_has_serialized_method_response();
  inline void clear_has_serialized_method_response();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* method_name_;
  ::std::string* serialized_method_response_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientServiceMethodLegacyResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUIMode : public ::google::protobuf::Message {
 public:
  CMsgClientUIMode();
  virtual ~CMsgClientUIMode();

  CMsgClientUIMode(const CMsgClientUIMode& from);

  inline CMsgClientUIMode& operator=(const CMsgClientUIMode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUIMode& default_instance();

  void Swap(CMsgClientUIMode* other);

  // implements Message ----------------------------------------------

  CMsgClientUIMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUIMode& from);
  void MergeFrom(const CMsgClientUIMode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uimode = 1;
  inline bool has_uimode() const;
  inline void clear_uimode();
  static const int kUimodeFieldNumber = 1;
  inline ::google::protobuf::uint32 uimode() const;
  inline void set_uimode(::google::protobuf::uint32 value);

  // optional uint32 chat_mode = 2;
  inline bool has_chat_mode() const;
  inline void clear_chat_mode();
  static const int kChatModeFieldNumber = 2;
  inline ::google::protobuf::uint32 chat_mode() const;
  inline void set_chat_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUIMode)
 private:
  inline void set_has_uimode();
  inline void clear_has_uimode();
  inline void set_has_chat_mode();
  inline void clear_has_chat_mode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 uimode_;
  ::google::protobuf::uint32 chat_mode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUIMode* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientVanityURLChangedNotification : public ::google::protobuf::Message {
 public:
  CMsgClientVanityURLChangedNotification();
  virtual ~CMsgClientVanityURLChangedNotification();

  CMsgClientVanityURLChangedNotification(const CMsgClientVanityURLChangedNotification& from);

  inline CMsgClientVanityURLChangedNotification& operator=(const CMsgClientVanityURLChangedNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientVanityURLChangedNotification& default_instance();

  void Swap(CMsgClientVanityURLChangedNotification* other);

  // implements Message ----------------------------------------------

  CMsgClientVanityURLChangedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientVanityURLChangedNotification& from);
  void MergeFrom(const CMsgClientVanityURLChangedNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string vanity_url = 1;
  inline bool has_vanity_url() const;
  inline void clear_vanity_url();
  static const int kVanityUrlFieldNumber = 1;
  inline const ::std::string& vanity_url() const;
  inline void set_vanity_url(const ::std::string& value);
  inline void set_vanity_url(const char* value);
  inline void set_vanity_url(const char* value, size_t size);
  inline ::std::string* mutable_vanity_url();
  inline ::std::string* release_vanity_url();
  inline void set_allocated_vanity_url(::std::string* vanity_url);

  // @@protoc_insertion_point(class_scope:CMsgClientVanityURLChangedNotification)
 private:
  inline void set_has_vanity_url();
  inline void clear_has_vanity_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* vanity_url_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientVanityURLChangedNotification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientAuthorizeLocalDeviceRequest : public ::google::protobuf::Message {
 public:
  CMsgClientAuthorizeLocalDeviceRequest();
  virtual ~CMsgClientAuthorizeLocalDeviceRequest();

  CMsgClientAuthorizeLocalDeviceRequest(const CMsgClientAuthorizeLocalDeviceRequest& from);

  inline CMsgClientAuthorizeLocalDeviceRequest& operator=(const CMsgClientAuthorizeLocalDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAuthorizeLocalDeviceRequest& default_instance();

  void Swap(CMsgClientAuthorizeLocalDeviceRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientAuthorizeLocalDeviceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientAuthorizeLocalDeviceRequest& from);
  void MergeFrom(const CMsgClientAuthorizeLocalDeviceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string device_description = 1;
  inline bool has_device_description() const;
  inline void clear_device_description();
  static const int kDeviceDescriptionFieldNumber = 1;
  inline const ::std::string& device_description() const;
  inline void set_device_description(const ::std::string& value);
  inline void set_device_description(const char* value);
  inline void set_device_description(const char* value, size_t size);
  inline ::std::string* mutable_device_description();
  inline ::std::string* release_device_description();
  inline void set_allocated_device_description(::std::string* device_description);

  // optional uint32 owner_account_id = 2;
  inline bool has_owner_account_id() const;
  inline void clear_owner_account_id();
  static const int kOwnerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 owner_account_id() const;
  inline void set_owner_account_id(::google::protobuf::uint32 value);

  // optional uint64 local_device_token = 3;
  inline bool has_local_device_token() const;
  inline void clear_local_device_token();
  static const int kLocalDeviceTokenFieldNumber = 3;
  inline ::google::protobuf::uint64 local_device_token() const;
  inline void set_local_device_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientAuthorizeLocalDeviceRequest)
 private:
  inline void set_has_device_description();
  inline void clear_has_device_description();
  inline void set_has_owner_account_id();
  inline void clear_has_owner_account_id();
  inline void set_has_local_device_token();
  inline void clear_has_local_device_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* device_description_;
  ::google::protobuf::uint64 local_device_token_;
  ::google::protobuf::uint32 owner_account_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientAuthorizeLocalDeviceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientAuthorizeLocalDevice : public ::google::protobuf::Message {
 public:
  CMsgClientAuthorizeLocalDevice();
  virtual ~CMsgClientAuthorizeLocalDevice();

  CMsgClientAuthorizeLocalDevice(const CMsgClientAuthorizeLocalDevice& from);

  inline CMsgClientAuthorizeLocalDevice& operator=(const CMsgClientAuthorizeLocalDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAuthorizeLocalDevice& default_instance();

  void Swap(CMsgClientAuthorizeLocalDevice* other);

  // implements Message ----------------------------------------------

  CMsgClientAuthorizeLocalDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientAuthorizeLocalDevice& from);
  void MergeFrom(const CMsgClientAuthorizeLocalDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional uint32 owner_account_id = 2;
  inline bool has_owner_account_id() const;
  inline void clear_owner_account_id();
  static const int kOwnerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 owner_account_id() const;
  inline void set_owner_account_id(::google::protobuf::uint32 value);

  // optional uint64 authed_device_token = 3;
  inline bool has_authed_device_token() const;
  inline void clear_authed_device_token();
  static const int kAuthedDeviceTokenFieldNumber = 3;
  inline ::google::protobuf::uint64 authed_device_token() const;
  inline void set_authed_device_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientAuthorizeLocalDevice)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_owner_account_id();
  inline void clear_has_owner_account_id();
  inline void set_has_authed_device_token();
  inline void clear_has_authed_device_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::uint32 owner_account_id_;
  ::google::protobuf::uint64 authed_device_token_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientAuthorizeLocalDevice* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientAuthorizeLocalDeviceNotification : public ::google::protobuf::Message {
 public:
  CMsgClientAuthorizeLocalDeviceNotification();
  virtual ~CMsgClientAuthorizeLocalDeviceNotification();

  CMsgClientAuthorizeLocalDeviceNotification(const CMsgClientAuthorizeLocalDeviceNotification& from);

  inline CMsgClientAuthorizeLocalDeviceNotification& operator=(const CMsgClientAuthorizeLocalDeviceNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAuthorizeLocalDeviceNotification& default_instance();

  void Swap(CMsgClientAuthorizeLocalDeviceNotification* other);

  // implements Message ----------------------------------------------

  CMsgClientAuthorizeLocalDeviceNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientAuthorizeLocalDeviceNotification& from);
  void MergeFrom(const CMsgClientAuthorizeLocalDeviceNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional uint32 owner_account_id = 2;
  inline bool has_owner_account_id() const;
  inline void clear_owner_account_id();
  static const int kOwnerAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 owner_account_id() const;
  inline void set_owner_account_id(::google::protobuf::uint32 value);

  // optional uint64 local_device_token = 3;
  inline bool has_local_device_token() const;
  inline void clear_local_device_token();
  static const int kLocalDeviceTokenFieldNumber = 3;
  inline ::google::protobuf::uint64 local_device_token() const;
  inline void set_local_device_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientAuthorizeLocalDeviceNotification)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_owner_account_id();
  inline void clear_has_owner_account_id();
  inline void set_has_local_device_token();
  inline void clear_has_local_device_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::uint32 owner_account_id_;
  ::google::protobuf::uint64 local_device_token_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientAuthorizeLocalDeviceNotification* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDeauthorizeDeviceRequest : public ::google::protobuf::Message {
 public:
  CMsgClientDeauthorizeDeviceRequest();
  virtual ~CMsgClientDeauthorizeDeviceRequest();

  CMsgClientDeauthorizeDeviceRequest(const CMsgClientDeauthorizeDeviceRequest& from);

  inline CMsgClientDeauthorizeDeviceRequest& operator=(const CMsgClientDeauthorizeDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDeauthorizeDeviceRequest& default_instance();

  void Swap(CMsgClientDeauthorizeDeviceRequest* other);

  // implements Message ----------------------------------------------

  CMsgClientDeauthorizeDeviceRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDeauthorizeDeviceRequest& from);
  void MergeFrom(const CMsgClientDeauthorizeDeviceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 deauthorization_account_id = 1;
  inline bool has_deauthorization_account_id() const;
  inline void clear_deauthorization_account_id();
  static const int kDeauthorizationAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 deauthorization_account_id() const;
  inline void set_deauthorization_account_id(::google::protobuf::uint32 value);

  // optional uint64 deauthorization_device_token = 2;
  inline bool has_deauthorization_device_token() const;
  inline void clear_deauthorization_device_token();
  static const int kDeauthorizationDeviceTokenFieldNumber = 2;
  inline ::google::protobuf::uint64 deauthorization_device_token() const;
  inline void set_deauthorization_device_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientDeauthorizeDeviceRequest)
 private:
  inline void set_has_deauthorization_account_id();
  inline void clear_has_deauthorization_account_id();
  inline void set_has_deauthorization_device_token();
  inline void clear_has_deauthorization_device_token();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 deauthorization_device_token_;
  ::google::protobuf::uint32 deauthorization_account_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDeauthorizeDeviceRequest* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientDeauthorizeDevice : public ::google::protobuf::Message {
 public:
  CMsgClientDeauthorizeDevice();
  virtual ~CMsgClientDeauthorizeDevice();

  CMsgClientDeauthorizeDevice(const CMsgClientDeauthorizeDevice& from);

  inline CMsgClientDeauthorizeDevice& operator=(const CMsgClientDeauthorizeDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDeauthorizeDevice& default_instance();

  void Swap(CMsgClientDeauthorizeDevice* other);

  // implements Message ----------------------------------------------

  CMsgClientDeauthorizeDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientDeauthorizeDevice& from);
  void MergeFrom(const CMsgClientDeauthorizeDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional uint32 deauthorization_account_id = 2;
  inline bool has_deauthorization_account_id() const;
  inline void clear_deauthorization_account_id();
  static const int kDeauthorizationAccountIdFieldNumber = 2;
  inline ::google::protobuf::uint32 deauthorization_account_id() const;
  inline void set_deauthorization_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientDeauthorizeDevice)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_deauthorization_account_id();
  inline void clear_has_deauthorization_account_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;
  ::google::protobuf::uint32 deauthorization_account_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientDeauthorizeDevice* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUseLocalDeviceAuthorizations_DeviceToken : public ::google::protobuf::Message {
 public:
  CMsgClientUseLocalDeviceAuthorizations_DeviceToken();
  virtual ~CMsgClientUseLocalDeviceAuthorizations_DeviceToken();

  CMsgClientUseLocalDeviceAuthorizations_DeviceToken(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from);

  inline CMsgClientUseLocalDeviceAuthorizations_DeviceToken& operator=(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& default_instance();

  void Swap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other);

  // implements Message ----------------------------------------------

  CMsgClientUseLocalDeviceAuthorizations_DeviceToken* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from);
  void MergeFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 owner_account_id = 1;
  inline bool has_owner_account_id() const;
  inline void clear_owner_account_id();
  static const int kOwnerAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 owner_account_id() const;
  inline void set_owner_account_id(::google::protobuf::uint32 value);

  // optional uint64 token_id = 2;
  inline bool has_token_id() const;
  inline void clear_token_id();
  static const int kTokenIdFieldNumber = 2;
  inline ::google::protobuf::uint64 token_id() const;
  inline void set_token_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
 private:
  inline void set_has_owner_account_id();
  inline void clear_has_owner_account_id();
  inline void set_has_token_id();
  inline void clear_has_token_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 token_id_;
  ::google::protobuf::uint32 owner_account_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUseLocalDeviceAuthorizations_DeviceToken* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientUseLocalDeviceAuthorizations : public ::google::protobuf::Message {
 public:
  CMsgClientUseLocalDeviceAuthorizations();
  virtual ~CMsgClientUseLocalDeviceAuthorizations();

  CMsgClientUseLocalDeviceAuthorizations(const CMsgClientUseLocalDeviceAuthorizations& from);

  inline CMsgClientUseLocalDeviceAuthorizations& operator=(const CMsgClientUseLocalDeviceAuthorizations& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientUseLocalDeviceAuthorizations& default_instance();

  void Swap(CMsgClientUseLocalDeviceAuthorizations* other);

  // implements Message ----------------------------------------------

  CMsgClientUseLocalDeviceAuthorizations* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientUseLocalDeviceAuthorizations& from);
  void MergeFrom(const CMsgClientUseLocalDeviceAuthorizations& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientUseLocalDeviceAuthorizations_DeviceToken DeviceToken;

  // accessors -------------------------------------------------------

  // repeated uint32 authorization_account_id = 1;
  inline int authorization_account_id_size() const;
  inline void clear_authorization_account_id();
  static const int kAuthorizationAccountIdFieldNumber = 1;
  inline ::google::protobuf::uint32 authorization_account_id(int index) const;
  inline void set_authorization_account_id(int index, ::google::protobuf::uint32 value);
  inline void add_authorization_account_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      authorization_account_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_authorization_account_id();

  // repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  inline int device_tokens_size() const;
  inline void clear_device_tokens();
  static const int kDeviceTokensFieldNumber = 2;
  inline const ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& device_tokens(int index) const;
  inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* mutable_device_tokens(int index);
  inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* add_device_tokens();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >&
      device_tokens() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >*
      mutable_device_tokens();

  // @@protoc_insertion_point(class_scope:CMsgClientUseLocalDeviceAuthorizations)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > authorization_account_id_;
  ::google::protobuf::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken > device_tokens_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientUseLocalDeviceAuthorizations* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetAuthorizedDevices : public ::google::protobuf::Message {
 public:
  CMsgClientGetAuthorizedDevices();
  virtual ~CMsgClientGetAuthorizedDevices();

  CMsgClientGetAuthorizedDevices(const CMsgClientGetAuthorizedDevices& from);

  inline CMsgClientGetAuthorizedDevices& operator=(const CMsgClientGetAuthorizedDevices& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetAuthorizedDevices& default_instance();

  void Swap(CMsgClientGetAuthorizedDevices* other);

  // implements Message ----------------------------------------------

  CMsgClientGetAuthorizedDevices* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetAuthorizedDevices& from);
  void MergeFrom(const CMsgClientGetAuthorizedDevices& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientGetAuthorizedDevices)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetAuthorizedDevices* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice : public ::google::protobuf::Message {
 public:
  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice();
  virtual ~CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice();

  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from);

  inline CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& operator=(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& default_instance();

  void Swap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other);

  // implements Message ----------------------------------------------

  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from);
  void MergeFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 auth_device_token = 1;
  inline bool has_auth_device_token() const;
  inline void clear_auth_device_token();
  static const int kAuthDeviceTokenFieldNumber = 1;
  inline ::google::protobuf::uint64 auth_device_token() const;
  inline void set_auth_device_token(::google::protobuf::uint64 value);

  // optional string device_name = 2;
  inline bool has_device_name() const;
  inline void clear_device_name();
  static const int kDeviceNameFieldNumber = 2;
  inline const ::std::string& device_name() const;
  inline void set_device_name(const ::std::string& value);
  inline void set_device_name(const char* value);
  inline void set_device_name(const char* value, size_t size);
  inline ::std::string* mutable_device_name();
  inline ::std::string* release_device_name();
  inline void set_allocated_device_name(::std::string* device_name);

  // optional uint32 last_access_time = 3;
  inline bool has_last_access_time() const;
  inline void clear_last_access_time();
  static const int kLastAccessTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 last_access_time() const;
  inline void set_last_access_time(::google::protobuf::uint32 value);

  // optional uint32 borrower_id = 4;
  inline bool has_borrower_id() const;
  inline void clear_borrower_id();
  static const int kBorrowerIdFieldNumber = 4;
  inline ::google::protobuf::uint32 borrower_id() const;
  inline void set_borrower_id(::google::protobuf::uint32 value);

  // optional bool is_pending = 5;
  inline bool has_is_pending() const;
  inline void clear_is_pending();
  static const int kIsPendingFieldNumber = 5;
  inline bool is_pending() const;
  inline void set_is_pending(bool value);

  // optional uint32 app_played = 6;
  inline bool has_app_played() const;
  inline void clear_app_played();
  static const int kAppPlayedFieldNumber = 6;
  inline ::google::protobuf::uint32 app_played() const;
  inline void set_app_played(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
 private:
  inline void set_has_auth_device_token();
  inline void clear_has_auth_device_token();
  inline void set_has_device_name();
  inline void clear_has_device_name();
  inline void set_has_last_access_time();
  inline void clear_has_last_access_time();
  inline void set_has_borrower_id();
  inline void clear_has_borrower_id();
  inline void set_has_is_pending();
  inline void clear_has_is_pending();
  inline void set_has_app_played();
  inline void clear_has_app_played();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 auth_device_token_;
  ::std::string* device_name_;
  ::google::protobuf::uint32 last_access_time_;
  ::google::protobuf::uint32 borrower_id_;
  bool is_pending_;
  ::google::protobuf::uint32 app_played_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientGetAuthorizedDevicesResponse : public ::google::protobuf::Message {
 public:
  CMsgClientGetAuthorizedDevicesResponse();
  virtual ~CMsgClientGetAuthorizedDevicesResponse();

  CMsgClientGetAuthorizedDevicesResponse(const CMsgClientGetAuthorizedDevicesResponse& from);

  inline CMsgClientGetAuthorizedDevicesResponse& operator=(const CMsgClientGetAuthorizedDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetAuthorizedDevicesResponse& default_instance();

  void Swap(CMsgClientGetAuthorizedDevicesResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientGetAuthorizedDevicesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientGetAuthorizedDevicesResponse& from);
  void MergeFrom(const CMsgClientGetAuthorizedDevicesResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice AuthorizedDevice;

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  inline int authorized_device_size() const;
  inline void clear_authorized_device();
  static const int kAuthorizedDeviceFieldNumber = 2;
  inline const ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& authorized_device(int index) const;
  inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* mutable_authorized_device(int index);
  inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* add_authorized_device();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >&
      authorized_device() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >*
      mutable_authorized_device();

  // @@protoc_insertion_point(class_scope:CMsgClientGetAuthorizedDevicesResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice > authorized_device_;
  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientGetAuthorizedDevicesResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryLockStatus_LockedLibrary : public ::google::protobuf::Message {
 public:
  CMsgClientSharedLibraryLockStatus_LockedLibrary();
  virtual ~CMsgClientSharedLibraryLockStatus_LockedLibrary();

  CMsgClientSharedLibraryLockStatus_LockedLibrary(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from);

  inline CMsgClientSharedLibraryLockStatus_LockedLibrary& operator=(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSharedLibraryLockStatus_LockedLibrary& default_instance();

  void Swap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other);

  // implements Message ----------------------------------------------

  CMsgClientSharedLibraryLockStatus_LockedLibrary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from);
  void MergeFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 owner_id = 1;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint32 value);

  // optional uint32 locked_by = 2;
  inline bool has_locked_by() const;
  inline void clear_locked_by();
  static const int kLockedByFieldNumber = 2;
  inline ::google::protobuf::uint32 locked_by() const;
  inline void set_locked_by(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryLockStatus.LockedLibrary)
 private:
  inline void set_has_owner_id();
  inline void clear_has_owner_id();
  inline void set_has_locked_by();
  inline void clear_has_locked_by();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 owner_id_;
  ::google::protobuf::uint32 locked_by_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSharedLibraryLockStatus_LockedLibrary* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryLockStatus : public ::google::protobuf::Message {
 public:
  CMsgClientSharedLibraryLockStatus();
  virtual ~CMsgClientSharedLibraryLockStatus();

  CMsgClientSharedLibraryLockStatus(const CMsgClientSharedLibraryLockStatus& from);

  inline CMsgClientSharedLibraryLockStatus& operator=(const CMsgClientSharedLibraryLockStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSharedLibraryLockStatus& default_instance();

  void Swap(CMsgClientSharedLibraryLockStatus* other);

  // implements Message ----------------------------------------------

  CMsgClientSharedLibraryLockStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSharedLibraryLockStatus& from);
  void MergeFrom(const CMsgClientSharedLibraryLockStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientSharedLibraryLockStatus_LockedLibrary LockedLibrary;

  // accessors -------------------------------------------------------

  // repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  inline int locked_library_size() const;
  inline void clear_locked_library();
  static const int kLockedLibraryFieldNumber = 1;
  inline const ::CMsgClientSharedLibraryLockStatus_LockedLibrary& locked_library(int index) const;
  inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* mutable_locked_library(int index);
  inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* add_locked_library();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >&
      locked_library() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >*
      mutable_locked_library();

  // optional uint32 own_library_locked_by = 2;
  inline bool has_own_library_locked_by() const;
  inline void clear_own_library_locked_by();
  static const int kOwnLibraryLockedByFieldNumber = 2;
  inline ::google::protobuf::uint32 own_library_locked_by() const;
  inline void set_own_library_locked_by(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryLockStatus)
 private:
  inline void set_has_own_library_locked_by();
  inline void clear_has_own_library_locked_by();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary > locked_library_;
  ::google::protobuf::uint32 own_library_locked_by_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSharedLibraryLockStatus* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryStopPlaying_StopApp : public ::google::protobuf::Message {
 public:
  CMsgClientSharedLibraryStopPlaying_StopApp();
  virtual ~CMsgClientSharedLibraryStopPlaying_StopApp();

  CMsgClientSharedLibraryStopPlaying_StopApp(const CMsgClientSharedLibraryStopPlaying_StopApp& from);

  inline CMsgClientSharedLibraryStopPlaying_StopApp& operator=(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSharedLibraryStopPlaying_StopApp& default_instance();

  void Swap(CMsgClientSharedLibraryStopPlaying_StopApp* other);

  // implements Message ----------------------------------------------

  CMsgClientSharedLibraryStopPlaying_StopApp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from);
  void MergeFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 owner_id = 2;
  inline bool has_owner_id() const;
  inline void clear_owner_id();
  static const int kOwnerIdFieldNumber = 2;
  inline ::google::protobuf::uint32 owner_id() const;
  inline void set_owner_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryStopPlaying.StopApp)
 private:
  inline void set_has_app_id();
  inline void clear_has_app_id();
  inline void set_has_owner_id();
  inline void clear_has_owner_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 owner_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSharedLibraryStopPlaying_StopApp* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryStopPlaying : public ::google::protobuf::Message {
 public:
  CMsgClientSharedLibraryStopPlaying();
  virtual ~CMsgClientSharedLibraryStopPlaying();

  CMsgClientSharedLibraryStopPlaying(const CMsgClientSharedLibraryStopPlaying& from);

  inline CMsgClientSharedLibraryStopPlaying& operator=(const CMsgClientSharedLibraryStopPlaying& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSharedLibraryStopPlaying& default_instance();

  void Swap(CMsgClientSharedLibraryStopPlaying* other);

  // implements Message ----------------------------------------------

  CMsgClientSharedLibraryStopPlaying* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientSharedLibraryStopPlaying& from);
  void MergeFrom(const CMsgClientSharedLibraryStopPlaying& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CMsgClientSharedLibraryStopPlaying_StopApp StopApp;

  // accessors -------------------------------------------------------

  // optional int32 seconds_left = 1;
  inline bool has_seconds_left() const;
  inline void clear_seconds_left();
  static const int kSecondsLeftFieldNumber = 1;
  inline ::google::protobuf::int32 seconds_left() const;
  inline void set_seconds_left(::google::protobuf::int32 value);

  // repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  inline int stop_apps_size() const;
  inline void clear_stop_apps();
  static const int kStopAppsFieldNumber = 2;
  inline const ::CMsgClientSharedLibraryStopPlaying_StopApp& stop_apps(int index) const;
  inline ::CMsgClientSharedLibraryStopPlaying_StopApp* mutable_stop_apps(int index);
  inline ::CMsgClientSharedLibraryStopPlaying_StopApp* add_stop_apps();
  inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >&
      stop_apps() const;
  inline ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >*
      mutable_stop_apps();

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryStopPlaying)
 private:
  inline void set_has_seconds_left();
  inline void clear_has_seconds_left();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp > stop_apps_;
  ::google::protobuf::int32 seconds_left_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientSharedLibraryStopPlaying* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientServiceCall : public ::google::protobuf::Message {
 public:
  CMsgClientServiceCall();
  virtual ~CMsgClientServiceCall();

  CMsgClientServiceCall(const CMsgClientServiceCall& from);

  inline CMsgClientServiceCall& operator=(const CMsgClientServiceCall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientServiceCall& default_instance();

  void Swap(CMsgClientServiceCall* other);

  // implements Message ----------------------------------------------

  CMsgClientServiceCall* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientServiceCall& from);
  void MergeFrom(const CMsgClientServiceCall& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes sysid_routing = 1;
  inline bool has_sysid_routing() const;
  inline void clear_sysid_routing();
  static const int kSysidRoutingFieldNumber = 1;
  inline const ::std::string& sysid_routing() const;
  inline void set_sysid_routing(const ::std::string& value);
  inline void set_sysid_routing(const char* value);
  inline void set_sysid_routing(const void* value, size_t size);
  inline ::std::string* mutable_sysid_routing();
  inline ::std::string* release_sysid_routing();
  inline void set_allocated_sysid_routing(::std::string* sysid_routing);

  // optional uint32 call_handle = 2;
  inline bool has_call_handle() const;
  inline void clear_call_handle();
  static const int kCallHandleFieldNumber = 2;
  inline ::google::protobuf::uint32 call_handle() const;
  inline void set_call_handle(::google::protobuf::uint32 value);

  // optional uint32 module_crc = 3;
  inline bool has_module_crc() const;
  inline void clear_module_crc();
  static const int kModuleCrcFieldNumber = 3;
  inline ::google::protobuf::uint32 module_crc() const;
  inline void set_module_crc(::google::protobuf::uint32 value);

  // optional bytes module_hash = 4;
  inline bool has_module_hash() const;
  inline void clear_module_hash();
  static const int kModuleHashFieldNumber = 4;
  inline const ::std::string& module_hash() const;
  inline void set_module_hash(const ::std::string& value);
  inline void set_module_hash(const char* value);
  inline void set_module_hash(const void* value, size_t size);
  inline ::std::string* mutable_module_hash();
  inline ::std::string* release_module_hash();
  inline void set_allocated_module_hash(::std::string* module_hash);

  // optional uint32 function_id = 5;
  inline bool has_function_id() const;
  inline void clear_function_id();
  static const int kFunctionIdFieldNumber = 5;
  inline ::google::protobuf::uint32 function_id() const;
  inline void set_function_id(::google::protobuf::uint32 value);

  // optional uint32 cub_output_max = 6;
  inline bool has_cub_output_max() const;
  inline void clear_cub_output_max();
  static const int kCubOutputMaxFieldNumber = 6;
  inline ::google::protobuf::uint32 cub_output_max() const;
  inline void set_cub_output_max(::google::protobuf::uint32 value);

  // optional uint32 flags = 7;
  inline bool has_flags() const;
  inline void clear_flags();
  static const int kFlagsFieldNumber = 7;
  inline ::google::protobuf::uint32 flags() const;
  inline void set_flags(::google::protobuf::uint32 value);

  // optional bytes callparameter = 8;
  inline bool has_callparameter() const;
  inline void clear_callparameter();
  static const int kCallparameterFieldNumber = 8;
  inline const ::std::string& callparameter() const;
  inline void set_callparameter(const ::std::string& value);
  inline void set_callparameter(const char* value);
  inline void set_callparameter(const void* value, size_t size);
  inline ::std::string* mutable_callparameter();
  inline ::std::string* release_callparameter();
  inline void set_allocated_callparameter(::std::string* callparameter);

  // optional bool ping_only = 9;
  inline bool has_ping_only() const;
  inline void clear_ping_only();
  static const int kPingOnlyFieldNumber = 9;
  inline bool ping_only() const;
  inline void set_ping_only(bool value);

  // optional uint32 max_outstanding_calls = 10;
  inline bool has_max_outstanding_calls() const;
  inline void clear_max_outstanding_calls();
  static const int kMaxOutstandingCallsFieldNumber = 10;
  inline ::google::protobuf::uint32 max_outstanding_calls() const;
  inline void set_max_outstanding_calls(::google::protobuf::uint32 value);

  // optional uint32 app_id = 11;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 11;
  inline ::google::protobuf::uint32 app_id() const;
  inline void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientServiceCall)
 private:
  inline void set_has_sysid_routing();
  inline void clear_has_sysid_routing();
  inline void set_has_call_handle();
  inline void clear_has_call_handle();
  inline void set_has_module_crc();
  inline void clear_has_module_crc();
  inline void set_has_module_hash();
  inline void clear_has_module_hash();
  inline void set_has_function_id();
  inline void clear_has_function_id();
  inline void set_has_cub_output_max();
  inline void clear_has_cub_output_max();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_callparameter();
  inline void clear_has_callparameter();
  inline void set_has_ping_only();
  inline void clear_has_ping_only();
  inline void set_has_max_outstanding_calls();
  inline void clear_has_max_outstanding_calls();
  inline void set_has_app_id();
  inline void clear_has_app_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sysid_routing_;
  ::google::protobuf::uint32 call_handle_;
  ::google::protobuf::uint32 module_crc_;
  ::std::string* module_hash_;
  ::google::protobuf::uint32 function_id_;
  ::google::protobuf::uint32 cub_output_max_;
  ::std::string* callparameter_;
  ::google::protobuf::uint32 flags_;
  bool ping_only_;
  ::google::protobuf::uint32 max_outstanding_calls_;
  ::google::protobuf::uint32 app_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientServiceCall* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientServiceModule : public ::google::protobuf::Message {
 public:
  CMsgClientServiceModule();
  virtual ~CMsgClientServiceModule();

  CMsgClientServiceModule(const CMsgClientServiceModule& from);

  inline CMsgClientServiceModule& operator=(const CMsgClientServiceModule& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientServiceModule& default_instance();

  void Swap(CMsgClientServiceModule* other);

  // implements Message ----------------------------------------------

  CMsgClientServiceModule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientServiceModule& from);
  void MergeFrom(const CMsgClientServiceModule& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 module_crc = 1;
  inline bool has_module_crc() const;
  inline void clear_module_crc();
  static const int kModuleCrcFieldNumber = 1;
  inline ::google::protobuf::uint32 module_crc() const;
  inline void set_module_crc(::google::protobuf::uint32 value);

  // optional bytes module_hash = 2;
  inline bool has_module_hash() const;
  inline void clear_module_hash();
  static const int kModuleHashFieldNumber = 2;
  inline const ::std::string& module_hash() const;
  inline void set_module_hash(const ::std::string& value);
  inline void set_module_hash(const char* value);
  inline void set_module_hash(const void* value, size_t size);
  inline ::std::string* mutable_module_hash();
  inline ::std::string* release_module_hash();
  inline void set_allocated_module_hash(::std::string* module_hash);

  // optional bytes module_content = 3;
  inline bool has_module_content() const;
  inline void clear_module_content();
  static const int kModuleContentFieldNumber = 3;
  inline const ::std::string& module_content() const;
  inline void set_module_content(const ::std::string& value);
  inline void set_module_content(const char* value);
  inline void set_module_content(const void* value, size_t size);
  inline ::std::string* mutable_module_content();
  inline ::std::string* release_module_content();
  inline void set_allocated_module_content(::std::string* module_content);

  // @@protoc_insertion_point(class_scope:CMsgClientServiceModule)
 private:
  inline void set_has_module_crc();
  inline void clear_has_module_crc();
  inline void set_has_module_hash();
  inline void clear_has_module_hash();
  inline void set_has_module_content();
  inline void clear_has_module_content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* module_hash_;
  ::std::string* module_content_;
  ::google::protobuf::uint32 module_crc_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientServiceModule* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientServiceCallResponse : public ::google::protobuf::Message {
 public:
  CMsgClientServiceCallResponse();
  virtual ~CMsgClientServiceCallResponse();

  CMsgClientServiceCallResponse(const CMsgClientServiceCallResponse& from);

  inline CMsgClientServiceCallResponse& operator=(const CMsgClientServiceCallResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientServiceCallResponse& default_instance();

  void Swap(CMsgClientServiceCallResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientServiceCallResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientServiceCallResponse& from);
  void MergeFrom(const CMsgClientServiceCallResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes sysid_routing = 1;
  inline bool has_sysid_routing() const;
  inline void clear_sysid_routing();
  static const int kSysidRoutingFieldNumber = 1;
  inline const ::std::string& sysid_routing() const;
  inline void set_sysid_routing(const ::std::string& value);
  inline void set_sysid_routing(const char* value);
  inline void set_sysid_routing(const void* value, size_t size);
  inline ::std::string* mutable_sysid_routing();
  inline ::std::string* release_sysid_routing();
  inline void set_allocated_sysid_routing(::std::string* sysid_routing);

  // optional uint32 call_handle = 2;
  inline bool has_call_handle() const;
  inline void clear_call_handle();
  static const int kCallHandleFieldNumber = 2;
  inline ::google::protobuf::uint32 call_handle() const;
  inline void set_call_handle(::google::protobuf::uint32 value);

  // optional uint32 module_crc = 3;
  inline bool has_module_crc() const;
  inline void clear_module_crc();
  static const int kModuleCrcFieldNumber = 3;
  inline ::google::protobuf::uint32 module_crc() const;
  inline void set_module_crc(::google::protobuf::uint32 value);

  // optional bytes module_hash = 4;
  inline bool has_module_hash() const;
  inline void clear_module_hash();
  static const int kModuleHashFieldNumber = 4;
  inline const ::std::string& module_hash() const;
  inline void set_module_hash(const ::std::string& value);
  inline void set_module_hash(const char* value);
  inline void set_module_hash(const void* value, size_t size);
  inline ::std::string* mutable_module_hash();
  inline ::std::string* release_module_hash();
  inline void set_allocated_module_hash(::std::string* module_hash);

  // optional uint32 ecallresult = 5;
  inline bool has_ecallresult() const;
  inline void clear_ecallresult();
  static const int kEcallresultFieldNumber = 5;
  inline ::google::protobuf::uint32 ecallresult() const;
  inline void set_ecallresult(::google::protobuf::uint32 value);

  // optional bytes result_content = 6;
  inline bool has_result_content() const;
  inline void clear_result_content();
  static const int kResultContentFieldNumber = 6;
  inline const ::std::string& result_content() const;
  inline void set_result_content(const ::std::string& value);
  inline void set_result_content(const char* value);
  inline void set_result_content(const void* value, size_t size);
  inline ::std::string* mutable_result_content();
  inline ::std::string* release_result_content();
  inline void set_allocated_result_content(::std::string* result_content);

  // optional bytes os_version_info = 7;
  inline bool has_os_version_info() const;
  inline void clear_os_version_info();
  static const int kOsVersionInfoFieldNumber = 7;
  inline const ::std::string& os_version_info() const;
  inline void set_os_version_info(const ::std::string& value);
  inline void set_os_version_info(const char* value);
  inline void set_os_version_info(const void* value, size_t size);
  inline ::std::string* mutable_os_version_info();
  inline ::std::string* release_os_version_info();
  inline void set_allocated_os_version_info(::std::string* os_version_info);

  // optional bytes system_info = 8;
  inline bool has_system_info() const;
  inline void clear_system_info();
  static const int kSystemInfoFieldNumber = 8;
  inline const ::std::string& system_info() const;
  inline void set_system_info(const ::std::string& value);
  inline void set_system_info(const char* value);
  inline void set_system_info(const void* value, size_t size);
  inline ::std::string* mutable_system_info();
  inline ::std::string* release_system_info();
  inline void set_allocated_system_info(::std::string* system_info);

  // optional fixed64 load_address = 9;
  inline bool has_load_address() const;
  inline void clear_load_address();
  static const int kLoadAddressFieldNumber = 9;
  inline ::google::protobuf::uint64 load_address() const;
  inline void set_load_address(::google::protobuf::uint64 value);

  // optional bytes exception_record = 10;
  inline bool has_exception_record() const;
  inline void clear_exception_record();
  static const int kExceptionRecordFieldNumber = 10;
  inline const ::std::string& exception_record() const;
  inline void set_exception_record(const ::std::string& value);
  inline void set_exception_record(const char* value);
  inline void set_exception_record(const void* value, size_t size);
  inline ::std::string* mutable_exception_record();
  inline ::std::string* release_exception_record();
  inline void set_allocated_exception_record(::std::string* exception_record);

  // optional bytes portable_os_version_info = 11;
  inline bool has_portable_os_version_info() const;
  inline void clear_portable_os_version_info();
  static const int kPortableOsVersionInfoFieldNumber = 11;
  inline const ::std::string& portable_os_version_info() const;
  inline void set_portable_os_version_info(const ::std::string& value);
  inline void set_portable_os_version_info(const char* value);
  inline void set_portable_os_version_info(const void* value, size_t size);
  inline ::std::string* mutable_portable_os_version_info();
  inline ::std::string* release_portable_os_version_info();
  inline void set_allocated_portable_os_version_info(::std::string* portable_os_version_info);

  // optional bytes portable_system_info = 12;
  inline bool has_portable_system_info() const;
  inline void clear_portable_system_info();
  static const int kPortableSystemInfoFieldNumber = 12;
  inline const ::std::string& portable_system_info() const;
  inline void set_portable_system_info(const ::std::string& value);
  inline void set_portable_system_info(const char* value);
  inline void set_portable_system_info(const void* value, size_t size);
  inline ::std::string* mutable_portable_system_info();
  inline ::std::string* release_portable_system_info();
  inline void set_allocated_portable_system_info(::std::string* portable_system_info);

  // optional bool was_converted = 13;
  inline bool has_was_converted() const;
  inline void clear_was_converted();
  static const int kWasConvertedFieldNumber = 13;
  inline bool was_converted() const;
  inline void set_was_converted(bool value);

  // optional uint32 internal_result = 14;
  inline bool has_internal_result() const;
  inline void clear_internal_result();
  static const int kInternalResultFieldNumber = 14;
  inline ::google::protobuf::uint32 internal_result() const;
  inline void set_internal_result(::google::protobuf::uint32 value);

  // optional uint32 current_count = 15;
  inline bool has_current_count() const;
  inline void clear_current_count();
  static const int kCurrentCountFieldNumber = 15;
  inline ::google::protobuf::uint32 current_count() const;
  inline void set_current_count(::google::protobuf::uint32 value);

  // optional uint32 last_call_handle = 16;
  inline bool has_last_call_handle() const;
  inline void clear_last_call_handle();
  static const int kLastCallHandleFieldNumber = 16;
  inline ::google::protobuf::uint32 last_call_handle() const;
  inline void set_last_call_handle(::google::protobuf::uint32 value);

  // optional uint32 last_call_module_crc = 17;
  inline bool has_last_call_module_crc() const;
  inline void clear_last_call_module_crc();
  static const int kLastCallModuleCrcFieldNumber = 17;
  inline ::google::protobuf::uint32 last_call_module_crc() const;
  inline void set_last_call_module_crc(::google::protobuf::uint32 value);

  // optional bytes last_call_sysid_routing = 18;
  inline bool has_last_call_sysid_routing() const;
  inline void clear_last_call_sysid_routing();
  static const int kLastCallSysidRoutingFieldNumber = 18;
  inline const ::std::string& last_call_sysid_routing() const;
  inline void set_last_call_sysid_routing(const ::std::string& value);
  inline void set_last_call_sysid_routing(const char* value);
  inline void set_last_call_sysid_routing(const void* value, size_t size);
  inline ::std::string* mutable_last_call_sysid_routing();
  inline ::std::string* release_last_call_sysid_routing();
  inline void set_allocated_last_call_sysid_routing(::std::string* last_call_sysid_routing);

  // optional uint32 last_ecallresult = 19;
  inline bool has_last_ecallresult() const;
  inline void clear_last_ecallresult();
  static const int kLastEcallresultFieldNumber = 19;
  inline ::google::protobuf::uint32 last_ecallresult() const;
  inline void set_last_ecallresult(::google::protobuf::uint32 value);

  // optional uint32 last_callissue_delta = 20;
  inline bool has_last_callissue_delta() const;
  inline void clear_last_callissue_delta();
  static const int kLastCallissueDeltaFieldNumber = 20;
  inline ::google::protobuf::uint32 last_callissue_delta() const;
  inline void set_last_callissue_delta(::google::protobuf::uint32 value);

  // optional uint32 last_callcomplete_delta = 21;
  inline bool has_last_callcomplete_delta() const;
  inline void clear_last_callcomplete_delta();
  static const int kLastCallcompleteDeltaFieldNumber = 21;
  inline ::google::protobuf::uint32 last_callcomplete_delta() const;
  inline void set_last_callcomplete_delta(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientServiceCallResponse)
 private:
  inline void set_has_sysid_routing();
  inline void clear_has_sysid_routing();
  inline void set_has_call_handle();
  inline void clear_has_call_handle();
  inline void set_has_module_crc();
  inline void clear_has_module_crc();
  inline void set_has_module_hash();
  inline void clear_has_module_hash();
  inline void set_has_ecallresult();
  inline void clear_has_ecallresult();
  inline void set_has_result_content();
  inline void clear_has_result_content();
  inline void set_has_os_version_info();
  inline void clear_has_os_version_info();
  inline void set_has_system_info();
  inline void clear_has_system_info();
  inline void set_has_load_address();
  inline void clear_has_load_address();
  inline void set_has_exception_record();
  inline void clear_has_exception_record();
  inline void set_has_portable_os_version_info();
  inline void clear_has_portable_os_version_info();
  inline void set_has_portable_system_info();
  inline void clear_has_portable_system_info();
  inline void set_has_was_converted();
  inline void clear_has_was_converted();
  inline void set_has_internal_result();
  inline void clear_has_internal_result();
  inline void set_has_current_count();
  inline void clear_has_current_count();
  inline void set_has_last_call_handle();
  inline void clear_has_last_call_handle();
  inline void set_has_last_call_module_crc();
  inline void clear_has_last_call_module_crc();
  inline void set_has_last_call_sysid_routing();
  inline void clear_has_last_call_sysid_routing();
  inline void set_has_last_ecallresult();
  inline void clear_has_last_ecallresult();
  inline void set_has_last_callissue_delta();
  inline void clear_has_last_callissue_delta();
  inline void set_has_last_callcomplete_delta();
  inline void clear_has_last_callcomplete_delta();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* sysid_routing_;
  ::google::protobuf::uint32 call_handle_;
  ::google::protobuf::uint32 module_crc_;
  ::std::string* module_hash_;
  ::std::string* result_content_;
  ::std::string* os_version_info_;
  ::std::string* system_info_;
  ::google::protobuf::uint64 load_address_;
  ::google::protobuf::uint32 ecallresult_;
  bool was_converted_;
  ::std::string* exception_record_;
  ::std::string* portable_os_version_info_;
  ::std::string* portable_system_info_;
  ::google::protobuf::uint32 internal_result_;
  ::google::protobuf::uint32 current_count_;
  ::google::protobuf::uint32 last_call_handle_;
  ::google::protobuf::uint32 last_call_module_crc_;
  ::std::string* last_call_sysid_routing_;
  ::google::protobuf::uint32 last_ecallresult_;
  ::google::protobuf::uint32 last_callissue_delta_;
  ::google::protobuf::uint32 last_callcomplete_delta_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientServiceCallResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMUnlockStreaming : public ::google::protobuf::Message {
 public:
  CMsgAMUnlockStreaming();
  virtual ~CMsgAMUnlockStreaming();

  CMsgAMUnlockStreaming(const CMsgAMUnlockStreaming& from);

  inline CMsgAMUnlockStreaming& operator=(const CMsgAMUnlockStreaming& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMUnlockStreaming& default_instance();

  void Swap(CMsgAMUnlockStreaming* other);

  // implements Message ----------------------------------------------

  CMsgAMUnlockStreaming* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMUnlockStreaming& from);
  void MergeFrom(const CMsgAMUnlockStreaming& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgAMUnlockStreaming)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMUnlockStreaming* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMUnlockStreamingResponse : public ::google::protobuf::Message {
 public:
  CMsgAMUnlockStreamingResponse();
  virtual ~CMsgAMUnlockStreamingResponse();

  CMsgAMUnlockStreamingResponse(const CMsgAMUnlockStreamingResponse& from);

  inline CMsgAMUnlockStreamingResponse& operator=(const CMsgAMUnlockStreamingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMUnlockStreamingResponse& default_instance();

  void Swap(CMsgAMUnlockStreamingResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMUnlockStreamingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMUnlockStreamingResponse& from);
  void MergeFrom(const CMsgAMUnlockStreamingResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional bytes encryption_key = 2;
  inline bool has_encryption_key() const;
  inline void clear_encryption_key();
  static const int kEncryptionKeyFieldNumber = 2;
  inline const ::std::string& encryption_key() const;
  inline void set_encryption_key(const ::std::string& value);
  inline void set_encryption_key(const char* value);
  inline void set_encryption_key(const void* value, size_t size);
  inline ::std::string* mutable_encryption_key();
  inline ::std::string* release_encryption_key();
  inline void set_allocated_encryption_key(::std::string* encryption_key);

  // @@protoc_insertion_point(class_scope:CMsgAMUnlockStreamingResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_encryption_key();
  inline void clear_has_encryption_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* encryption_key_;
  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMUnlockStreamingResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMUnlockHEVC : public ::google::protobuf::Message {
 public:
  CMsgAMUnlockHEVC();
  virtual ~CMsgAMUnlockHEVC();

  CMsgAMUnlockHEVC(const CMsgAMUnlockHEVC& from);

  inline CMsgAMUnlockHEVC& operator=(const CMsgAMUnlockHEVC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMUnlockHEVC& default_instance();

  void Swap(CMsgAMUnlockHEVC* other);

  // implements Message ----------------------------------------------

  CMsgAMUnlockHEVC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMUnlockHEVC& from);
  void MergeFrom(const CMsgAMUnlockHEVC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgAMUnlockHEVC)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMUnlockHEVC* default_instance_;
};
// -------------------------------------------------------------------

class CMsgAMUnlockHEVCResponse : public ::google::protobuf::Message {
 public:
  CMsgAMUnlockHEVCResponse();
  virtual ~CMsgAMUnlockHEVCResponse();

  CMsgAMUnlockHEVCResponse(const CMsgAMUnlockHEVCResponse& from);

  inline CMsgAMUnlockHEVCResponse& operator=(const CMsgAMUnlockHEVCResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAMUnlockHEVCResponse& default_instance();

  void Swap(CMsgAMUnlockHEVCResponse* other);

  // implements Message ----------------------------------------------

  CMsgAMUnlockHEVCResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgAMUnlockHEVCResponse& from);
  void MergeFrom(const CMsgAMUnlockHEVCResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 eresult = 1 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 1;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgAMUnlockHEVCResponse)
 private:
  inline void set_has_eresult();
  inline void clear_has_eresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 eresult_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgAMUnlockHEVCResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientPlayingSessionState : public ::google::protobuf::Message {
 public:
  CMsgClientPlayingSessionState();
  virtual ~CMsgClientPlayingSessionState();

  CMsgClientPlayingSessionState(const CMsgClientPlayingSessionState& from);

  inline CMsgClientPlayingSessionState& operator=(const CMsgClientPlayingSessionState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPlayingSessionState& default_instance();

  void Swap(CMsgClientPlayingSessionState* other);

  // implements Message ----------------------------------------------

  CMsgClientPlayingSessionState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientPlayingSessionState& from);
  void MergeFrom(const CMsgClientPlayingSessionState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool playing_blocked = 2;
  inline bool has_playing_blocked() const;
  inline void clear_playing_blocked();
  static const int kPlayingBlockedFieldNumber = 2;
  inline bool playing_blocked() const;
  inline void set_playing_blocked(bool value);

  // optional uint32 playing_app = 3;
  inline bool has_playing_app() const;
  inline void clear_playing_app();
  static const int kPlayingAppFieldNumber = 3;
  inline ::google::protobuf::uint32 playing_app() const;
  inline void set_playing_app(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientPlayingSessionState)
 private:
  inline void set_has_playing_blocked();
  inline void clear_has_playing_blocked();
  inline void set_has_playing_app();
  inline void clear_has_playing_app();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool playing_blocked_;
  ::google::protobuf::uint32 playing_app_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientPlayingSessionState* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientKickPlayingSession : public ::google::protobuf::Message {
 public:
  CMsgClientKickPlayingSession();
  virtual ~CMsgClientKickPlayingSession();

  CMsgClientKickPlayingSession(const CMsgClientKickPlayingSession& from);

  inline CMsgClientKickPlayingSession& operator=(const CMsgClientKickPlayingSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientKickPlayingSession& default_instance();

  void Swap(CMsgClientKickPlayingSession* other);

  // implements Message ----------------------------------------------

  CMsgClientKickPlayingSession* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientKickPlayingSession& from);
  void MergeFrom(const CMsgClientKickPlayingSession& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool only_stop_game = 1;
  inline bool has_only_stop_game() const;
  inline void clear_only_stop_game();
  static const int kOnlyStopGameFieldNumber = 1;
  inline bool only_stop_game() const;
  inline void set_only_stop_game(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientKickPlayingSession)
 private:
  inline void set_has_only_stop_game();
  inline void clear_has_only_stop_game();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool only_stop_game_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientKickPlayingSession* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientVoiceCallPreAuthorize : public ::google::protobuf::Message {
 public:
  CMsgClientVoiceCallPreAuthorize();
  virtual ~CMsgClientVoiceCallPreAuthorize();

  CMsgClientVoiceCallPreAuthorize(const CMsgClientVoiceCallPreAuthorize& from);

  inline CMsgClientVoiceCallPreAuthorize& operator=(const CMsgClientVoiceCallPreAuthorize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientVoiceCallPreAuthorize& default_instance();

  void Swap(CMsgClientVoiceCallPreAuthorize* other);

  // implements Message ----------------------------------------------

  CMsgClientVoiceCallPreAuthorize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientVoiceCallPreAuthorize& from);
  void MergeFrom(const CMsgClientVoiceCallPreAuthorize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 caller_steamid = 1;
  inline bool has_caller_steamid() const;
  inline void clear_caller_steamid();
  static const int kCallerSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 caller_steamid() const;
  inline void set_caller_steamid(::google::protobuf::uint64 value);

  // optional fixed64 receiver_steamid = 2;
  inline bool has_receiver_steamid() const;
  inline void clear_receiver_steamid();
  static const int kReceiverSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 receiver_steamid() const;
  inline void set_receiver_steamid(::google::protobuf::uint64 value);

  // optional int32 caller_id = 3;
  inline bool has_caller_id() const;
  inline void clear_caller_id();
  static const int kCallerIdFieldNumber = 3;
  inline ::google::protobuf::int32 caller_id() const;
  inline void set_caller_id(::google::protobuf::int32 value);

  // optional bool hangup = 4;
  inline bool has_hangup() const;
  inline void clear_hangup();
  static const int kHangupFieldNumber = 4;
  inline bool hangup() const;
  inline void set_hangup(bool value);

  // @@protoc_insertion_point(class_scope:CMsgClientVoiceCallPreAuthorize)
 private:
  inline void set_has_caller_steamid();
  inline void clear_has_caller_steamid();
  inline void set_has_receiver_steamid();
  inline void clear_has_receiver_steamid();
  inline void set_has_caller_id();
  inline void clear_has_caller_id();
  inline void set_has_hangup();
  inline void clear_has_hangup();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 caller_steamid_;
  ::google::protobuf::uint64 receiver_steamid_;
  ::google::protobuf::int32 caller_id_;
  bool hangup_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientVoiceCallPreAuthorize* default_instance_;
};
// -------------------------------------------------------------------

class CMsgClientVoiceCallPreAuthorizeResponse : public ::google::protobuf::Message {
 public:
  CMsgClientVoiceCallPreAuthorizeResponse();
  virtual ~CMsgClientVoiceCallPreAuthorizeResponse();

  CMsgClientVoiceCallPreAuthorizeResponse(const CMsgClientVoiceCallPreAuthorizeResponse& from);

  inline CMsgClientVoiceCallPreAuthorizeResponse& operator=(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientVoiceCallPreAuthorizeResponse& default_instance();

  void Swap(CMsgClientVoiceCallPreAuthorizeResponse* other);

  // implements Message ----------------------------------------------

  CMsgClientVoiceCallPreAuthorizeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from);
  void MergeFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 caller_steamid = 1;
  inline bool has_caller_steamid() const;
  inline void clear_caller_steamid();
  static const int kCallerSteamidFieldNumber = 1;
  inline ::google::protobuf::uint64 caller_steamid() const;
  inline void set_caller_steamid(::google::protobuf::uint64 value);

  // optional fixed64 receiver_steamid = 2;
  inline bool has_receiver_steamid() const;
  inline void clear_receiver_steamid();
  static const int kReceiverSteamidFieldNumber = 2;
  inline ::google::protobuf::uint64 receiver_steamid() const;
  inline void set_receiver_steamid(::google::protobuf::uint64 value);

  // optional int32 eresult = 3 [default = 2];
  inline bool has_eresult() const;
  inline void clear_eresult();
  static const int kEresultFieldNumber = 3;
  inline ::google::protobuf::int32 eresult() const;
  inline void set_eresult(::google::protobuf::int32 value);

  // optional int32 caller_id = 4;
  inline bool has_caller_id() const;
  inline void clear_caller_id();
  static const int kCallerIdFieldNumber = 4;
  inline ::google::protobuf::int32 caller_id() const;
  inline void set_caller_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CMsgClientVoiceCallPreAuthorizeResponse)
 private:
  inline void set_has_caller_steamid();
  inline void clear_has_caller_steamid();
  inline void set_has_receiver_steamid();
  inline void clear_has_receiver_steamid();
  inline void set_has_eresult();
  inline void clear_has_eresult();
  inline void set_has_caller_id();
  inline void clear_has_caller_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 caller_steamid_;
  ::google::protobuf::uint64 receiver_steamid_;
  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 caller_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgClientVoiceCallPreAuthorizeResponse* default_instance_;
};
// -------------------------------------------------------------------

class CMsgBadgeCraftedNotification : public ::google::protobuf::Message {
 public:
  CMsgBadgeCraftedNotification();
  virtual ~CMsgBadgeCraftedNotification();

  CMsgBadgeCraftedNotification(const CMsgBadgeCraftedNotification& from);

  inline CMsgBadgeCraftedNotification& operator=(const CMsgBadgeCraftedNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBadgeCraftedNotification& default_instance();

  void Swap(CMsgBadgeCraftedNotification* other);

  // implements Message ----------------------------------------------

  CMsgBadgeCraftedNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CMsgBadgeCraftedNotification& from);
  void MergeFrom(const CMsgBadgeCraftedNotification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::uint32 appid() const;
  inline void set_appid(::google::protobuf::uint32 value);

  // optional uint32 badge_level = 2;
  inline bool has_badge_level() const;
  inline void clear_badge_level();
  static const int kBadgeLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 badge_level() const;
  inline void set_badge_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:CMsgBadgeCraftedNotification)
 private:
  inline void set_has_appid();
  inline void clear_has_appid();
  inline void set_has_badge_level();
  inline void clear_has_badge_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 badge_level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_AssignDesc_steammessages_5fclientserver_5f2_2eproto();
  friend void protobuf_ShutdownFile_steammessages_5fclientserver_5f2_2eproto();

  void InitAsDefaultInstance();
  static CMsgBadgeCraftedNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// CMsgClientUpdateUserGameInfo

// optional fixed64 steamid_idgs = 1;
inline bool CMsgClientUpdateUserGameInfo::has_steamid_idgs() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUpdateUserGameInfo::set_has_steamid_idgs() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUpdateUserGameInfo::clear_has_steamid_idgs() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUpdateUserGameInfo::clear_steamid_idgs() {
  steamid_idgs_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_idgs();
}
inline ::google::protobuf::uint64 CMsgClientUpdateUserGameInfo::steamid_idgs() const {
  return steamid_idgs_;
}
inline void CMsgClientUpdateUserGameInfo::set_steamid_idgs(::google::protobuf::uint64 value) {
  set_has_steamid_idgs();
  steamid_idgs_ = value;
}

// optional fixed64 gameid = 2;
inline bool CMsgClientUpdateUserGameInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUpdateUserGameInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUpdateUserGameInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUpdateUserGameInfo::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
inline ::google::protobuf::uint64 CMsgClientUpdateUserGameInfo::gameid() const {
  return gameid_;
}
inline void CMsgClientUpdateUserGameInfo::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
}

// optional uint32 game_ip = 3;
inline bool CMsgClientUpdateUserGameInfo::has_game_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientUpdateUserGameInfo::set_has_game_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientUpdateUserGameInfo::clear_has_game_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientUpdateUserGameInfo::clear_game_ip() {
  game_ip_ = 0u;
  clear_has_game_ip();
}
inline ::google::protobuf::uint32 CMsgClientUpdateUserGameInfo::game_ip() const {
  return game_ip_;
}
inline void CMsgClientUpdateUserGameInfo::set_game_ip(::google::protobuf::uint32 value) {
  set_has_game_ip();
  game_ip_ = value;
}

// optional uint32 game_port = 4;
inline bool CMsgClientUpdateUserGameInfo::has_game_port() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientUpdateUserGameInfo::set_has_game_port() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientUpdateUserGameInfo::clear_has_game_port() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientUpdateUserGameInfo::clear_game_port() {
  game_port_ = 0u;
  clear_has_game_port();
}
inline ::google::protobuf::uint32 CMsgClientUpdateUserGameInfo::game_port() const {
  return game_port_;
}
inline void CMsgClientUpdateUserGameInfo::set_game_port(::google::protobuf::uint32 value) {
  set_has_game_port();
  game_port_ = value;
}

// optional bytes token = 5;
inline bool CMsgClientUpdateUserGameInfo::has_token() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientUpdateUserGameInfo::set_has_token() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientUpdateUserGameInfo::clear_has_token() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientUpdateUserGameInfo::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& CMsgClientUpdateUserGameInfo::token() const {
  return *token_;
}
inline void CMsgClientUpdateUserGameInfo::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientUpdateUserGameInfo::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientUpdateUserGameInfo::set_token(const void* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateUserGameInfo::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* CMsgClientUpdateUserGameInfo::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateUserGameInfo::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceUpload

// optional bytes rich_presence_kv = 1;
inline bool CMsgClientRichPresenceUpload::has_rich_presence_kv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRichPresenceUpload::set_has_rich_presence_kv() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRichPresenceUpload::clear_has_rich_presence_kv() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRichPresenceUpload::clear_rich_presence_kv() {
  if (rich_presence_kv_ != &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_->clear();
  }
  clear_has_rich_presence_kv();
}
inline const ::std::string& CMsgClientRichPresenceUpload::rich_presence_kv() const {
  return *rich_presence_kv_;
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(const ::std::string& value) {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  rich_presence_kv_->assign(value);
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(const char* value) {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  rich_presence_kv_->assign(value);
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(const void* value, size_t size) {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  rich_presence_kv_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRichPresenceUpload::mutable_rich_presence_kv() {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  return rich_presence_kv_;
}
inline ::std::string* CMsgClientRichPresenceUpload::release_rich_presence_kv() {
  clear_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rich_presence_kv_;
    rich_presence_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRichPresenceUpload::set_allocated_rich_presence_kv(::std::string* rich_presence_kv) {
  if (rich_presence_kv_ != &::google::protobuf::internal::kEmptyString) {
    delete rich_presence_kv_;
  }
  if (rich_presence_kv) {
    set_has_rich_presence_kv();
    rich_presence_kv_ = rich_presence_kv;
  } else {
    clear_has_rich_presence_kv();
    rich_presence_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated fixed64 steamid_broadcast = 2;
inline int CMsgClientRichPresenceUpload::steamid_broadcast_size() const {
  return steamid_broadcast_.size();
}
inline void CMsgClientRichPresenceUpload::clear_steamid_broadcast() {
  steamid_broadcast_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientRichPresenceUpload::steamid_broadcast(int index) const {
  return steamid_broadcast_.Get(index);
}
inline void CMsgClientRichPresenceUpload::set_steamid_broadcast(int index, ::google::protobuf::uint64 value) {
  steamid_broadcast_.Set(index, value);
}
inline void CMsgClientRichPresenceUpload::add_steamid_broadcast(::google::protobuf::uint64 value) {
  steamid_broadcast_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientRichPresenceUpload::steamid_broadcast() const {
  return steamid_broadcast_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientRichPresenceUpload::mutable_steamid_broadcast() {
  return &steamid_broadcast_;
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceRequest

// repeated fixed64 steamid_request = 1;
inline int CMsgClientRichPresenceRequest::steamid_request_size() const {
  return steamid_request_.size();
}
inline void CMsgClientRichPresenceRequest::clear_steamid_request() {
  steamid_request_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientRichPresenceRequest::steamid_request(int index) const {
  return steamid_request_.Get(index);
}
inline void CMsgClientRichPresenceRequest::set_steamid_request(int index, ::google::protobuf::uint64 value) {
  steamid_request_.Set(index, value);
}
inline void CMsgClientRichPresenceRequest::add_steamid_request(::google::protobuf::uint64 value) {
  steamid_request_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientRichPresenceRequest::steamid_request() const {
  return steamid_request_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientRichPresenceRequest::mutable_steamid_request() {
  return &steamid_request_;
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceInfo_RichPresence

// optional fixed64 steamid_user = 1;
inline bool CMsgClientRichPresenceInfo_RichPresence::has_steamid_user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_has_steamid_user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRichPresenceInfo_RichPresence::clear_has_steamid_user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRichPresenceInfo_RichPresence::clear_steamid_user() {
  steamid_user_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_user();
}
inline ::google::protobuf::uint64 CMsgClientRichPresenceInfo_RichPresence::steamid_user() const {
  return steamid_user_;
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_steamid_user(::google::protobuf::uint64 value) {
  set_has_steamid_user();
  steamid_user_ = value;
}

// optional bytes rich_presence_kv = 2;
inline bool CMsgClientRichPresenceInfo_RichPresence::has_rich_presence_kv() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_has_rich_presence_kv() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRichPresenceInfo_RichPresence::clear_has_rich_presence_kv() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRichPresenceInfo_RichPresence::clear_rich_presence_kv() {
  if (rich_presence_kv_ != &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_->clear();
  }
  clear_has_rich_presence_kv();
}
inline const ::std::string& CMsgClientRichPresenceInfo_RichPresence::rich_presence_kv() const {
  return *rich_presence_kv_;
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const ::std::string& value) {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  rich_presence_kv_->assign(value);
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const char* value) {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  rich_presence_kv_->assign(value);
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const void* value, size_t size) {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  rich_presence_kv_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRichPresenceInfo_RichPresence::mutable_rich_presence_kv() {
  set_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    rich_presence_kv_ = new ::std::string;
  }
  return rich_presence_kv_;
}
inline ::std::string* CMsgClientRichPresenceInfo_RichPresence::release_rich_presence_kv() {
  clear_has_rich_presence_kv();
  if (rich_presence_kv_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rich_presence_kv_;
    rich_presence_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_allocated_rich_presence_kv(::std::string* rich_presence_kv) {
  if (rich_presence_kv_ != &::google::protobuf::internal::kEmptyString) {
    delete rich_presence_kv_;
  }
  if (rich_presence_kv) {
    set_has_rich_presence_kv();
    rich_presence_kv_ = rich_presence_kv;
  } else {
    clear_has_rich_presence_kv();
    rich_presence_kv_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceInfo

// repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
inline int CMsgClientRichPresenceInfo::rich_presence_size() const {
  return rich_presence_.size();
}
inline void CMsgClientRichPresenceInfo::clear_rich_presence() {
  rich_presence_.Clear();
}
inline const ::CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo::rich_presence(int index) const {
  return rich_presence_.Get(index);
}
inline ::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::mutable_rich_presence(int index) {
  return rich_presence_.Mutable(index);
}
inline ::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::add_rich_presence() {
  return rich_presence_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >&
CMsgClientRichPresenceInfo::rich_presence() const {
  return rich_presence_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >*
CMsgClientRichPresenceInfo::mutable_rich_presence() {
  return &rich_presence_;
}

// -------------------------------------------------------------------

// CMsgClientCheckFileSignature

// optional uint32 app_id = 1;
inline bool CMsgClientCheckFileSignature::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCheckFileSignature::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCheckFileSignature::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCheckFileSignature::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignature::app_id() const {
  return app_id_;
}
inline void CMsgClientCheckFileSignature::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientCheckFileSignatureResponse

// optional uint32 app_id = 1;
inline bool CMsgClientCheckFileSignatureResponse::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::app_id() const {
  return app_id_;
}
inline void CMsgClientCheckFileSignatureResponse::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional uint32 pid = 2;
inline bool CMsgClientCheckFileSignatureResponse::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::pid() const {
  return pid_;
}
inline void CMsgClientCheckFileSignatureResponse::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
}

// optional uint32 eresult = 3;
inline bool CMsgClientCheckFileSignatureResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientCheckFileSignatureResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional string filename = 4;
inline bool CMsgClientCheckFileSignatureResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CMsgClientCheckFileSignatureResponse::filename() const {
  return *filename_;
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckFileSignatureResponse::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CMsgClientCheckFileSignatureResponse::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckFileSignatureResponse::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 esignatureresult = 5;
inline bool CMsgClientCheckFileSignatureResponse::has_esignatureresult() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_esignatureresult() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_esignatureresult() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_esignatureresult() {
  esignatureresult_ = 0u;
  clear_has_esignatureresult();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::esignatureresult() const {
  return esignatureresult_;
}
inline void CMsgClientCheckFileSignatureResponse::set_esignatureresult(::google::protobuf::uint32 value) {
  set_has_esignatureresult();
  esignatureresult_ = value;
}

// optional bytes sha_file = 6;
inline bool CMsgClientCheckFileSignatureResponse::has_sha_file() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_sha_file() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_sha_file() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_sha_file() {
  if (sha_file_ != &::google::protobuf::internal::kEmptyString) {
    sha_file_->clear();
  }
  clear_has_sha_file();
}
inline const ::std::string& CMsgClientCheckFileSignatureResponse::sha_file() const {
  return *sha_file_;
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(const ::std::string& value) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(value);
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(const char* value) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(value);
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(const void* value, size_t size) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckFileSignatureResponse::mutable_sha_file() {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  return sha_file_;
}
inline ::std::string* CMsgClientCheckFileSignatureResponse::release_sha_file() {
  clear_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sha_file_;
    sha_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckFileSignatureResponse::set_allocated_sha_file(::std::string* sha_file) {
  if (sha_file_ != &::google::protobuf::internal::kEmptyString) {
    delete sha_file_;
  }
  if (sha_file) {
    set_has_sha_file();
    sha_file_ = sha_file;
  } else {
    clear_has_sha_file();
    sha_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes signatureheader = 7;
inline bool CMsgClientCheckFileSignatureResponse::has_signatureheader() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_signatureheader() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_signatureheader() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_signatureheader() {
  if (signatureheader_ != &::google::protobuf::internal::kEmptyString) {
    signatureheader_->clear();
  }
  clear_has_signatureheader();
}
inline const ::std::string& CMsgClientCheckFileSignatureResponse::signatureheader() const {
  return *signatureheader_;
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(const ::std::string& value) {
  set_has_signatureheader();
  if (signatureheader_ == &::google::protobuf::internal::kEmptyString) {
    signatureheader_ = new ::std::string;
  }
  signatureheader_->assign(value);
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(const char* value) {
  set_has_signatureheader();
  if (signatureheader_ == &::google::protobuf::internal::kEmptyString) {
    signatureheader_ = new ::std::string;
  }
  signatureheader_->assign(value);
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(const void* value, size_t size) {
  set_has_signatureheader();
  if (signatureheader_ == &::google::protobuf::internal::kEmptyString) {
    signatureheader_ = new ::std::string;
  }
  signatureheader_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckFileSignatureResponse::mutable_signatureheader() {
  set_has_signatureheader();
  if (signatureheader_ == &::google::protobuf::internal::kEmptyString) {
    signatureheader_ = new ::std::string;
  }
  return signatureheader_;
}
inline ::std::string* CMsgClientCheckFileSignatureResponse::release_signatureheader() {
  clear_has_signatureheader();
  if (signatureheader_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signatureheader_;
    signatureheader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckFileSignatureResponse::set_allocated_signatureheader(::std::string* signatureheader) {
  if (signatureheader_ != &::google::protobuf::internal::kEmptyString) {
    delete signatureheader_;
  }
  if (signatureheader) {
    set_has_signatureheader();
    signatureheader_ = signatureheader;
  } else {
    clear_has_signatureheader();
    signatureheader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 filesize = 8;
inline bool CMsgClientCheckFileSignatureResponse::has_filesize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_filesize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::filesize() const {
  return filesize_;
}
inline void CMsgClientCheckFileSignatureResponse::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
}

// optional uint32 getlasterror = 9;
inline bool CMsgClientCheckFileSignatureResponse::has_getlasterror() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_getlasterror() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_getlasterror() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  clear_has_getlasterror();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::getlasterror() const {
  return getlasterror_;
}
inline void CMsgClientCheckFileSignatureResponse::set_getlasterror(::google::protobuf::uint32 value) {
  set_has_getlasterror();
  getlasterror_ = value;
}

// optional uint32 evalvesignaturecheckdetail = 10;
inline bool CMsgClientCheckFileSignatureResponse::has_evalvesignaturecheckdetail() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientCheckFileSignatureResponse::set_has_evalvesignaturecheckdetail() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_has_evalvesignaturecheckdetail() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientCheckFileSignatureResponse::clear_evalvesignaturecheckdetail() {
  evalvesignaturecheckdetail_ = 0u;
  clear_has_evalvesignaturecheckdetail();
}
inline ::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::evalvesignaturecheckdetail() const {
  return evalvesignaturecheckdetail_;
}
inline void CMsgClientCheckFileSignatureResponse::set_evalvesignaturecheckdetail(::google::protobuf::uint32 value) {
  set_has_evalvesignaturecheckdetail();
  evalvesignaturecheckdetail_ = value;
}

// -------------------------------------------------------------------

// CMsgClientReadMachineAuth

// optional string filename = 1;
inline bool CMsgClientReadMachineAuth::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientReadMachineAuth::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientReadMachineAuth::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientReadMachineAuth::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CMsgClientReadMachineAuth::filename() const {
  return *filename_;
}
inline void CMsgClientReadMachineAuth::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientReadMachineAuth::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientReadMachineAuth::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientReadMachineAuth::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CMsgClientReadMachineAuth::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientReadMachineAuth::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 offset = 2;
inline bool CMsgClientReadMachineAuth::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientReadMachineAuth::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientReadMachineAuth::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientReadMachineAuth::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuth::offset() const {
  return offset_;
}
inline void CMsgClientReadMachineAuth::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
}

// optional uint32 cubtoread = 3;
inline bool CMsgClientReadMachineAuth::has_cubtoread() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientReadMachineAuth::set_has_cubtoread() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientReadMachineAuth::clear_has_cubtoread() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientReadMachineAuth::clear_cubtoread() {
  cubtoread_ = 0u;
  clear_has_cubtoread();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuth::cubtoread() const {
  return cubtoread_;
}
inline void CMsgClientReadMachineAuth::set_cubtoread(::google::protobuf::uint32 value) {
  set_has_cubtoread();
  cubtoread_ = value;
}

// -------------------------------------------------------------------

// CMsgClientReadMachineAuthResponse

// optional string filename = 1;
inline bool CMsgClientReadMachineAuthResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientReadMachineAuthResponse::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CMsgClientReadMachineAuthResponse::filename() const {
  return *filename_;
}
inline void CMsgClientReadMachineAuthResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientReadMachineAuthResponse::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CMsgClientReadMachineAuthResponse::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 eresult = 2;
inline bool CMsgClientReadMachineAuthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientReadMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientReadMachineAuthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 filesize = 3;
inline bool CMsgClientReadMachineAuthResponse::has_filesize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_filesize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientReadMachineAuthResponse::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::filesize() const {
  return filesize_;
}
inline void CMsgClientReadMachineAuthResponse::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
}

// optional bytes sha_file = 4;
inline bool CMsgClientReadMachineAuthResponse::has_sha_file() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_sha_file() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_sha_file() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientReadMachineAuthResponse::clear_sha_file() {
  if (sha_file_ != &::google::protobuf::internal::kEmptyString) {
    sha_file_->clear();
  }
  clear_has_sha_file();
}
inline const ::std::string& CMsgClientReadMachineAuthResponse::sha_file() const {
  return *sha_file_;
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(const ::std::string& value) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(const char* value) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(const void* value, size_t size) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientReadMachineAuthResponse::mutable_sha_file() {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  return sha_file_;
}
inline ::std::string* CMsgClientReadMachineAuthResponse::release_sha_file() {
  clear_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sha_file_;
    sha_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_sha_file(::std::string* sha_file) {
  if (sha_file_ != &::google::protobuf::internal::kEmptyString) {
    delete sha_file_;
  }
  if (sha_file) {
    set_has_sha_file();
    sha_file_ = sha_file;
  } else {
    clear_has_sha_file();
    sha_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 getlasterror = 5;
inline bool CMsgClientReadMachineAuthResponse::has_getlasterror() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_getlasterror() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_getlasterror() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientReadMachineAuthResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  clear_has_getlasterror();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::getlasterror() const {
  return getlasterror_;
}
inline void CMsgClientReadMachineAuthResponse::set_getlasterror(::google::protobuf::uint32 value) {
  set_has_getlasterror();
  getlasterror_ = value;
}

// optional uint32 offset = 6;
inline bool CMsgClientReadMachineAuthResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientReadMachineAuthResponse::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::offset() const {
  return offset_;
}
inline void CMsgClientReadMachineAuthResponse::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
}

// optional uint32 cubread = 7;
inline bool CMsgClientReadMachineAuthResponse::has_cubread() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_cubread() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_cubread() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientReadMachineAuthResponse::clear_cubread() {
  cubread_ = 0u;
  clear_has_cubread();
}
inline ::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::cubread() const {
  return cubread_;
}
inline void CMsgClientReadMachineAuthResponse::set_cubread(::google::protobuf::uint32 value) {
  set_has_cubread();
  cubread_ = value;
}

// optional bytes bytes_read = 8;
inline bool CMsgClientReadMachineAuthResponse::has_bytes_read() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_bytes_read() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_bytes_read() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientReadMachineAuthResponse::clear_bytes_read() {
  if (bytes_read_ != &::google::protobuf::internal::kEmptyString) {
    bytes_read_->clear();
  }
  clear_has_bytes_read();
}
inline const ::std::string& CMsgClientReadMachineAuthResponse::bytes_read() const {
  return *bytes_read_;
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(const ::std::string& value) {
  set_has_bytes_read();
  if (bytes_read_ == &::google::protobuf::internal::kEmptyString) {
    bytes_read_ = new ::std::string;
  }
  bytes_read_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(const char* value) {
  set_has_bytes_read();
  if (bytes_read_ == &::google::protobuf::internal::kEmptyString) {
    bytes_read_ = new ::std::string;
  }
  bytes_read_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(const void* value, size_t size) {
  set_has_bytes_read();
  if (bytes_read_ == &::google::protobuf::internal::kEmptyString) {
    bytes_read_ = new ::std::string;
  }
  bytes_read_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientReadMachineAuthResponse::mutable_bytes_read() {
  set_has_bytes_read();
  if (bytes_read_ == &::google::protobuf::internal::kEmptyString) {
    bytes_read_ = new ::std::string;
  }
  return bytes_read_;
}
inline ::std::string* CMsgClientReadMachineAuthResponse::release_bytes_read() {
  clear_has_bytes_read();
  if (bytes_read_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bytes_read_;
    bytes_read_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_bytes_read(::std::string* bytes_read) {
  if (bytes_read_ != &::google::protobuf::internal::kEmptyString) {
    delete bytes_read_;
  }
  if (bytes_read) {
    set_has_bytes_read();
    bytes_read_ = bytes_read;
  } else {
    clear_has_bytes_read();
    bytes_read_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string filename_sentry = 9;
inline bool CMsgClientReadMachineAuthResponse::has_filename_sentry() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientReadMachineAuthResponse::set_has_filename_sentry() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientReadMachineAuthResponse::clear_has_filename_sentry() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientReadMachineAuthResponse::clear_filename_sentry() {
  if (filename_sentry_ != &::google::protobuf::internal::kEmptyString) {
    filename_sentry_->clear();
  }
  clear_has_filename_sentry();
}
inline const ::std::string& CMsgClientReadMachineAuthResponse::filename_sentry() const {
  return *filename_sentry_;
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(const ::std::string& value) {
  set_has_filename_sentry();
  if (filename_sentry_ == &::google::protobuf::internal::kEmptyString) {
    filename_sentry_ = new ::std::string;
  }
  filename_sentry_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(const char* value) {
  set_has_filename_sentry();
  if (filename_sentry_ == &::google::protobuf::internal::kEmptyString) {
    filename_sentry_ = new ::std::string;
  }
  filename_sentry_->assign(value);
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(const char* value, size_t size) {
  set_has_filename_sentry();
  if (filename_sentry_ == &::google::protobuf::internal::kEmptyString) {
    filename_sentry_ = new ::std::string;
  }
  filename_sentry_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientReadMachineAuthResponse::mutable_filename_sentry() {
  set_has_filename_sentry();
  if (filename_sentry_ == &::google::protobuf::internal::kEmptyString) {
    filename_sentry_ = new ::std::string;
  }
  return filename_sentry_;
}
inline ::std::string* CMsgClientReadMachineAuthResponse::release_filename_sentry() {
  clear_has_filename_sentry();
  if (filename_sentry_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_sentry_;
    filename_sentry_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_filename_sentry(::std::string* filename_sentry) {
  if (filename_sentry_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_sentry_;
  }
  if (filename_sentry) {
    set_has_filename_sentry();
    filename_sentry_ = filename_sentry;
  } else {
    clear_has_filename_sentry();
    filename_sentry_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientUpdateMachineAuth

// optional string filename = 1;
inline bool CMsgClientUpdateMachineAuth::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUpdateMachineAuth::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CMsgClientUpdateMachineAuth::filename() const {
  return *filename_;
}
inline void CMsgClientUpdateMachineAuth::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuth::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CMsgClientUpdateMachineAuth::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuth::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 offset = 2;
inline bool CMsgClientUpdateMachineAuth::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUpdateMachineAuth::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuth::offset() const {
  return offset_;
}
inline void CMsgClientUpdateMachineAuth::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
}

// optional uint32 cubtowrite = 3;
inline bool CMsgClientUpdateMachineAuth::has_cubtowrite() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_cubtowrite() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_cubtowrite() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientUpdateMachineAuth::clear_cubtowrite() {
  cubtowrite_ = 0u;
  clear_has_cubtowrite();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuth::cubtowrite() const {
  return cubtowrite_;
}
inline void CMsgClientUpdateMachineAuth::set_cubtowrite(::google::protobuf::uint32 value) {
  set_has_cubtowrite();
  cubtowrite_ = value;
}

// optional bytes bytes = 4;
inline bool CMsgClientUpdateMachineAuth::has_bytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_bytes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientUpdateMachineAuth::clear_bytes() {
  if (bytes_ != &::google::protobuf::internal::kEmptyString) {
    bytes_->clear();
  }
  clear_has_bytes();
}
inline const ::std::string& CMsgClientUpdateMachineAuth::bytes() const {
  return *bytes_;
}
inline void CMsgClientUpdateMachineAuth::set_bytes(const ::std::string& value) {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::kEmptyString) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_bytes(const char* value) {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::kEmptyString) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::kEmptyString) {
    bytes_ = new ::std::string;
  }
  bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuth::mutable_bytes() {
  set_has_bytes();
  if (bytes_ == &::google::protobuf::internal::kEmptyString) {
    bytes_ = new ::std::string;
  }
  return bytes_;
}
inline ::std::string* CMsgClientUpdateMachineAuth::release_bytes() {
  clear_has_bytes();
  if (bytes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bytes_;
    bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuth::set_allocated_bytes(::std::string* bytes) {
  if (bytes_ != &::google::protobuf::internal::kEmptyString) {
    delete bytes_;
  }
  if (bytes) {
    set_has_bytes();
    bytes_ = bytes;
  } else {
    clear_has_bytes();
    bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 otp_type = 5;
inline bool CMsgClientUpdateMachineAuth::has_otp_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_otp_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_otp_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientUpdateMachineAuth::clear_otp_type() {
  otp_type_ = 0u;
  clear_has_otp_type();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuth::otp_type() const {
  return otp_type_;
}
inline void CMsgClientUpdateMachineAuth::set_otp_type(::google::protobuf::uint32 value) {
  set_has_otp_type();
  otp_type_ = value;
}

// optional string otp_identifier = 6;
inline bool CMsgClientUpdateMachineAuth::has_otp_identifier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_otp_identifier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_otp_identifier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientUpdateMachineAuth::clear_otp_identifier() {
  if (otp_identifier_ != &::google::protobuf::internal::kEmptyString) {
    otp_identifier_->clear();
  }
  clear_has_otp_identifier();
}
inline const ::std::string& CMsgClientUpdateMachineAuth::otp_identifier() const {
  return *otp_identifier_;
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(const ::std::string& value) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(const char* value) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(const char* value, size_t size) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuth::mutable_otp_identifier() {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  return otp_identifier_;
}
inline ::std::string* CMsgClientUpdateMachineAuth::release_otp_identifier() {
  clear_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = otp_identifier_;
    otp_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuth::set_allocated_otp_identifier(::std::string* otp_identifier) {
  if (otp_identifier_ != &::google::protobuf::internal::kEmptyString) {
    delete otp_identifier_;
  }
  if (otp_identifier) {
    set_has_otp_identifier();
    otp_identifier_ = otp_identifier;
  } else {
    clear_has_otp_identifier();
    otp_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes otp_sharedsecret = 7;
inline bool CMsgClientUpdateMachineAuth::has_otp_sharedsecret() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_otp_sharedsecret() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_otp_sharedsecret() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientUpdateMachineAuth::clear_otp_sharedsecret() {
  if (otp_sharedsecret_ != &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_->clear();
  }
  clear_has_otp_sharedsecret();
}
inline const ::std::string& CMsgClientUpdateMachineAuth::otp_sharedsecret() const {
  return *otp_sharedsecret_;
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const ::std::string& value) {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  otp_sharedsecret_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const char* value) {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  otp_sharedsecret_->assign(value);
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const void* value, size_t size) {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  otp_sharedsecret_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuth::mutable_otp_sharedsecret() {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  return otp_sharedsecret_;
}
inline ::std::string* CMsgClientUpdateMachineAuth::release_otp_sharedsecret() {
  clear_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = otp_sharedsecret_;
    otp_sharedsecret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuth::set_allocated_otp_sharedsecret(::std::string* otp_sharedsecret) {
  if (otp_sharedsecret_ != &::google::protobuf::internal::kEmptyString) {
    delete otp_sharedsecret_;
  }
  if (otp_sharedsecret) {
    set_has_otp_sharedsecret();
    otp_sharedsecret_ = otp_sharedsecret;
  } else {
    clear_has_otp_sharedsecret();
    otp_sharedsecret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 otp_timedrift = 8;
inline bool CMsgClientUpdateMachineAuth::has_otp_timedrift() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientUpdateMachineAuth::set_has_otp_timedrift() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientUpdateMachineAuth::clear_has_otp_timedrift() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientUpdateMachineAuth::clear_otp_timedrift() {
  otp_timedrift_ = 0u;
  clear_has_otp_timedrift();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuth::otp_timedrift() const {
  return otp_timedrift_;
}
inline void CMsgClientUpdateMachineAuth::set_otp_timedrift(::google::protobuf::uint32 value) {
  set_has_otp_timedrift();
  otp_timedrift_ = value;
}

// -------------------------------------------------------------------

// CMsgClientUpdateMachineAuthResponse

// optional string filename = 1;
inline bool CMsgClientUpdateMachineAuthResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CMsgClientUpdateMachineAuthResponse::filename() const {
  return *filename_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuthResponse::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CMsgClientUpdateMachineAuthResponse::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuthResponse::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 eresult = 2;
inline bool CMsgClientUpdateMachineAuthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 filesize = 3;
inline bool CMsgClientUpdateMachineAuthResponse::has_filesize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_filesize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::filesize() const {
  return filesize_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
}

// optional bytes sha_file = 4;
inline bool CMsgClientUpdateMachineAuthResponse::has_sha_file() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_sha_file() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_sha_file() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_sha_file() {
  if (sha_file_ != &::google::protobuf::internal::kEmptyString) {
    sha_file_->clear();
  }
  clear_has_sha_file();
}
inline const ::std::string& CMsgClientUpdateMachineAuthResponse::sha_file() const {
  return *sha_file_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(const ::std::string& value) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(value);
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(const char* value) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(value);
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(const void* value, size_t size) {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  sha_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuthResponse::mutable_sha_file() {
  set_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    sha_file_ = new ::std::string;
  }
  return sha_file_;
}
inline ::std::string* CMsgClientUpdateMachineAuthResponse::release_sha_file() {
  clear_has_sha_file();
  if (sha_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sha_file_;
    sha_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuthResponse::set_allocated_sha_file(::std::string* sha_file) {
  if (sha_file_ != &::google::protobuf::internal::kEmptyString) {
    delete sha_file_;
  }
  if (sha_file) {
    set_has_sha_file();
    sha_file_ = sha_file;
  } else {
    clear_has_sha_file();
    sha_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 getlasterror = 5;
inline bool CMsgClientUpdateMachineAuthResponse::has_getlasterror() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_getlasterror() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_getlasterror() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  clear_has_getlasterror();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::getlasterror() const {
  return getlasterror_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_getlasterror(::google::protobuf::uint32 value) {
  set_has_getlasterror();
  getlasterror_ = value;
}

// optional uint32 offset = 6;
inline bool CMsgClientUpdateMachineAuthResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::offset() const {
  return offset_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
}

// optional uint32 cubwrote = 7;
inline bool CMsgClientUpdateMachineAuthResponse::has_cubwrote() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_cubwrote() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_cubwrote() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_cubwrote() {
  cubwrote_ = 0u;
  clear_has_cubwrote();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::cubwrote() const {
  return cubwrote_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_cubwrote(::google::protobuf::uint32 value) {
  set_has_cubwrote();
  cubwrote_ = value;
}

// optional int32 otp_type = 8;
inline bool CMsgClientUpdateMachineAuthResponse::has_otp_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_otp_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_otp_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_otp_type() {
  otp_type_ = 0;
  clear_has_otp_type();
}
inline ::google::protobuf::int32 CMsgClientUpdateMachineAuthResponse::otp_type() const {
  return otp_type_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_type(::google::protobuf::int32 value) {
  set_has_otp_type();
  otp_type_ = value;
}

// optional uint32 otp_value = 9;
inline bool CMsgClientUpdateMachineAuthResponse::has_otp_value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_otp_value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_otp_value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_otp_value() {
  otp_value_ = 0u;
  clear_has_otp_value();
}
inline ::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::otp_value() const {
  return otp_value_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_value(::google::protobuf::uint32 value) {
  set_has_otp_value();
  otp_value_ = value;
}

// optional string otp_identifier = 10;
inline bool CMsgClientUpdateMachineAuthResponse::has_otp_identifier() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientUpdateMachineAuthResponse::set_has_otp_identifier() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_has_otp_identifier() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientUpdateMachineAuthResponse::clear_otp_identifier() {
  if (otp_identifier_ != &::google::protobuf::internal::kEmptyString) {
    otp_identifier_->clear();
  }
  clear_has_otp_identifier();
}
inline const ::std::string& CMsgClientUpdateMachineAuthResponse::otp_identifier() const {
  return *otp_identifier_;
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const ::std::string& value) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(value);
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const char* value) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(value);
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const char* value, size_t size) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateMachineAuthResponse::mutable_otp_identifier() {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  return otp_identifier_;
}
inline ::std::string* CMsgClientUpdateMachineAuthResponse::release_otp_identifier() {
  clear_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = otp_identifier_;
    otp_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateMachineAuthResponse::set_allocated_otp_identifier(::std::string* otp_identifier) {
  if (otp_identifier_ != &::google::protobuf::internal::kEmptyString) {
    delete otp_identifier_;
  }
  if (otp_identifier) {
    set_has_otp_identifier();
    otp_identifier_ = otp_identifier;
  } else {
    clear_has_otp_identifier();
    otp_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRequestMachineAuth

// optional string filename = 1;
inline bool CMsgClientRequestMachineAuth::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestMachineAuth::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestMachineAuth::clear_filename() {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& CMsgClientRequestMachineAuth::filename() const {
  return *filename_;
}
inline void CMsgClientRequestMachineAuth::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestMachineAuth::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    filename_ = new ::std::string;
  }
  return filename_;
}
inline ::std::string* CMsgClientRequestMachineAuth::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestMachineAuth::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::kEmptyString) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 eresult_sentryfile = 2;
inline bool CMsgClientRequestMachineAuth::has_eresult_sentryfile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_eresult_sentryfile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRequestMachineAuth::clear_has_eresult_sentryfile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRequestMachineAuth::clear_eresult_sentryfile() {
  eresult_sentryfile_ = 0u;
  clear_has_eresult_sentryfile();
}
inline ::google::protobuf::uint32 CMsgClientRequestMachineAuth::eresult_sentryfile() const {
  return eresult_sentryfile_;
}
inline void CMsgClientRequestMachineAuth::set_eresult_sentryfile(::google::protobuf::uint32 value) {
  set_has_eresult_sentryfile();
  eresult_sentryfile_ = value;
}

// optional uint32 filesize = 3;
inline bool CMsgClientRequestMachineAuth::has_filesize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_filesize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientRequestMachineAuth::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientRequestMachineAuth::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
inline ::google::protobuf::uint32 CMsgClientRequestMachineAuth::filesize() const {
  return filesize_;
}
inline void CMsgClientRequestMachineAuth::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
}

// optional bytes sha_sentryfile = 4;
inline bool CMsgClientRequestMachineAuth::has_sha_sentryfile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_sha_sentryfile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientRequestMachineAuth::clear_has_sha_sentryfile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientRequestMachineAuth::clear_sha_sentryfile() {
  if (sha_sentryfile_ != &::google::protobuf::internal::kEmptyString) {
    sha_sentryfile_->clear();
  }
  clear_has_sha_sentryfile();
}
inline const ::std::string& CMsgClientRequestMachineAuth::sha_sentryfile() const {
  return *sha_sentryfile_;
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(const ::std::string& value) {
  set_has_sha_sentryfile();
  if (sha_sentryfile_ == &::google::protobuf::internal::kEmptyString) {
    sha_sentryfile_ = new ::std::string;
  }
  sha_sentryfile_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(const char* value) {
  set_has_sha_sentryfile();
  if (sha_sentryfile_ == &::google::protobuf::internal::kEmptyString) {
    sha_sentryfile_ = new ::std::string;
  }
  sha_sentryfile_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(const void* value, size_t size) {
  set_has_sha_sentryfile();
  if (sha_sentryfile_ == &::google::protobuf::internal::kEmptyString) {
    sha_sentryfile_ = new ::std::string;
  }
  sha_sentryfile_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestMachineAuth::mutable_sha_sentryfile() {
  set_has_sha_sentryfile();
  if (sha_sentryfile_ == &::google::protobuf::internal::kEmptyString) {
    sha_sentryfile_ = new ::std::string;
  }
  return sha_sentryfile_;
}
inline ::std::string* CMsgClientRequestMachineAuth::release_sha_sentryfile() {
  clear_has_sha_sentryfile();
  if (sha_sentryfile_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sha_sentryfile_;
    sha_sentryfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestMachineAuth::set_allocated_sha_sentryfile(::std::string* sha_sentryfile) {
  if (sha_sentryfile_ != &::google::protobuf::internal::kEmptyString) {
    delete sha_sentryfile_;
  }
  if (sha_sentryfile) {
    set_has_sha_sentryfile();
    sha_sentryfile_ = sha_sentryfile;
  } else {
    clear_has_sha_sentryfile();
    sha_sentryfile_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 lock_account_action = 6;
inline bool CMsgClientRequestMachineAuth::has_lock_account_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_lock_account_action() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientRequestMachineAuth::clear_has_lock_account_action() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientRequestMachineAuth::clear_lock_account_action() {
  lock_account_action_ = 0;
  clear_has_lock_account_action();
}
inline ::google::protobuf::int32 CMsgClientRequestMachineAuth::lock_account_action() const {
  return lock_account_action_;
}
inline void CMsgClientRequestMachineAuth::set_lock_account_action(::google::protobuf::int32 value) {
  set_has_lock_account_action();
  lock_account_action_ = value;
}

// optional uint32 otp_type = 7;
inline bool CMsgClientRequestMachineAuth::has_otp_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_otp_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientRequestMachineAuth::clear_has_otp_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientRequestMachineAuth::clear_otp_type() {
  otp_type_ = 0u;
  clear_has_otp_type();
}
inline ::google::protobuf::uint32 CMsgClientRequestMachineAuth::otp_type() const {
  return otp_type_;
}
inline void CMsgClientRequestMachineAuth::set_otp_type(::google::protobuf::uint32 value) {
  set_has_otp_type();
  otp_type_ = value;
}

// optional string otp_identifier = 8;
inline bool CMsgClientRequestMachineAuth::has_otp_identifier() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_otp_identifier() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientRequestMachineAuth::clear_has_otp_identifier() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientRequestMachineAuth::clear_otp_identifier() {
  if (otp_identifier_ != &::google::protobuf::internal::kEmptyString) {
    otp_identifier_->clear();
  }
  clear_has_otp_identifier();
}
inline const ::std::string& CMsgClientRequestMachineAuth::otp_identifier() const {
  return *otp_identifier_;
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(const ::std::string& value) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(const char* value) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(const char* value, size_t size) {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  otp_identifier_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestMachineAuth::mutable_otp_identifier() {
  set_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    otp_identifier_ = new ::std::string;
  }
  return otp_identifier_;
}
inline ::std::string* CMsgClientRequestMachineAuth::release_otp_identifier() {
  clear_has_otp_identifier();
  if (otp_identifier_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = otp_identifier_;
    otp_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestMachineAuth::set_allocated_otp_identifier(::std::string* otp_identifier) {
  if (otp_identifier_ != &::google::protobuf::internal::kEmptyString) {
    delete otp_identifier_;
  }
  if (otp_identifier) {
    set_has_otp_identifier();
    otp_identifier_ = otp_identifier;
  } else {
    clear_has_otp_identifier();
    otp_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes otp_sharedsecret = 9;
inline bool CMsgClientRequestMachineAuth::has_otp_sharedsecret() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_otp_sharedsecret() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientRequestMachineAuth::clear_has_otp_sharedsecret() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientRequestMachineAuth::clear_otp_sharedsecret() {
  if (otp_sharedsecret_ != &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_->clear();
  }
  clear_has_otp_sharedsecret();
}
inline const ::std::string& CMsgClientRequestMachineAuth::otp_sharedsecret() const {
  return *otp_sharedsecret_;
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const ::std::string& value) {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  otp_sharedsecret_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const char* value) {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  otp_sharedsecret_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const void* value, size_t size) {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  otp_sharedsecret_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestMachineAuth::mutable_otp_sharedsecret() {
  set_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    otp_sharedsecret_ = new ::std::string;
  }
  return otp_sharedsecret_;
}
inline ::std::string* CMsgClientRequestMachineAuth::release_otp_sharedsecret() {
  clear_has_otp_sharedsecret();
  if (otp_sharedsecret_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = otp_sharedsecret_;
    otp_sharedsecret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestMachineAuth::set_allocated_otp_sharedsecret(::std::string* otp_sharedsecret) {
  if (otp_sharedsecret_ != &::google::protobuf::internal::kEmptyString) {
    delete otp_sharedsecret_;
  }
  if (otp_sharedsecret) {
    set_has_otp_sharedsecret();
    otp_sharedsecret_ = otp_sharedsecret;
  } else {
    clear_has_otp_sharedsecret();
    otp_sharedsecret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 otp_value = 10;
inline bool CMsgClientRequestMachineAuth::has_otp_value() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_otp_value() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientRequestMachineAuth::clear_has_otp_value() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientRequestMachineAuth::clear_otp_value() {
  otp_value_ = 0u;
  clear_has_otp_value();
}
inline ::google::protobuf::uint32 CMsgClientRequestMachineAuth::otp_value() const {
  return otp_value_;
}
inline void CMsgClientRequestMachineAuth::set_otp_value(::google::protobuf::uint32 value) {
  set_has_otp_value();
  otp_value_ = value;
}

// optional string machine_name = 11;
inline bool CMsgClientRequestMachineAuth::has_machine_name() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_machine_name() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientRequestMachineAuth::clear_has_machine_name() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientRequestMachineAuth::clear_machine_name() {
  if (machine_name_ != &::google::protobuf::internal::kEmptyString) {
    machine_name_->clear();
  }
  clear_has_machine_name();
}
inline const ::std::string& CMsgClientRequestMachineAuth::machine_name() const {
  return *machine_name_;
}
inline void CMsgClientRequestMachineAuth::set_machine_name(const ::std::string& value) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_machine_name(const char* value) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_machine_name(const char* value, size_t size) {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  machine_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestMachineAuth::mutable_machine_name() {
  set_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_ = new ::std::string;
  }
  return machine_name_;
}
inline ::std::string* CMsgClientRequestMachineAuth::release_machine_name() {
  clear_has_machine_name();
  if (machine_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = machine_name_;
    machine_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestMachineAuth::set_allocated_machine_name(::std::string* machine_name) {
  if (machine_name_ != &::google::protobuf::internal::kEmptyString) {
    delete machine_name_;
  }
  if (machine_name) {
    set_has_machine_name();
    machine_name_ = machine_name;
  } else {
    clear_has_machine_name();
    machine_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string machine_name_userchosen = 12;
inline bool CMsgClientRequestMachineAuth::has_machine_name_userchosen() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientRequestMachineAuth::set_has_machine_name_userchosen() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientRequestMachineAuth::clear_has_machine_name_userchosen() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientRequestMachineAuth::clear_machine_name_userchosen() {
  if (machine_name_userchosen_ != &::google::protobuf::internal::kEmptyString) {
    machine_name_userchosen_->clear();
  }
  clear_has_machine_name_userchosen();
}
inline const ::std::string& CMsgClientRequestMachineAuth::machine_name_userchosen() const {
  return *machine_name_userchosen_;
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const ::std::string& value) {
  set_has_machine_name_userchosen();
  if (machine_name_userchosen_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_userchosen_ = new ::std::string;
  }
  machine_name_userchosen_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const char* value) {
  set_has_machine_name_userchosen();
  if (machine_name_userchosen_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_userchosen_ = new ::std::string;
  }
  machine_name_userchosen_->assign(value);
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const char* value, size_t size) {
  set_has_machine_name_userchosen();
  if (machine_name_userchosen_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_userchosen_ = new ::std::string;
  }
  machine_name_userchosen_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestMachineAuth::mutable_machine_name_userchosen() {
  set_has_machine_name_userchosen();
  if (machine_name_userchosen_ == &::google::protobuf::internal::kEmptyString) {
    machine_name_userchosen_ = new ::std::string;
  }
  return machine_name_userchosen_;
}
inline ::std::string* CMsgClientRequestMachineAuth::release_machine_name_userchosen() {
  clear_has_machine_name_userchosen();
  if (machine_name_userchosen_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = machine_name_userchosen_;
    machine_name_userchosen_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestMachineAuth::set_allocated_machine_name_userchosen(::std::string* machine_name_userchosen) {
  if (machine_name_userchosen_ != &::google::protobuf::internal::kEmptyString) {
    delete machine_name_userchosen_;
  }
  if (machine_name_userchosen) {
    set_has_machine_name_userchosen();
    machine_name_userchosen_ = machine_name_userchosen;
  } else {
    clear_has_machine_name_userchosen();
    machine_name_userchosen_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRequestMachineAuthResponse

// optional uint32 eresult = 1;
inline bool CMsgClientRequestMachineAuthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestMachineAuthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestMachineAuthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRequestMachineAuthResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientRequestMachineAuthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgClientRegisterKey

// optional string key = 1;
inline bool CMsgClientRegisterKey::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRegisterKey::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRegisterKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRegisterKey::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& CMsgClientRegisterKey::key() const {
  return *key_;
}
inline void CMsgClientRegisterKey::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void CMsgClientRegisterKey::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void CMsgClientRegisterKey::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRegisterKey::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* CMsgClientRegisterKey::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRegisterKey::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientPurchaseResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientPurchaseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPurchaseResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPurchaseResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPurchaseResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientPurchaseResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientPurchaseResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 purchase_result_details = 2;
inline bool CMsgClientPurchaseResponse::has_purchase_result_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientPurchaseResponse::set_has_purchase_result_details() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientPurchaseResponse::clear_has_purchase_result_details() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientPurchaseResponse::clear_purchase_result_details() {
  purchase_result_details_ = 0;
  clear_has_purchase_result_details();
}
inline ::google::protobuf::int32 CMsgClientPurchaseResponse::purchase_result_details() const {
  return purchase_result_details_;
}
inline void CMsgClientPurchaseResponse::set_purchase_result_details(::google::protobuf::int32 value) {
  set_has_purchase_result_details();
  purchase_result_details_ = value;
}

// optional bytes purchase_receipt_info = 3;
inline bool CMsgClientPurchaseResponse::has_purchase_receipt_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientPurchaseResponse::set_has_purchase_receipt_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientPurchaseResponse::clear_has_purchase_receipt_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientPurchaseResponse::clear_purchase_receipt_info() {
  if (purchase_receipt_info_ != &::google::protobuf::internal::kEmptyString) {
    purchase_receipt_info_->clear();
  }
  clear_has_purchase_receipt_info();
}
inline const ::std::string& CMsgClientPurchaseResponse::purchase_receipt_info() const {
  return *purchase_receipt_info_;
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(const ::std::string& value) {
  set_has_purchase_receipt_info();
  if (purchase_receipt_info_ == &::google::protobuf::internal::kEmptyString) {
    purchase_receipt_info_ = new ::std::string;
  }
  purchase_receipt_info_->assign(value);
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(const char* value) {
  set_has_purchase_receipt_info();
  if (purchase_receipt_info_ == &::google::protobuf::internal::kEmptyString) {
    purchase_receipt_info_ = new ::std::string;
  }
  purchase_receipt_info_->assign(value);
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(const void* value, size_t size) {
  set_has_purchase_receipt_info();
  if (purchase_receipt_info_ == &::google::protobuf::internal::kEmptyString) {
    purchase_receipt_info_ = new ::std::string;
  }
  purchase_receipt_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientPurchaseResponse::mutable_purchase_receipt_info() {
  set_has_purchase_receipt_info();
  if (purchase_receipt_info_ == &::google::protobuf::internal::kEmptyString) {
    purchase_receipt_info_ = new ::std::string;
  }
  return purchase_receipt_info_;
}
inline ::std::string* CMsgClientPurchaseResponse::release_purchase_receipt_info() {
  clear_has_purchase_receipt_info();
  if (purchase_receipt_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = purchase_receipt_info_;
    purchase_receipt_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientPurchaseResponse::set_allocated_purchase_receipt_info(::std::string* purchase_receipt_info) {
  if (purchase_receipt_info_ != &::google::protobuf::internal::kEmptyString) {
    delete purchase_receipt_info_;
  }
  if (purchase_receipt_info) {
    set_has_purchase_receipt_info();
    purchase_receipt_info_ = purchase_receipt_info;
  } else {
    clear_has_purchase_receipt_info();
    purchase_receipt_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientActivateOEMLicense

// optional string bios_manufacturer = 1;
inline bool CMsgClientActivateOEMLicense::has_bios_manufacturer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientActivateOEMLicense::set_has_bios_manufacturer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientActivateOEMLicense::clear_has_bios_manufacturer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientActivateOEMLicense::clear_bios_manufacturer() {
  if (bios_manufacturer_ != &::google::protobuf::internal::kEmptyString) {
    bios_manufacturer_->clear();
  }
  clear_has_bios_manufacturer();
}
inline const ::std::string& CMsgClientActivateOEMLicense::bios_manufacturer() const {
  return *bios_manufacturer_;
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(const ::std::string& value) {
  set_has_bios_manufacturer();
  if (bios_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    bios_manufacturer_ = new ::std::string;
  }
  bios_manufacturer_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(const char* value) {
  set_has_bios_manufacturer();
  if (bios_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    bios_manufacturer_ = new ::std::string;
  }
  bios_manufacturer_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(const char* value, size_t size) {
  set_has_bios_manufacturer();
  if (bios_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    bios_manufacturer_ = new ::std::string;
  }
  bios_manufacturer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientActivateOEMLicense::mutable_bios_manufacturer() {
  set_has_bios_manufacturer();
  if (bios_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    bios_manufacturer_ = new ::std::string;
  }
  return bios_manufacturer_;
}
inline ::std::string* CMsgClientActivateOEMLicense::release_bios_manufacturer() {
  clear_has_bios_manufacturer();
  if (bios_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bios_manufacturer_;
    bios_manufacturer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientActivateOEMLicense::set_allocated_bios_manufacturer(::std::string* bios_manufacturer) {
  if (bios_manufacturer_ != &::google::protobuf::internal::kEmptyString) {
    delete bios_manufacturer_;
  }
  if (bios_manufacturer) {
    set_has_bios_manufacturer();
    bios_manufacturer_ = bios_manufacturer;
  } else {
    clear_has_bios_manufacturer();
    bios_manufacturer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string bios_serialnumber = 2;
inline bool CMsgClientActivateOEMLicense::has_bios_serialnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientActivateOEMLicense::set_has_bios_serialnumber() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientActivateOEMLicense::clear_has_bios_serialnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientActivateOEMLicense::clear_bios_serialnumber() {
  if (bios_serialnumber_ != &::google::protobuf::internal::kEmptyString) {
    bios_serialnumber_->clear();
  }
  clear_has_bios_serialnumber();
}
inline const ::std::string& CMsgClientActivateOEMLicense::bios_serialnumber() const {
  return *bios_serialnumber_;
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(const ::std::string& value) {
  set_has_bios_serialnumber();
  if (bios_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    bios_serialnumber_ = new ::std::string;
  }
  bios_serialnumber_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(const char* value) {
  set_has_bios_serialnumber();
  if (bios_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    bios_serialnumber_ = new ::std::string;
  }
  bios_serialnumber_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(const char* value, size_t size) {
  set_has_bios_serialnumber();
  if (bios_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    bios_serialnumber_ = new ::std::string;
  }
  bios_serialnumber_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientActivateOEMLicense::mutable_bios_serialnumber() {
  set_has_bios_serialnumber();
  if (bios_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    bios_serialnumber_ = new ::std::string;
  }
  return bios_serialnumber_;
}
inline ::std::string* CMsgClientActivateOEMLicense::release_bios_serialnumber() {
  clear_has_bios_serialnumber();
  if (bios_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bios_serialnumber_;
    bios_serialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientActivateOEMLicense::set_allocated_bios_serialnumber(::std::string* bios_serialnumber) {
  if (bios_serialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete bios_serialnumber_;
  }
  if (bios_serialnumber) {
    set_has_bios_serialnumber();
    bios_serialnumber_ = bios_serialnumber;
  } else {
    clear_has_bios_serialnumber();
    bios_serialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes license_file = 3;
inline bool CMsgClientActivateOEMLicense::has_license_file() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientActivateOEMLicense::set_has_license_file() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientActivateOEMLicense::clear_has_license_file() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientActivateOEMLicense::clear_license_file() {
  if (license_file_ != &::google::protobuf::internal::kEmptyString) {
    license_file_->clear();
  }
  clear_has_license_file();
}
inline const ::std::string& CMsgClientActivateOEMLicense::license_file() const {
  return *license_file_;
}
inline void CMsgClientActivateOEMLicense::set_license_file(const ::std::string& value) {
  set_has_license_file();
  if (license_file_ == &::google::protobuf::internal::kEmptyString) {
    license_file_ = new ::std::string;
  }
  license_file_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_license_file(const char* value) {
  set_has_license_file();
  if (license_file_ == &::google::protobuf::internal::kEmptyString) {
    license_file_ = new ::std::string;
  }
  license_file_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_license_file(const void* value, size_t size) {
  set_has_license_file();
  if (license_file_ == &::google::protobuf::internal::kEmptyString) {
    license_file_ = new ::std::string;
  }
  license_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientActivateOEMLicense::mutable_license_file() {
  set_has_license_file();
  if (license_file_ == &::google::protobuf::internal::kEmptyString) {
    license_file_ = new ::std::string;
  }
  return license_file_;
}
inline ::std::string* CMsgClientActivateOEMLicense::release_license_file() {
  clear_has_license_file();
  if (license_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = license_file_;
    license_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientActivateOEMLicense::set_allocated_license_file(::std::string* license_file) {
  if (license_file_ != &::google::protobuf::internal::kEmptyString) {
    delete license_file_;
  }
  if (license_file) {
    set_has_license_file();
    license_file_ = license_file;
  } else {
    clear_has_license_file();
    license_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string mainboard_manufacturer = 4;
inline bool CMsgClientActivateOEMLicense::has_mainboard_manufacturer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientActivateOEMLicense::set_has_mainboard_manufacturer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientActivateOEMLicense::clear_has_mainboard_manufacturer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientActivateOEMLicense::clear_mainboard_manufacturer() {
  if (mainboard_manufacturer_ != &::google::protobuf::internal::kEmptyString) {
    mainboard_manufacturer_->clear();
  }
  clear_has_mainboard_manufacturer();
}
inline const ::std::string& CMsgClientActivateOEMLicense::mainboard_manufacturer() const {
  return *mainboard_manufacturer_;
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const ::std::string& value) {
  set_has_mainboard_manufacturer();
  if (mainboard_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_manufacturer_ = new ::std::string;
  }
  mainboard_manufacturer_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const char* value) {
  set_has_mainboard_manufacturer();
  if (mainboard_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_manufacturer_ = new ::std::string;
  }
  mainboard_manufacturer_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const char* value, size_t size) {
  set_has_mainboard_manufacturer();
  if (mainboard_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_manufacturer_ = new ::std::string;
  }
  mainboard_manufacturer_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientActivateOEMLicense::mutable_mainboard_manufacturer() {
  set_has_mainboard_manufacturer();
  if (mainboard_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_manufacturer_ = new ::std::string;
  }
  return mainboard_manufacturer_;
}
inline ::std::string* CMsgClientActivateOEMLicense::release_mainboard_manufacturer() {
  clear_has_mainboard_manufacturer();
  if (mainboard_manufacturer_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mainboard_manufacturer_;
    mainboard_manufacturer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientActivateOEMLicense::set_allocated_mainboard_manufacturer(::std::string* mainboard_manufacturer) {
  if (mainboard_manufacturer_ != &::google::protobuf::internal::kEmptyString) {
    delete mainboard_manufacturer_;
  }
  if (mainboard_manufacturer) {
    set_has_mainboard_manufacturer();
    mainboard_manufacturer_ = mainboard_manufacturer;
  } else {
    clear_has_mainboard_manufacturer();
    mainboard_manufacturer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string mainboard_product = 5;
inline bool CMsgClientActivateOEMLicense::has_mainboard_product() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientActivateOEMLicense::set_has_mainboard_product() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientActivateOEMLicense::clear_has_mainboard_product() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientActivateOEMLicense::clear_mainboard_product() {
  if (mainboard_product_ != &::google::protobuf::internal::kEmptyString) {
    mainboard_product_->clear();
  }
  clear_has_mainboard_product();
}
inline const ::std::string& CMsgClientActivateOEMLicense::mainboard_product() const {
  return *mainboard_product_;
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(const ::std::string& value) {
  set_has_mainboard_product();
  if (mainboard_product_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_product_ = new ::std::string;
  }
  mainboard_product_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(const char* value) {
  set_has_mainboard_product();
  if (mainboard_product_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_product_ = new ::std::string;
  }
  mainboard_product_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(const char* value, size_t size) {
  set_has_mainboard_product();
  if (mainboard_product_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_product_ = new ::std::string;
  }
  mainboard_product_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientActivateOEMLicense::mutable_mainboard_product() {
  set_has_mainboard_product();
  if (mainboard_product_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_product_ = new ::std::string;
  }
  return mainboard_product_;
}
inline ::std::string* CMsgClientActivateOEMLicense::release_mainboard_product() {
  clear_has_mainboard_product();
  if (mainboard_product_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mainboard_product_;
    mainboard_product_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientActivateOEMLicense::set_allocated_mainboard_product(::std::string* mainboard_product) {
  if (mainboard_product_ != &::google::protobuf::internal::kEmptyString) {
    delete mainboard_product_;
  }
  if (mainboard_product) {
    set_has_mainboard_product();
    mainboard_product_ = mainboard_product;
  } else {
    clear_has_mainboard_product();
    mainboard_product_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string mainboard_serialnumber = 6;
inline bool CMsgClientActivateOEMLicense::has_mainboard_serialnumber() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientActivateOEMLicense::set_has_mainboard_serialnumber() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientActivateOEMLicense::clear_has_mainboard_serialnumber() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientActivateOEMLicense::clear_mainboard_serialnumber() {
  if (mainboard_serialnumber_ != &::google::protobuf::internal::kEmptyString) {
    mainboard_serialnumber_->clear();
  }
  clear_has_mainboard_serialnumber();
}
inline const ::std::string& CMsgClientActivateOEMLicense::mainboard_serialnumber() const {
  return *mainboard_serialnumber_;
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const ::std::string& value) {
  set_has_mainboard_serialnumber();
  if (mainboard_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_serialnumber_ = new ::std::string;
  }
  mainboard_serialnumber_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const char* value) {
  set_has_mainboard_serialnumber();
  if (mainboard_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_serialnumber_ = new ::std::string;
  }
  mainboard_serialnumber_->assign(value);
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const char* value, size_t size) {
  set_has_mainboard_serialnumber();
  if (mainboard_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_serialnumber_ = new ::std::string;
  }
  mainboard_serialnumber_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientActivateOEMLicense::mutable_mainboard_serialnumber() {
  set_has_mainboard_serialnumber();
  if (mainboard_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    mainboard_serialnumber_ = new ::std::string;
  }
  return mainboard_serialnumber_;
}
inline ::std::string* CMsgClientActivateOEMLicense::release_mainboard_serialnumber() {
  clear_has_mainboard_serialnumber();
  if (mainboard_serialnumber_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mainboard_serialnumber_;
    mainboard_serialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientActivateOEMLicense::set_allocated_mainboard_serialnumber(::std::string* mainboard_serialnumber) {
  if (mainboard_serialnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete mainboard_serialnumber_;
  }
  if (mainboard_serialnumber) {
    set_has_mainboard_serialnumber();
    mainboard_serialnumber_ = mainboard_serialnumber;
  } else {
    clear_has_mainboard_serialnumber();
    mainboard_serialnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRegisterOEMMachine

// optional bytes oem_register_file = 1;
inline bool CMsgClientRegisterOEMMachine::has_oem_register_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRegisterOEMMachine::set_has_oem_register_file() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRegisterOEMMachine::clear_has_oem_register_file() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRegisterOEMMachine::clear_oem_register_file() {
  if (oem_register_file_ != &::google::protobuf::internal::kEmptyString) {
    oem_register_file_->clear();
  }
  clear_has_oem_register_file();
}
inline const ::std::string& CMsgClientRegisterOEMMachine::oem_register_file() const {
  return *oem_register_file_;
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(const ::std::string& value) {
  set_has_oem_register_file();
  if (oem_register_file_ == &::google::protobuf::internal::kEmptyString) {
    oem_register_file_ = new ::std::string;
  }
  oem_register_file_->assign(value);
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(const char* value) {
  set_has_oem_register_file();
  if (oem_register_file_ == &::google::protobuf::internal::kEmptyString) {
    oem_register_file_ = new ::std::string;
  }
  oem_register_file_->assign(value);
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(const void* value, size_t size) {
  set_has_oem_register_file();
  if (oem_register_file_ == &::google::protobuf::internal::kEmptyString) {
    oem_register_file_ = new ::std::string;
  }
  oem_register_file_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRegisterOEMMachine::mutable_oem_register_file() {
  set_has_oem_register_file();
  if (oem_register_file_ == &::google::protobuf::internal::kEmptyString) {
    oem_register_file_ = new ::std::string;
  }
  return oem_register_file_;
}
inline ::std::string* CMsgClientRegisterOEMMachine::release_oem_register_file() {
  clear_has_oem_register_file();
  if (oem_register_file_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oem_register_file_;
    oem_register_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRegisterOEMMachine::set_allocated_oem_register_file(::std::string* oem_register_file) {
  if (oem_register_file_ != &::google::protobuf::internal::kEmptyString) {
    delete oem_register_file_;
  }
  if (oem_register_file) {
    set_has_oem_register_file();
    oem_register_file_ = oem_register_file;
  } else {
    clear_has_oem_register_file();
    oem_register_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRegisterOEMMachineResponse

// optional uint32 eresult = 1;
inline bool CMsgClientRegisterOEMMachineResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRegisterOEMMachineResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRegisterOEMMachineResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRegisterOEMMachineResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRegisterOEMMachineResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientRegisterOEMMachineResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgClientPurchaseWithMachineID

// optional uint32 package_id = 1;
inline bool CMsgClientPurchaseWithMachineID::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPurchaseWithMachineID::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPurchaseWithMachineID::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPurchaseWithMachineID::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
inline ::google::protobuf::uint32 CMsgClientPurchaseWithMachineID::package_id() const {
  return package_id_;
}
inline void CMsgClientPurchaseWithMachineID::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
}

// optional bytes machine_info = 2;
inline bool CMsgClientPurchaseWithMachineID::has_machine_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientPurchaseWithMachineID::set_has_machine_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientPurchaseWithMachineID::clear_has_machine_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientPurchaseWithMachineID::clear_machine_info() {
  if (machine_info_ != &::google::protobuf::internal::kEmptyString) {
    machine_info_->clear();
  }
  clear_has_machine_info();
}
inline const ::std::string& CMsgClientPurchaseWithMachineID::machine_info() const {
  return *machine_info_;
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(const ::std::string& value) {
  set_has_machine_info();
  if (machine_info_ == &::google::protobuf::internal::kEmptyString) {
    machine_info_ = new ::std::string;
  }
  machine_info_->assign(value);
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(const char* value) {
  set_has_machine_info();
  if (machine_info_ == &::google::protobuf::internal::kEmptyString) {
    machine_info_ = new ::std::string;
  }
  machine_info_->assign(value);
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(const void* value, size_t size) {
  set_has_machine_info();
  if (machine_info_ == &::google::protobuf::internal::kEmptyString) {
    machine_info_ = new ::std::string;
  }
  machine_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientPurchaseWithMachineID::mutable_machine_info() {
  set_has_machine_info();
  if (machine_info_ == &::google::protobuf::internal::kEmptyString) {
    machine_info_ = new ::std::string;
  }
  return machine_info_;
}
inline ::std::string* CMsgClientPurchaseWithMachineID::release_machine_info() {
  clear_has_machine_info();
  if (machine_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = machine_info_;
    machine_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientPurchaseWithMachineID::set_allocated_machine_info(::std::string* machine_info) {
  if (machine_info_ != &::google::protobuf::internal::kEmptyString) {
    delete machine_info_;
  }
  if (machine_info) {
    set_has_machine_info();
    machine_info_ = machine_info;
  } else {
    clear_has_machine_info();
    machine_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgTrading_InitiateTradeRequest

// optional uint32 trade_request_id = 1;
inline bool CMsgTrading_InitiateTradeRequest::has_trade_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTrading_InitiateTradeRequest::set_has_trade_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTrading_InitiateTradeRequest::clear_has_trade_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTrading_InitiateTradeRequest::clear_trade_request_id() {
  trade_request_id_ = 0u;
  clear_has_trade_request_id();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeRequest::trade_request_id() const {
  return trade_request_id_;
}
inline void CMsgTrading_InitiateTradeRequest::set_trade_request_id(::google::protobuf::uint32 value) {
  set_has_trade_request_id();
  trade_request_id_ = value;
}

// optional uint64 other_steamid = 2;
inline bool CMsgTrading_InitiateTradeRequest::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTrading_InitiateTradeRequest::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTrading_InitiateTradeRequest::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTrading_InitiateTradeRequest::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
inline ::google::protobuf::uint64 CMsgTrading_InitiateTradeRequest::other_steamid() const {
  return other_steamid_;
}
inline void CMsgTrading_InitiateTradeRequest::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
}

// optional string other_name = 3;
inline bool CMsgTrading_InitiateTradeRequest::has_other_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTrading_InitiateTradeRequest::set_has_other_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTrading_InitiateTradeRequest::clear_has_other_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTrading_InitiateTradeRequest::clear_other_name() {
  if (other_name_ != &::google::protobuf::internal::kEmptyString) {
    other_name_->clear();
  }
  clear_has_other_name();
}
inline const ::std::string& CMsgTrading_InitiateTradeRequest::other_name() const {
  return *other_name_;
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(const ::std::string& value) {
  set_has_other_name();
  if (other_name_ == &::google::protobuf::internal::kEmptyString) {
    other_name_ = new ::std::string;
  }
  other_name_->assign(value);
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(const char* value) {
  set_has_other_name();
  if (other_name_ == &::google::protobuf::internal::kEmptyString) {
    other_name_ = new ::std::string;
  }
  other_name_->assign(value);
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(const char* value, size_t size) {
  set_has_other_name();
  if (other_name_ == &::google::protobuf::internal::kEmptyString) {
    other_name_ = new ::std::string;
  }
  other_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgTrading_InitiateTradeRequest::mutable_other_name() {
  set_has_other_name();
  if (other_name_ == &::google::protobuf::internal::kEmptyString) {
    other_name_ = new ::std::string;
  }
  return other_name_;
}
inline ::std::string* CMsgTrading_InitiateTradeRequest::release_other_name() {
  clear_has_other_name();
  if (other_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = other_name_;
    other_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgTrading_InitiateTradeRequest::set_allocated_other_name(::std::string* other_name) {
  if (other_name_ != &::google::protobuf::internal::kEmptyString) {
    delete other_name_;
  }
  if (other_name) {
    set_has_other_name();
    other_name_ = other_name;
  } else {
    clear_has_other_name();
    other_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgTrading_InitiateTradeResponse

// optional uint32 response = 1;
inline bool CMsgTrading_InitiateTradeResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::response() const {
  return response_;
}
inline void CMsgTrading_InitiateTradeResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
}

// optional uint32 trade_request_id = 2;
inline bool CMsgTrading_InitiateTradeResponse::has_trade_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_trade_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_trade_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_trade_request_id() {
  trade_request_id_ = 0u;
  clear_has_trade_request_id();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::trade_request_id() const {
  return trade_request_id_;
}
inline void CMsgTrading_InitiateTradeResponse::set_trade_request_id(::google::protobuf::uint32 value) {
  set_has_trade_request_id();
  trade_request_id_ = value;
}

// optional uint64 other_steamid = 3;
inline bool CMsgTrading_InitiateTradeResponse::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
inline ::google::protobuf::uint64 CMsgTrading_InitiateTradeResponse::other_steamid() const {
  return other_steamid_;
}
inline void CMsgTrading_InitiateTradeResponse::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
}

// optional uint32 steamguard_required_days = 4;
inline bool CMsgTrading_InitiateTradeResponse::has_steamguard_required_days() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_steamguard_required_days() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_steamguard_required_days() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_steamguard_required_days() {
  steamguard_required_days_ = 0u;
  clear_has_steamguard_required_days();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::steamguard_required_days() const {
  return steamguard_required_days_;
}
inline void CMsgTrading_InitiateTradeResponse::set_steamguard_required_days(::google::protobuf::uint32 value) {
  set_has_steamguard_required_days();
  steamguard_required_days_ = value;
}

// optional uint32 new_device_cooldown_days = 5;
inline bool CMsgTrading_InitiateTradeResponse::has_new_device_cooldown_days() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_new_device_cooldown_days() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_new_device_cooldown_days() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_new_device_cooldown_days() {
  new_device_cooldown_days_ = 0u;
  clear_has_new_device_cooldown_days();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::new_device_cooldown_days() const {
  return new_device_cooldown_days_;
}
inline void CMsgTrading_InitiateTradeResponse::set_new_device_cooldown_days(::google::protobuf::uint32 value) {
  set_has_new_device_cooldown_days();
  new_device_cooldown_days_ = value;
}

// optional uint32 default_password_reset_probation_days = 6;
inline bool CMsgTrading_InitiateTradeResponse::has_default_password_reset_probation_days() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_default_password_reset_probation_days() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_default_password_reset_probation_days() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_default_password_reset_probation_days() {
  default_password_reset_probation_days_ = 0u;
  clear_has_default_password_reset_probation_days();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::default_password_reset_probation_days() const {
  return default_password_reset_probation_days_;
}
inline void CMsgTrading_InitiateTradeResponse::set_default_password_reset_probation_days(::google::protobuf::uint32 value) {
  set_has_default_password_reset_probation_days();
  default_password_reset_probation_days_ = value;
}

// optional uint32 password_reset_probation_days = 7;
inline bool CMsgTrading_InitiateTradeResponse::has_password_reset_probation_days() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_password_reset_probation_days() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_password_reset_probation_days() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_password_reset_probation_days() {
  password_reset_probation_days_ = 0u;
  clear_has_password_reset_probation_days();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::password_reset_probation_days() const {
  return password_reset_probation_days_;
}
inline void CMsgTrading_InitiateTradeResponse::set_password_reset_probation_days(::google::protobuf::uint32 value) {
  set_has_password_reset_probation_days();
  password_reset_probation_days_ = value;
}

// optional uint32 default_email_change_probation_days = 8;
inline bool CMsgTrading_InitiateTradeResponse::has_default_email_change_probation_days() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_default_email_change_probation_days() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_default_email_change_probation_days() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_default_email_change_probation_days() {
  default_email_change_probation_days_ = 0u;
  clear_has_default_email_change_probation_days();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::default_email_change_probation_days() const {
  return default_email_change_probation_days_;
}
inline void CMsgTrading_InitiateTradeResponse::set_default_email_change_probation_days(::google::protobuf::uint32 value) {
  set_has_default_email_change_probation_days();
  default_email_change_probation_days_ = value;
}

// optional uint32 email_change_probation_days = 9;
inline bool CMsgTrading_InitiateTradeResponse::has_email_change_probation_days() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgTrading_InitiateTradeResponse::set_has_email_change_probation_days() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_has_email_change_probation_days() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgTrading_InitiateTradeResponse::clear_email_change_probation_days() {
  email_change_probation_days_ = 0u;
  clear_has_email_change_probation_days();
}
inline ::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::email_change_probation_days() const {
  return email_change_probation_days_;
}
inline void CMsgTrading_InitiateTradeResponse::set_email_change_probation_days(::google::protobuf::uint32 value) {
  set_has_email_change_probation_days();
  email_change_probation_days_ = value;
}

// -------------------------------------------------------------------

// CMsgTrading_CancelTradeRequest

// optional uint64 other_steamid = 1;
inline bool CMsgTrading_CancelTradeRequest::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTrading_CancelTradeRequest::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTrading_CancelTradeRequest::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTrading_CancelTradeRequest::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
inline ::google::protobuf::uint64 CMsgTrading_CancelTradeRequest::other_steamid() const {
  return other_steamid_;
}
inline void CMsgTrading_CancelTradeRequest::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgTrading_StartSession

// optional uint64 other_steamid = 1;
inline bool CMsgTrading_StartSession::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgTrading_StartSession::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgTrading_StartSession::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgTrading_StartSession::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
inline ::google::protobuf::uint64 CMsgTrading_StartSession::other_steamid() const {
  return other_steamid_;
}
inline void CMsgTrading_StartSession::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgClientGetCDNAuthToken

// optional uint32 depot_id = 1;
inline bool CMsgClientGetCDNAuthToken::has_depot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetCDNAuthToken::set_has_depot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetCDNAuthToken::clear_has_depot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetCDNAuthToken::clear_depot_id() {
  depot_id_ = 0u;
  clear_has_depot_id();
}
inline ::google::protobuf::uint32 CMsgClientGetCDNAuthToken::depot_id() const {
  return depot_id_;
}
inline void CMsgClientGetCDNAuthToken::set_depot_id(::google::protobuf::uint32 value) {
  set_has_depot_id();
  depot_id_ = value;
}

// optional string host_name = 2;
inline bool CMsgClientGetCDNAuthToken::has_host_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientGetCDNAuthToken::set_has_host_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientGetCDNAuthToken::clear_has_host_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientGetCDNAuthToken::clear_host_name() {
  if (host_name_ != &::google::protobuf::internal::kEmptyString) {
    host_name_->clear();
  }
  clear_has_host_name();
}
inline const ::std::string& CMsgClientGetCDNAuthToken::host_name() const {
  return *host_name_;
}
inline void CMsgClientGetCDNAuthToken::set_host_name(const ::std::string& value) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(value);
}
inline void CMsgClientGetCDNAuthToken::set_host_name(const char* value) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(value);
}
inline void CMsgClientGetCDNAuthToken::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientGetCDNAuthToken::mutable_host_name() {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  return host_name_;
}
inline ::std::string* CMsgClientGetCDNAuthToken::release_host_name() {
  clear_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = host_name_;
    host_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientGetCDNAuthToken::set_allocated_host_name(::std::string* host_name) {
  if (host_name_ != &::google::protobuf::internal::kEmptyString) {
    delete host_name_;
  }
  if (host_name) {
    set_has_host_name();
    host_name_ = host_name;
  } else {
    clear_has_host_name();
    host_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 app_id = 3;
inline bool CMsgClientGetCDNAuthToken::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientGetCDNAuthToken::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientGetCDNAuthToken::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientGetCDNAuthToken::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientGetCDNAuthToken::app_id() const {
  return app_id_;
}
inline void CMsgClientGetCDNAuthToken::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientGetDepotDecryptionKey

// optional uint32 depot_id = 1;
inline bool CMsgClientGetDepotDecryptionKey::has_depot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetDepotDecryptionKey::set_has_depot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetDepotDecryptionKey::clear_has_depot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetDepotDecryptionKey::clear_depot_id() {
  depot_id_ = 0u;
  clear_has_depot_id();
}
inline ::google::protobuf::uint32 CMsgClientGetDepotDecryptionKey::depot_id() const {
  return depot_id_;
}
inline void CMsgClientGetDepotDecryptionKey::set_depot_id(::google::protobuf::uint32 value) {
  set_has_depot_id();
  depot_id_ = value;
}

// optional uint32 app_id = 2;
inline bool CMsgClientGetDepotDecryptionKey::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientGetDepotDecryptionKey::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientGetDepotDecryptionKey::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientGetDepotDecryptionKey::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientGetDepotDecryptionKey::app_id() const {
  return app_id_;
}
inline void CMsgClientGetDepotDecryptionKey::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientGetDepotDecryptionKeyResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientGetDepotDecryptionKeyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientGetDepotDecryptionKeyResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 depot_id = 2;
inline bool CMsgClientGetDepotDecryptionKeyResponse::has_depot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_has_depot_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_has_depot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_depot_id() {
  depot_id_ = 0u;
  clear_has_depot_id();
}
inline ::google::protobuf::uint32 CMsgClientGetDepotDecryptionKeyResponse::depot_id() const {
  return depot_id_;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_id(::google::protobuf::uint32 value) {
  set_has_depot_id();
  depot_id_ = value;
}

// optional bytes depot_encryption_key = 3;
inline bool CMsgClientGetDepotDecryptionKeyResponse::has_depot_encryption_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_has_depot_encryption_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_has_depot_encryption_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_depot_encryption_key() {
  if (depot_encryption_key_ != &::google::protobuf::internal::kEmptyString) {
    depot_encryption_key_->clear();
  }
  clear_has_depot_encryption_key();
}
inline const ::std::string& CMsgClientGetDepotDecryptionKeyResponse::depot_encryption_key() const {
  return *depot_encryption_key_;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const ::std::string& value) {
  set_has_depot_encryption_key();
  if (depot_encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    depot_encryption_key_ = new ::std::string;
  }
  depot_encryption_key_->assign(value);
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const char* value) {
  set_has_depot_encryption_key();
  if (depot_encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    depot_encryption_key_ = new ::std::string;
  }
  depot_encryption_key_->assign(value);
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const void* value, size_t size) {
  set_has_depot_encryption_key();
  if (depot_encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    depot_encryption_key_ = new ::std::string;
  }
  depot_encryption_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientGetDepotDecryptionKeyResponse::mutable_depot_encryption_key() {
  set_has_depot_encryption_key();
  if (depot_encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    depot_encryption_key_ = new ::std::string;
  }
  return depot_encryption_key_;
}
inline ::std::string* CMsgClientGetDepotDecryptionKeyResponse::release_depot_encryption_key() {
  clear_has_depot_encryption_key();
  if (depot_encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = depot_encryption_key_;
    depot_encryption_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_allocated_depot_encryption_key(::std::string* depot_encryption_key) {
  if (depot_encryption_key_ != &::google::protobuf::internal::kEmptyString) {
    delete depot_encryption_key_;
  }
  if (depot_encryption_key) {
    set_has_depot_encryption_key();
    depot_encryption_key_ = depot_encryption_key;
  } else {
    clear_has_depot_encryption_key();
    depot_encryption_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientCheckAppBetaPassword

// optional uint32 app_id = 1;
inline bool CMsgClientCheckAppBetaPassword::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCheckAppBetaPassword::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCheckAppBetaPassword::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCheckAppBetaPassword::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientCheckAppBetaPassword::app_id() const {
  return app_id_;
}
inline void CMsgClientCheckAppBetaPassword::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional string betapassword = 2;
inline bool CMsgClientCheckAppBetaPassword::has_betapassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientCheckAppBetaPassword::set_has_betapassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientCheckAppBetaPassword::clear_has_betapassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientCheckAppBetaPassword::clear_betapassword() {
  if (betapassword_ != &::google::protobuf::internal::kEmptyString) {
    betapassword_->clear();
  }
  clear_has_betapassword();
}
inline const ::std::string& CMsgClientCheckAppBetaPassword::betapassword() const {
  return *betapassword_;
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(const ::std::string& value) {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  betapassword_->assign(value);
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(const char* value) {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  betapassword_->assign(value);
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(const char* value, size_t size) {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  betapassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckAppBetaPassword::mutable_betapassword() {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  return betapassword_;
}
inline ::std::string* CMsgClientCheckAppBetaPassword::release_betapassword() {
  clear_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = betapassword_;
    betapassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckAppBetaPassword::set_allocated_betapassword(::std::string* betapassword) {
  if (betapassword_ != &::google::protobuf::internal::kEmptyString) {
    delete betapassword_;
  }
  if (betapassword) {
    set_has_betapassword();
    betapassword_ = betapassword;
  } else {
    clear_has_betapassword();
    betapassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 language = 3;
inline bool CMsgClientCheckAppBetaPassword::has_language() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientCheckAppBetaPassword::set_has_language() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientCheckAppBetaPassword::clear_has_language() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientCheckAppBetaPassword::clear_language() {
  language_ = 0;
  clear_has_language();
}
inline ::google::protobuf::int32 CMsgClientCheckAppBetaPassword::language() const {
  return language_;
}
inline void CMsgClientCheckAppBetaPassword::set_language(::google::protobuf::int32 value) {
  set_has_language();
  language_ = value;
}

// -------------------------------------------------------------------

// CMsgClientCheckAppBetaPasswordResponse_BetaPassword

// optional string betaname = 1;
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betaname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_has_betaname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_has_betaname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betaname() {
  if (betaname_ != &::google::protobuf::internal::kEmptyString) {
    betaname_->clear();
  }
  clear_has_betaname();
}
inline const ::std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betaname() const {
  return *betaname_;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const ::std::string& value) {
  set_has_betaname();
  if (betaname_ == &::google::protobuf::internal::kEmptyString) {
    betaname_ = new ::std::string;
  }
  betaname_->assign(value);
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const char* value) {
  set_has_betaname();
  if (betaname_ == &::google::protobuf::internal::kEmptyString) {
    betaname_ = new ::std::string;
  }
  betaname_->assign(value);
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const char* value, size_t size) {
  set_has_betaname();
  if (betaname_ == &::google::protobuf::internal::kEmptyString) {
    betaname_ = new ::std::string;
  }
  betaname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betaname() {
  set_has_betaname();
  if (betaname_ == &::google::protobuf::internal::kEmptyString) {
    betaname_ = new ::std::string;
  }
  return betaname_;
}
inline ::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betaname() {
  clear_has_betaname();
  if (betaname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = betaname_;
    betaname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betaname(::std::string* betaname) {
  if (betaname_ != &::google::protobuf::internal::kEmptyString) {
    delete betaname_;
  }
  if (betaname) {
    set_has_betaname();
    betaname_ = betaname;
  } else {
    clear_has_betaname();
    betaname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string betapassword = 2;
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betapassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_has_betapassword() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_has_betapassword() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betapassword() {
  if (betapassword_ != &::google::protobuf::internal::kEmptyString) {
    betapassword_->clear();
  }
  clear_has_betapassword();
}
inline const ::std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betapassword() const {
  return *betapassword_;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const ::std::string& value) {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  betapassword_->assign(value);
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const char* value) {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  betapassword_->assign(value);
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const char* value, size_t size) {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  betapassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betapassword() {
  set_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    betapassword_ = new ::std::string;
  }
  return betapassword_;
}
inline ::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betapassword() {
  clear_has_betapassword();
  if (betapassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = betapassword_;
    betapassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betapassword(::std::string* betapassword) {
  if (betapassword_ != &::google::protobuf::internal::kEmptyString) {
    delete betapassword_;
  }
  if (betapassword) {
    set_has_betapassword();
    betapassword_ = betapassword;
  } else {
    clear_has_betapassword();
    betapassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string betadescription = 3;
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betadescription() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_has_betadescription() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_has_betadescription() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betadescription() {
  if (betadescription_ != &::google::protobuf::internal::kEmptyString) {
    betadescription_->clear();
  }
  clear_has_betadescription();
}
inline const ::std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betadescription() const {
  return *betadescription_;
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(const ::std::string& value) {
  set_has_betadescription();
  if (betadescription_ == &::google::protobuf::internal::kEmptyString) {
    betadescription_ = new ::std::string;
  }
  betadescription_->assign(value);
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(const char* value) {
  set_has_betadescription();
  if (betadescription_ == &::google::protobuf::internal::kEmptyString) {
    betadescription_ = new ::std::string;
  }
  betadescription_->assign(value);
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(const char* value, size_t size) {
  set_has_betadescription();
  if (betadescription_ == &::google::protobuf::internal::kEmptyString) {
    betadescription_ = new ::std::string;
  }
  betadescription_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betadescription() {
  set_has_betadescription();
  if (betadescription_ == &::google::protobuf::internal::kEmptyString) {
    betadescription_ = new ::std::string;
  }
  return betadescription_;
}
inline ::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betadescription() {
  clear_has_betadescription();
  if (betadescription_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = betadescription_;
    betadescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betadescription(::std::string* betadescription) {
  if (betadescription_ != &::google::protobuf::internal::kEmptyString) {
    delete betadescription_;
  }
  if (betadescription) {
    set_has_betadescription();
    betadescription_ = betadescription;
  } else {
    clear_has_betadescription();
    betadescription_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientCheckAppBetaPasswordResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientCheckAppBetaPasswordResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCheckAppBetaPasswordResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCheckAppBetaPasswordResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCheckAppBetaPasswordResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientCheckAppBetaPasswordResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientCheckAppBetaPasswordResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
inline int CMsgClientCheckAppBetaPasswordResponse::betapasswords_size() const {
  return betapasswords_.size();
}
inline void CMsgClientCheckAppBetaPasswordResponse::clear_betapasswords() {
  betapasswords_.Clear();
}
inline const ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse::betapasswords(int index) const {
  return betapasswords_.Get(index);
}
inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::mutable_betapasswords(int index) {
  return betapasswords_.Mutable(index);
}
inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::add_betapasswords() {
  return betapasswords_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >&
CMsgClientCheckAppBetaPasswordResponse::betapasswords() const {
  return betapasswords_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >*
CMsgClientCheckAppBetaPasswordResponse::mutable_betapasswords() {
  return &betapasswords_;
}

// -------------------------------------------------------------------

// CMsgClientUpdateAppJobReport

// optional uint32 app_id = 1;
inline bool CMsgClientUpdateAppJobReport::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUpdateAppJobReport::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::app_id() const {
  return app_id_;
}
inline void CMsgClientUpdateAppJobReport::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// repeated uint32 depot_ids = 2;
inline int CMsgClientUpdateAppJobReport::depot_ids_size() const {
  return depot_ids_.size();
}
inline void CMsgClientUpdateAppJobReport::clear_depot_ids() {
  depot_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::depot_ids(int index) const {
  return depot_ids_.Get(index);
}
inline void CMsgClientUpdateAppJobReport::set_depot_ids(int index, ::google::protobuf::uint32 value) {
  depot_ids_.Set(index, value);
}
inline void CMsgClientUpdateAppJobReport::add_depot_ids(::google::protobuf::uint32 value) {
  depot_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientUpdateAppJobReport::depot_ids() const {
  return depot_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientUpdateAppJobReport::mutable_depot_ids() {
  return &depot_ids_;
}

// optional uint32 app_state = 3;
inline bool CMsgClientUpdateAppJobReport::has_app_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_app_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_app_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientUpdateAppJobReport::clear_app_state() {
  app_state_ = 0u;
  clear_has_app_state();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::app_state() const {
  return app_state_;
}
inline void CMsgClientUpdateAppJobReport::set_app_state(::google::protobuf::uint32 value) {
  set_has_app_state();
  app_state_ = value;
}

// optional uint32 job_app_error = 4;
inline bool CMsgClientUpdateAppJobReport::has_job_app_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_job_app_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_job_app_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientUpdateAppJobReport::clear_job_app_error() {
  job_app_error_ = 0u;
  clear_has_job_app_error();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::job_app_error() const {
  return job_app_error_;
}
inline void CMsgClientUpdateAppJobReport::set_job_app_error(::google::protobuf::uint32 value) {
  set_has_job_app_error();
  job_app_error_ = value;
}

// optional string error_details = 5;
inline bool CMsgClientUpdateAppJobReport::has_error_details() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_error_details() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_error_details() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientUpdateAppJobReport::clear_error_details() {
  if (error_details_ != &::google::protobuf::internal::kEmptyString) {
    error_details_->clear();
  }
  clear_has_error_details();
}
inline const ::std::string& CMsgClientUpdateAppJobReport::error_details() const {
  return *error_details_;
}
inline void CMsgClientUpdateAppJobReport::set_error_details(const ::std::string& value) {
  set_has_error_details();
  if (error_details_ == &::google::protobuf::internal::kEmptyString) {
    error_details_ = new ::std::string;
  }
  error_details_->assign(value);
}
inline void CMsgClientUpdateAppJobReport::set_error_details(const char* value) {
  set_has_error_details();
  if (error_details_ == &::google::protobuf::internal::kEmptyString) {
    error_details_ = new ::std::string;
  }
  error_details_->assign(value);
}
inline void CMsgClientUpdateAppJobReport::set_error_details(const char* value, size_t size) {
  set_has_error_details();
  if (error_details_ == &::google::protobuf::internal::kEmptyString) {
    error_details_ = new ::std::string;
  }
  error_details_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateAppJobReport::mutable_error_details() {
  set_has_error_details();
  if (error_details_ == &::google::protobuf::internal::kEmptyString) {
    error_details_ = new ::std::string;
  }
  return error_details_;
}
inline ::std::string* CMsgClientUpdateAppJobReport::release_error_details() {
  clear_has_error_details();
  if (error_details_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_details_;
    error_details_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateAppJobReport::set_allocated_error_details(::std::string* error_details) {
  if (error_details_ != &::google::protobuf::internal::kEmptyString) {
    delete error_details_;
  }
  if (error_details) {
    set_has_error_details();
    error_details_ = error_details;
  } else {
    clear_has_error_details();
    error_details_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 job_duration = 6;
inline bool CMsgClientUpdateAppJobReport::has_job_duration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_job_duration() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_job_duration() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientUpdateAppJobReport::clear_job_duration() {
  job_duration_ = 0u;
  clear_has_job_duration();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::job_duration() const {
  return job_duration_;
}
inline void CMsgClientUpdateAppJobReport::set_job_duration(::google::protobuf::uint32 value) {
  set_has_job_duration();
  job_duration_ = value;
}

// optional uint32 files_validation_failed = 7;
inline bool CMsgClientUpdateAppJobReport::has_files_validation_failed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_files_validation_failed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_files_validation_failed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientUpdateAppJobReport::clear_files_validation_failed() {
  files_validation_failed_ = 0u;
  clear_has_files_validation_failed();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::files_validation_failed() const {
  return files_validation_failed_;
}
inline void CMsgClientUpdateAppJobReport::set_files_validation_failed(::google::protobuf::uint32 value) {
  set_has_files_validation_failed();
  files_validation_failed_ = value;
}

// optional uint64 job_bytes_downloaded = 8;
inline bool CMsgClientUpdateAppJobReport::has_job_bytes_downloaded() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_job_bytes_downloaded() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_job_bytes_downloaded() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientUpdateAppJobReport::clear_job_bytes_downloaded() {
  job_bytes_downloaded_ = GOOGLE_ULONGLONG(0);
  clear_has_job_bytes_downloaded();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::job_bytes_downloaded() const {
  return job_bytes_downloaded_;
}
inline void CMsgClientUpdateAppJobReport::set_job_bytes_downloaded(::google::protobuf::uint64 value) {
  set_has_job_bytes_downloaded();
  job_bytes_downloaded_ = value;
}

// optional uint64 job_bytes_staged = 9;
inline bool CMsgClientUpdateAppJobReport::has_job_bytes_staged() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_job_bytes_staged() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_job_bytes_staged() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientUpdateAppJobReport::clear_job_bytes_staged() {
  job_bytes_staged_ = GOOGLE_ULONGLONG(0);
  clear_has_job_bytes_staged();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::job_bytes_staged() const {
  return job_bytes_staged_;
}
inline void CMsgClientUpdateAppJobReport::set_job_bytes_staged(::google::protobuf::uint64 value) {
  set_has_job_bytes_staged();
  job_bytes_staged_ = value;
}

// optional uint64 bytes_comitted = 10;
inline bool CMsgClientUpdateAppJobReport::has_bytes_comitted() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_bytes_comitted() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_bytes_comitted() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientUpdateAppJobReport::clear_bytes_comitted() {
  bytes_comitted_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_comitted();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::bytes_comitted() const {
  return bytes_comitted_;
}
inline void CMsgClientUpdateAppJobReport::set_bytes_comitted(::google::protobuf::uint64 value) {
  set_has_bytes_comitted();
  bytes_comitted_ = value;
}

// optional uint32 start_app_state = 11;
inline bool CMsgClientUpdateAppJobReport::has_start_app_state() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_start_app_state() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_start_app_state() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientUpdateAppJobReport::clear_start_app_state() {
  start_app_state_ = 0u;
  clear_has_start_app_state();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::start_app_state() const {
  return start_app_state_;
}
inline void CMsgClientUpdateAppJobReport::set_start_app_state(::google::protobuf::uint32 value) {
  set_has_start_app_state();
  start_app_state_ = value;
}

// optional fixed64 stats_machine_id = 12;
inline bool CMsgClientUpdateAppJobReport::has_stats_machine_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_stats_machine_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_stats_machine_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientUpdateAppJobReport::clear_stats_machine_id() {
  stats_machine_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stats_machine_id();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::stats_machine_id() const {
  return stats_machine_id_;
}
inline void CMsgClientUpdateAppJobReport::set_stats_machine_id(::google::protobuf::uint64 value) {
  set_has_stats_machine_id();
  stats_machine_id_ = value;
}

// optional string branch_name = 13;
inline bool CMsgClientUpdateAppJobReport::has_branch_name() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_branch_name() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientUpdateAppJobReport::clear_branch_name() {
  if (branch_name_ != &::google::protobuf::internal::kEmptyString) {
    branch_name_->clear();
  }
  clear_has_branch_name();
}
inline const ::std::string& CMsgClientUpdateAppJobReport::branch_name() const {
  return *branch_name_;
}
inline void CMsgClientUpdateAppJobReport::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::kEmptyString) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
}
inline void CMsgClientUpdateAppJobReport::set_branch_name(const char* value) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::kEmptyString) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(value);
}
inline void CMsgClientUpdateAppJobReport::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::kEmptyString) {
    branch_name_ = new ::std::string;
  }
  branch_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientUpdateAppJobReport::mutable_branch_name() {
  set_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::kEmptyString) {
    branch_name_ = new ::std::string;
  }
  return branch_name_;
}
inline ::std::string* CMsgClientUpdateAppJobReport::release_branch_name() {
  clear_has_branch_name();
  if (branch_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = branch_name_;
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientUpdateAppJobReport::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name_ != &::google::protobuf::internal::kEmptyString) {
    delete branch_name_;
  }
  if (branch_name) {
    set_has_branch_name();
    branch_name_ = branch_name;
  } else {
    clear_has_branch_name();
    branch_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 total_bytes_downloaded = 14;
inline bool CMsgClientUpdateAppJobReport::has_total_bytes_downloaded() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_total_bytes_downloaded() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_total_bytes_downloaded() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientUpdateAppJobReport::clear_total_bytes_downloaded() {
  total_bytes_downloaded_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_downloaded();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_downloaded() const {
  return total_bytes_downloaded_;
}
inline void CMsgClientUpdateAppJobReport::set_total_bytes_downloaded(::google::protobuf::uint64 value) {
  set_has_total_bytes_downloaded();
  total_bytes_downloaded_ = value;
}

// optional uint64 total_bytes_staged = 15;
inline bool CMsgClientUpdateAppJobReport::has_total_bytes_staged() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_total_bytes_staged() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_total_bytes_staged() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientUpdateAppJobReport::clear_total_bytes_staged() {
  total_bytes_staged_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_staged();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_staged() const {
  return total_bytes_staged_;
}
inline void CMsgClientUpdateAppJobReport::set_total_bytes_staged(::google::protobuf::uint64 value) {
  set_has_total_bytes_staged();
  total_bytes_staged_ = value;
}

// optional uint64 total_bytes_restored = 16;
inline bool CMsgClientUpdateAppJobReport::has_total_bytes_restored() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_total_bytes_restored() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_total_bytes_restored() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientUpdateAppJobReport::clear_total_bytes_restored() {
  total_bytes_restored_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_restored();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_restored() const {
  return total_bytes_restored_;
}
inline void CMsgClientUpdateAppJobReport::set_total_bytes_restored(::google::protobuf::uint64 value) {
  set_has_total_bytes_restored();
  total_bytes_restored_ = value;
}

// optional bool is_borrowed = 17;
inline bool CMsgClientUpdateAppJobReport::has_is_borrowed() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_is_borrowed() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_is_borrowed() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientUpdateAppJobReport::clear_is_borrowed() {
  is_borrowed_ = false;
  clear_has_is_borrowed();
}
inline bool CMsgClientUpdateAppJobReport::is_borrowed() const {
  return is_borrowed_;
}
inline void CMsgClientUpdateAppJobReport::set_is_borrowed(bool value) {
  set_has_is_borrowed();
  is_borrowed_ = value;
}

// optional bool is_free_weekend = 18;
inline bool CMsgClientUpdateAppJobReport::has_is_free_weekend() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_is_free_weekend() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_is_free_weekend() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgClientUpdateAppJobReport::clear_is_free_weekend() {
  is_free_weekend_ = false;
  clear_has_is_free_weekend();
}
inline bool CMsgClientUpdateAppJobReport::is_free_weekend() const {
  return is_free_weekend_;
}
inline void CMsgClientUpdateAppJobReport::set_is_free_weekend(bool value) {
  set_has_is_free_weekend();
  is_free_weekend_ = value;
}

// optional uint64 total_bytes_legacy = 19;
inline bool CMsgClientUpdateAppJobReport::has_total_bytes_legacy() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_total_bytes_legacy() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_total_bytes_legacy() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgClientUpdateAppJobReport::clear_total_bytes_legacy() {
  total_bytes_legacy_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_legacy();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_legacy() const {
  return total_bytes_legacy_;
}
inline void CMsgClientUpdateAppJobReport::set_total_bytes_legacy(::google::protobuf::uint64 value) {
  set_has_total_bytes_legacy();
  total_bytes_legacy_ = value;
}

// optional uint64 total_bytes_patched = 20;
inline bool CMsgClientUpdateAppJobReport::has_total_bytes_patched() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_total_bytes_patched() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_total_bytes_patched() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgClientUpdateAppJobReport::clear_total_bytes_patched() {
  total_bytes_patched_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_patched();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_patched() const {
  return total_bytes_patched_;
}
inline void CMsgClientUpdateAppJobReport::set_total_bytes_patched(::google::protobuf::uint64 value) {
  set_has_total_bytes_patched();
  total_bytes_patched_ = value;
}

// optional uint64 total_bytes_saved = 21;
inline bool CMsgClientUpdateAppJobReport::has_total_bytes_saved() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_total_bytes_saved() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_total_bytes_saved() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgClientUpdateAppJobReport::clear_total_bytes_saved() {
  total_bytes_saved_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_saved();
}
inline ::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_saved() const {
  return total_bytes_saved_;
}
inline void CMsgClientUpdateAppJobReport::set_total_bytes_saved(::google::protobuf::uint64 value) {
  set_has_total_bytes_saved();
  total_bytes_saved_ = value;
}

// optional uint32 cell_id = 22;
inline bool CMsgClientUpdateAppJobReport::has_cell_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgClientUpdateAppJobReport::set_has_cell_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgClientUpdateAppJobReport::clear_has_cell_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgClientUpdateAppJobReport::clear_cell_id() {
  cell_id_ = 0u;
  clear_has_cell_id();
}
inline ::google::protobuf::uint32 CMsgClientUpdateAppJobReport::cell_id() const {
  return cell_id_;
}
inline void CMsgClientUpdateAppJobReport::set_cell_id(::google::protobuf::uint32 value) {
  set_has_cell_id();
  cell_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientDPContentStatsReport

// optional fixed64 stats_machine_id = 1;
inline bool CMsgClientDPContentStatsReport::has_stats_machine_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_stats_machine_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDPContentStatsReport::clear_has_stats_machine_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDPContentStatsReport::clear_stats_machine_id() {
  stats_machine_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stats_machine_id();
}
inline ::google::protobuf::uint64 CMsgClientDPContentStatsReport::stats_machine_id() const {
  return stats_machine_id_;
}
inline void CMsgClientDPContentStatsReport::set_stats_machine_id(::google::protobuf::uint64 value) {
  set_has_stats_machine_id();
  stats_machine_id_ = value;
}

// optional string country_code = 2;
inline bool CMsgClientDPContentStatsReport::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDPContentStatsReport::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDPContentStatsReport::clear_country_code() {
  if (country_code_ != &::google::protobuf::internal::kEmptyString) {
    country_code_->clear();
  }
  clear_has_country_code();
}
inline const ::std::string& CMsgClientDPContentStatsReport::country_code() const {
  return *country_code_;
}
inline void CMsgClientDPContentStatsReport::set_country_code(const ::std::string& value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
}
inline void CMsgClientDPContentStatsReport::set_country_code(const char* value) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(value);
}
inline void CMsgClientDPContentStatsReport::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  country_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientDPContentStatsReport::mutable_country_code() {
  set_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    country_code_ = new ::std::string;
  }
  return country_code_;
}
inline ::std::string* CMsgClientDPContentStatsReport::release_country_code() {
  clear_has_country_code();
  if (country_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = country_code_;
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientDPContentStatsReport::set_allocated_country_code(::std::string* country_code) {
  if (country_code_ != &::google::protobuf::internal::kEmptyString) {
    delete country_code_;
  }
  if (country_code) {
    set_has_country_code();
    country_code_ = country_code;
  } else {
    clear_has_country_code();
    country_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 os_type = 3;
inline bool CMsgClientDPContentStatsReport::has_os_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_os_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientDPContentStatsReport::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientDPContentStatsReport::clear_os_type() {
  os_type_ = 0;
  clear_has_os_type();
}
inline ::google::protobuf::int32 CMsgClientDPContentStatsReport::os_type() const {
  return os_type_;
}
inline void CMsgClientDPContentStatsReport::set_os_type(::google::protobuf::int32 value) {
  set_has_os_type();
  os_type_ = value;
}

// optional int32 language = 4;
inline bool CMsgClientDPContentStatsReport::has_language() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_language() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientDPContentStatsReport::clear_has_language() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientDPContentStatsReport::clear_language() {
  language_ = 0;
  clear_has_language();
}
inline ::google::protobuf::int32 CMsgClientDPContentStatsReport::language() const {
  return language_;
}
inline void CMsgClientDPContentStatsReport::set_language(::google::protobuf::int32 value) {
  set_has_language();
  language_ = value;
}

// optional uint32 num_install_folders = 5;
inline bool CMsgClientDPContentStatsReport::has_num_install_folders() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_num_install_folders() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientDPContentStatsReport::clear_has_num_install_folders() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientDPContentStatsReport::clear_num_install_folders() {
  num_install_folders_ = 0u;
  clear_has_num_install_folders();
}
inline ::google::protobuf::uint32 CMsgClientDPContentStatsReport::num_install_folders() const {
  return num_install_folders_;
}
inline void CMsgClientDPContentStatsReport::set_num_install_folders(::google::protobuf::uint32 value) {
  set_has_num_install_folders();
  num_install_folders_ = value;
}

// optional uint32 num_installed_games = 6;
inline bool CMsgClientDPContentStatsReport::has_num_installed_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_num_installed_games() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientDPContentStatsReport::clear_has_num_installed_games() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientDPContentStatsReport::clear_num_installed_games() {
  num_installed_games_ = 0u;
  clear_has_num_installed_games();
}
inline ::google::protobuf::uint32 CMsgClientDPContentStatsReport::num_installed_games() const {
  return num_installed_games_;
}
inline void CMsgClientDPContentStatsReport::set_num_installed_games(::google::protobuf::uint32 value) {
  set_has_num_installed_games();
  num_installed_games_ = value;
}

// optional uint64 size_installed_games = 7;
inline bool CMsgClientDPContentStatsReport::has_size_installed_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientDPContentStatsReport::set_has_size_installed_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientDPContentStatsReport::clear_has_size_installed_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientDPContentStatsReport::clear_size_installed_games() {
  size_installed_games_ = GOOGLE_ULONGLONG(0);
  clear_has_size_installed_games();
}
inline ::google::protobuf::uint64 CMsgClientDPContentStatsReport::size_installed_games() const {
  return size_installed_games_;
}
inline void CMsgClientDPContentStatsReport::set_size_installed_games(::google::protobuf::uint64 value) {
  set_has_size_installed_games();
  size_installed_games_ = value;
}

// -------------------------------------------------------------------

// CMsgClientGetCDNAuthTokenResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientGetCDNAuthTokenResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientGetCDNAuthTokenResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional string token = 2;
inline bool CMsgClientGetCDNAuthTokenResponse::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& CMsgClientGetCDNAuthTokenResponse::token() const {
  return *token_;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(const char* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientGetCDNAuthTokenResponse::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* CMsgClientGetCDNAuthTokenResponse::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientGetCDNAuthTokenResponse::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 expiration_time = 3;
inline bool CMsgClientGetCDNAuthTokenResponse::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_expiration_time() {
  expiration_time_ = 0u;
  clear_has_expiration_time();
}
inline ::google::protobuf::uint32 CMsgClientGetCDNAuthTokenResponse::expiration_time() const {
  return expiration_time_;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_expiration_time(::google::protobuf::uint32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
}

// -------------------------------------------------------------------

// CMsgDownloadRateStatistics_StatsInfo

// optional uint32 source_type = 1;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_source_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_source_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
inline ::google::protobuf::uint32 CMsgDownloadRateStatistics_StatsInfo::source_type() const {
  return source_type_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
}

// optional uint32 source_id = 2;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_source_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_source_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_source_id() {
  source_id_ = 0u;
  clear_has_source_id();
}
inline ::google::protobuf::uint32 CMsgDownloadRateStatistics_StatsInfo::source_id() const {
  return source_id_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_source_id(::google::protobuf::uint32 value) {
  set_has_source_id();
  source_id_ = value;
}

// optional uint32 seconds = 3;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_seconds() {
  seconds_ = 0u;
  clear_has_seconds();
}
inline ::google::protobuf::uint32 CMsgDownloadRateStatistics_StatsInfo::seconds() const {
  return seconds_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_seconds(::google::protobuf::uint32 value) {
  set_has_seconds();
  seconds_ = value;
}

// optional uint64 bytes = 4;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_bytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_bytes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
inline ::google::protobuf::uint64 CMsgDownloadRateStatistics_StatsInfo::bytes() const {
  return bytes_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
}

// optional string host_name = 5;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_host_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_host_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_host_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_host_name() {
  if (host_name_ != &::google::protobuf::internal::kEmptyString) {
    host_name_->clear();
  }
  clear_has_host_name();
}
inline const ::std::string& CMsgDownloadRateStatistics_StatsInfo::host_name() const {
  return *host_name_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const ::std::string& value) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(value);
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const char* value) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(value);
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  host_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDownloadRateStatistics_StatsInfo::mutable_host_name() {
  set_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    host_name_ = new ::std::string;
  }
  return host_name_;
}
inline ::std::string* CMsgDownloadRateStatistics_StatsInfo::release_host_name() {
  clear_has_host_name();
  if (host_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = host_name_;
    host_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_allocated_host_name(::std::string* host_name) {
  if (host_name_ != &::google::protobuf::internal::kEmptyString) {
    delete host_name_;
  }
  if (host_name) {
    set_has_host_name();
    host_name_ = host_name;
  } else {
    clear_has_host_name();
    host_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 microseconds = 6;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_microseconds() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_microseconds() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_microseconds() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_microseconds() {
  microseconds_ = GOOGLE_ULONGLONG(0);
  clear_has_microseconds();
}
inline ::google::protobuf::uint64 CMsgDownloadRateStatistics_StatsInfo::microseconds() const {
  return microseconds_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_microseconds(::google::protobuf::uint64 value) {
  set_has_microseconds();
  microseconds_ = value;
}

// optional bool used_ipv6 = 7;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_used_ipv6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_used_ipv6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_used_ipv6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_used_ipv6() {
  used_ipv6_ = false;
  clear_has_used_ipv6();
}
inline bool CMsgDownloadRateStatistics_StatsInfo::used_ipv6() const {
  return used_ipv6_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_used_ipv6(bool value) {
  set_has_used_ipv6();
  used_ipv6_ = value;
}

// optional bool proxied = 8;
inline bool CMsgDownloadRateStatistics_StatsInfo::has_proxied() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_has_proxied() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_has_proxied() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_proxied() {
  proxied_ = false;
  clear_has_proxied();
}
inline bool CMsgDownloadRateStatistics_StatsInfo::proxied() const {
  return proxied_;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_proxied(bool value) {
  set_has_proxied();
  proxied_ = value;
}

// -------------------------------------------------------------------

// CMsgDownloadRateStatistics

// optional uint32 cell_id = 1;
inline bool CMsgDownloadRateStatistics::has_cell_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDownloadRateStatistics::set_has_cell_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDownloadRateStatistics::clear_has_cell_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDownloadRateStatistics::clear_cell_id() {
  cell_id_ = 0u;
  clear_has_cell_id();
}
inline ::google::protobuf::uint32 CMsgDownloadRateStatistics::cell_id() const {
  return cell_id_;
}
inline void CMsgDownloadRateStatistics::set_cell_id(::google::protobuf::uint32 value) {
  set_has_cell_id();
  cell_id_ = value;
}

// repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
inline int CMsgDownloadRateStatistics::stats_size() const {
  return stats_.size();
}
inline void CMsgDownloadRateStatistics::clear_stats() {
  stats_.Clear();
}
inline const ::CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics::stats(int index) const {
  return stats_.Get(index);
}
inline ::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >&
CMsgDownloadRateStatistics::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >*
CMsgDownloadRateStatistics::mutable_stats() {
  return &stats_;
}

// optional uint32 throttling_kbps = 3;
inline bool CMsgDownloadRateStatistics::has_throttling_kbps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDownloadRateStatistics::set_has_throttling_kbps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDownloadRateStatistics::clear_has_throttling_kbps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDownloadRateStatistics::clear_throttling_kbps() {
  throttling_kbps_ = 0u;
  clear_has_throttling_kbps();
}
inline ::google::protobuf::uint32 CMsgDownloadRateStatistics::throttling_kbps() const {
  return throttling_kbps_;
}
inline void CMsgDownloadRateStatistics::set_throttling_kbps(::google::protobuf::uint32 value) {
  set_has_throttling_kbps();
  throttling_kbps_ = value;
}

// optional uint32 steam_realm = 4;
inline bool CMsgDownloadRateStatistics::has_steam_realm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDownloadRateStatistics::set_has_steam_realm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDownloadRateStatistics::clear_has_steam_realm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDownloadRateStatistics::clear_steam_realm() {
  steam_realm_ = 0u;
  clear_has_steam_realm();
}
inline ::google::protobuf::uint32 CMsgDownloadRateStatistics::steam_realm() const {
  return steam_realm_;
}
inline void CMsgDownloadRateStatistics::set_steam_realm(::google::protobuf::uint32 value) {
  set_has_steam_realm();
  steam_realm_ = value;
}

// -------------------------------------------------------------------

// CMsgClientRequestAccountData

// optional string account_or_email = 1;
inline bool CMsgClientRequestAccountData::has_account_or_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestAccountData::set_has_account_or_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestAccountData::clear_has_account_or_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestAccountData::clear_account_or_email() {
  if (account_or_email_ != &::google::protobuf::internal::kEmptyString) {
    account_or_email_->clear();
  }
  clear_has_account_or_email();
}
inline const ::std::string& CMsgClientRequestAccountData::account_or_email() const {
  return *account_or_email_;
}
inline void CMsgClientRequestAccountData::set_account_or_email(const ::std::string& value) {
  set_has_account_or_email();
  if (account_or_email_ == &::google::protobuf::internal::kEmptyString) {
    account_or_email_ = new ::std::string;
  }
  account_or_email_->assign(value);
}
inline void CMsgClientRequestAccountData::set_account_or_email(const char* value) {
  set_has_account_or_email();
  if (account_or_email_ == &::google::protobuf::internal::kEmptyString) {
    account_or_email_ = new ::std::string;
  }
  account_or_email_->assign(value);
}
inline void CMsgClientRequestAccountData::set_account_or_email(const char* value, size_t size) {
  set_has_account_or_email();
  if (account_or_email_ == &::google::protobuf::internal::kEmptyString) {
    account_or_email_ = new ::std::string;
  }
  account_or_email_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestAccountData::mutable_account_or_email() {
  set_has_account_or_email();
  if (account_or_email_ == &::google::protobuf::internal::kEmptyString) {
    account_or_email_ = new ::std::string;
  }
  return account_or_email_;
}
inline ::std::string* CMsgClientRequestAccountData::release_account_or_email() {
  clear_has_account_or_email();
  if (account_or_email_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_or_email_;
    account_or_email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestAccountData::set_allocated_account_or_email(::std::string* account_or_email) {
  if (account_or_email_ != &::google::protobuf::internal::kEmptyString) {
    delete account_or_email_;
  }
  if (account_or_email) {
    set_has_account_or_email();
    account_or_email_ = account_or_email;
  } else {
    clear_has_account_or_email();
    account_or_email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 action = 2;
inline bool CMsgClientRequestAccountData::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRequestAccountData::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRequestAccountData::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRequestAccountData::clear_action() {
  action_ = 0u;
  clear_has_action();
}
inline ::google::protobuf::uint32 CMsgClientRequestAccountData::action() const {
  return action_;
}
inline void CMsgClientRequestAccountData::set_action(::google::protobuf::uint32 value) {
  set_has_action();
  action_ = value;
}

// -------------------------------------------------------------------

// CMsgClientRequestAccountDataResponse

// optional uint32 action = 1;
inline bool CMsgClientRequestAccountDataResponse::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestAccountDataResponse::clear_action() {
  action_ = 0u;
  clear_has_action();
}
inline ::google::protobuf::uint32 CMsgClientRequestAccountDataResponse::action() const {
  return action_;
}
inline void CMsgClientRequestAccountDataResponse::set_action(::google::protobuf::uint32 value) {
  set_has_action();
  action_ = value;
}

// optional uint32 eresult = 2;
inline bool CMsgClientRequestAccountDataResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRequestAccountDataResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRequestAccountDataResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientRequestAccountDataResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional string account_name = 3;
inline bool CMsgClientRequestAccountDataResponse::has_account_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_account_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name() {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    account_name_->clear();
  }
  clear_has_account_name();
}
inline const ::std::string& CMsgClientRequestAccountDataResponse::account_name() const {
  return *account_name_;
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(const ::std::string& value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(const char* value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name() {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  return account_name_;
}
inline ::std::string* CMsgClientRequestAccountDataResponse::release_account_name() {
  clear_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_;
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name(::std::string* account_name) {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_;
  }
  if (account_name) {
    set_has_account_name();
    account_name_ = account_name;
  } else {
    clear_has_account_name();
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 ct_matches = 4;
inline bool CMsgClientRequestAccountDataResponse::has_ct_matches() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_ct_matches() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_ct_matches() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientRequestAccountDataResponse::clear_ct_matches() {
  ct_matches_ = 0u;
  clear_has_ct_matches();
}
inline ::google::protobuf::uint32 CMsgClientRequestAccountDataResponse::ct_matches() const {
  return ct_matches_;
}
inline void CMsgClientRequestAccountDataResponse::set_ct_matches(::google::protobuf::uint32 value) {
  set_has_ct_matches();
  ct_matches_ = value;
}

// optional string account_name_suggestion1 = 5;
inline bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_account_name_suggestion1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_account_name_suggestion1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion1() {
  if (account_name_suggestion1_ != &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion1_->clear();
  }
  clear_has_account_name_suggestion1();
}
inline const ::std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion1() const {
  return *account_name_suggestion1_;
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const ::std::string& value) {
  set_has_account_name_suggestion1();
  if (account_name_suggestion1_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion1_ = new ::std::string;
  }
  account_name_suggestion1_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const char* value) {
  set_has_account_name_suggestion1();
  if (account_name_suggestion1_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion1_ = new ::std::string;
  }
  account_name_suggestion1_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const char* value, size_t size) {
  set_has_account_name_suggestion1();
  if (account_name_suggestion1_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion1_ = new ::std::string;
  }
  account_name_suggestion1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion1() {
  set_has_account_name_suggestion1();
  if (account_name_suggestion1_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion1_ = new ::std::string;
  }
  return account_name_suggestion1_;
}
inline ::std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion1() {
  clear_has_account_name_suggestion1();
  if (account_name_suggestion1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_suggestion1_;
    account_name_suggestion1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion1(::std::string* account_name_suggestion1) {
  if (account_name_suggestion1_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_suggestion1_;
  }
  if (account_name_suggestion1) {
    set_has_account_name_suggestion1();
    account_name_suggestion1_ = account_name_suggestion1;
  } else {
    clear_has_account_name_suggestion1();
    account_name_suggestion1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string account_name_suggestion2 = 6;
inline bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_account_name_suggestion2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_account_name_suggestion2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion2() {
  if (account_name_suggestion2_ != &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion2_->clear();
  }
  clear_has_account_name_suggestion2();
}
inline const ::std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion2() const {
  return *account_name_suggestion2_;
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const ::std::string& value) {
  set_has_account_name_suggestion2();
  if (account_name_suggestion2_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion2_ = new ::std::string;
  }
  account_name_suggestion2_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const char* value) {
  set_has_account_name_suggestion2();
  if (account_name_suggestion2_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion2_ = new ::std::string;
  }
  account_name_suggestion2_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const char* value, size_t size) {
  set_has_account_name_suggestion2();
  if (account_name_suggestion2_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion2_ = new ::std::string;
  }
  account_name_suggestion2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion2() {
  set_has_account_name_suggestion2();
  if (account_name_suggestion2_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion2_ = new ::std::string;
  }
  return account_name_suggestion2_;
}
inline ::std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion2() {
  clear_has_account_name_suggestion2();
  if (account_name_suggestion2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_suggestion2_;
    account_name_suggestion2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion2(::std::string* account_name_suggestion2) {
  if (account_name_suggestion2_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_suggestion2_;
  }
  if (account_name_suggestion2) {
    set_has_account_name_suggestion2();
    account_name_suggestion2_ = account_name_suggestion2;
  } else {
    clear_has_account_name_suggestion2();
    account_name_suggestion2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string account_name_suggestion3 = 7;
inline bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientRequestAccountDataResponse::set_has_account_name_suggestion3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientRequestAccountDataResponse::clear_has_account_name_suggestion3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion3() {
  if (account_name_suggestion3_ != &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion3_->clear();
  }
  clear_has_account_name_suggestion3();
}
inline const ::std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion3() const {
  return *account_name_suggestion3_;
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const ::std::string& value) {
  set_has_account_name_suggestion3();
  if (account_name_suggestion3_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion3_ = new ::std::string;
  }
  account_name_suggestion3_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const char* value) {
  set_has_account_name_suggestion3();
  if (account_name_suggestion3_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion3_ = new ::std::string;
  }
  account_name_suggestion3_->assign(value);
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const char* value, size_t size) {
  set_has_account_name_suggestion3();
  if (account_name_suggestion3_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion3_ = new ::std::string;
  }
  account_name_suggestion3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion3() {
  set_has_account_name_suggestion3();
  if (account_name_suggestion3_ == &::google::protobuf::internal::kEmptyString) {
    account_name_suggestion3_ = new ::std::string;
  }
  return account_name_suggestion3_;
}
inline ::std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion3() {
  clear_has_account_name_suggestion3();
  if (account_name_suggestion3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_suggestion3_;
    account_name_suggestion3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion3(::std::string* account_name_suggestion3) {
  if (account_name_suggestion3_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_suggestion3_;
  }
  if (account_name_suggestion3) {
    set_has_account_name_suggestion3();
    account_name_suggestion3_ = account_name_suggestion3;
  } else {
    clear_has_account_name_suggestion3();
    account_name_suggestion3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStats

// optional uint64 gameid = 1;
inline bool CMsgClientUGSGetGlobalStats::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUGSGetGlobalStats::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUGSGetGlobalStats::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUGSGetGlobalStats::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
inline ::google::protobuf::uint64 CMsgClientUGSGetGlobalStats::gameid() const {
  return gameid_;
}
inline void CMsgClientUGSGetGlobalStats::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
}

// optional uint32 history_days_requested = 2;
inline bool CMsgClientUGSGetGlobalStats::has_history_days_requested() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUGSGetGlobalStats::set_has_history_days_requested() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUGSGetGlobalStats::clear_has_history_days_requested() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUGSGetGlobalStats::clear_history_days_requested() {
  history_days_requested_ = 0u;
  clear_has_history_days_requested();
}
inline ::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::history_days_requested() const {
  return history_days_requested_;
}
inline void CMsgClientUGSGetGlobalStats::set_history_days_requested(::google::protobuf::uint32 value) {
  set_has_history_days_requested();
  history_days_requested_ = value;
}

// optional fixed32 time_last_requested = 3;
inline bool CMsgClientUGSGetGlobalStats::has_time_last_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientUGSGetGlobalStats::set_has_time_last_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientUGSGetGlobalStats::clear_has_time_last_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientUGSGetGlobalStats::clear_time_last_requested() {
  time_last_requested_ = 0u;
  clear_has_time_last_requested();
}
inline ::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::time_last_requested() const {
  return time_last_requested_;
}
inline void CMsgClientUGSGetGlobalStats::set_time_last_requested(::google::protobuf::uint32 value) {
  set_has_time_last_requested();
  time_last_requested_ = value;
}

// optional uint32 first_day_cached = 4;
inline bool CMsgClientUGSGetGlobalStats::has_first_day_cached() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientUGSGetGlobalStats::set_has_first_day_cached() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientUGSGetGlobalStats::clear_has_first_day_cached() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientUGSGetGlobalStats::clear_first_day_cached() {
  first_day_cached_ = 0u;
  clear_has_first_day_cached();
}
inline ::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::first_day_cached() const {
  return first_day_cached_;
}
inline void CMsgClientUGSGetGlobalStats::set_first_day_cached(::google::protobuf::uint32 value) {
  set_has_first_day_cached();
  first_day_cached_ = value;
}

// optional uint32 days_cached = 5;
inline bool CMsgClientUGSGetGlobalStats::has_days_cached() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientUGSGetGlobalStats::set_has_days_cached() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientUGSGetGlobalStats::clear_has_days_cached() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientUGSGetGlobalStats::clear_days_cached() {
  days_cached_ = 0u;
  clear_has_days_cached();
}
inline ::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::days_cached() const {
  return days_cached_;
}
inline void CMsgClientUGSGetGlobalStats::set_days_cached(::google::protobuf::uint32 value) {
  set_has_days_cached();
  days_cached_ = value;
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStatsResponse_Day_Stat

// optional int32 stat_id = 1;
inline bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::has_stat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_has_stat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_has_stat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_stat_id() {
  stat_id_ = 0;
  clear_has_stat_id();
}
inline ::google::protobuf::int32 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::stat_id() const {
  return stat_id_;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_stat_id(::google::protobuf::int32 value) {
  set_has_stat_id();
  stat_id_ = value;
}

// optional int64 data = 2;
inline bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
inline ::google::protobuf::int64 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::data() const {
  return data_;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStatsResponse_Day

// optional uint32 day_id = 1;
inline bool CMsgClientUGSGetGlobalStatsResponse_Day::has_day_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::set_has_day_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::clear_has_day_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::clear_day_id() {
  day_id_ = 0u;
  clear_has_day_id();
}
inline ::google::protobuf::uint32 CMsgClientUGSGetGlobalStatsResponse_Day::day_id() const {
  return day_id_;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::set_day_id(::google::protobuf::uint32 value) {
  set_has_day_id();
  day_id_ = value;
}

// repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
inline int CMsgClientUGSGetGlobalStatsResponse_Day::stats_size() const {
  return stats_.size();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::clear_stats() {
  stats_.Clear();
}
inline const ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day::stats(int index) const {
  return stats_.Get(index);
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::mutable_stats(int index) {
  return stats_.Mutable(index);
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::add_stats() {
  return stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >&
CMsgClientUGSGetGlobalStatsResponse_Day::stats() const {
  return stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >*
CMsgClientUGSGetGlobalStatsResponse_Day::mutable_stats() {
  return &stats_;
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStatsResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUGSGetGlobalStatsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientUGSGetGlobalStatsResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional fixed32 timestamp = 2;
inline bool CMsgClientUGSGetGlobalStatsResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientUGSGetGlobalStatsResponse::timestamp() const {
  return timestamp_;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional int32 day_current = 3;
inline bool CMsgClientUGSGetGlobalStatsResponse::has_day_current() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_has_day_current() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_has_day_current() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_day_current() {
  day_current_ = 0;
  clear_has_day_current();
}
inline ::google::protobuf::int32 CMsgClientUGSGetGlobalStatsResponse::day_current() const {
  return day_current_;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_day_current(::google::protobuf::int32 value) {
  set_has_day_current();
  day_current_ = value;
}

// repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
inline int CMsgClientUGSGetGlobalStatsResponse::days_size() const {
  return days_.size();
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_days() {
  days_.Clear();
}
inline const ::CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse::days(int index) const {
  return days_.Get(index);
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::mutable_days(int index) {
  return days_.Mutable(index);
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::add_days() {
  return days_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >&
CMsgClientUGSGetGlobalStatsResponse::days() const {
  return days_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >*
CMsgClientUGSGetGlobalStatsResponse::mutable_days() {
  return &days_;
}

// -------------------------------------------------------------------

// CMsgClientRedeemGuestPass

// optional fixed64 guest_pass_id = 1;
inline bool CMsgClientRedeemGuestPass::has_guest_pass_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRedeemGuestPass::set_has_guest_pass_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRedeemGuestPass::clear_has_guest_pass_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRedeemGuestPass::clear_guest_pass_id() {
  guest_pass_id_ = GOOGLE_ULONGLONG(0);
  clear_has_guest_pass_id();
}
inline ::google::protobuf::uint64 CMsgClientRedeemGuestPass::guest_pass_id() const {
  return guest_pass_id_;
}
inline void CMsgClientRedeemGuestPass::set_guest_pass_id(::google::protobuf::uint64 value) {
  set_has_guest_pass_id();
  guest_pass_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientRedeemGuestPassResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientRedeemGuestPassResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRedeemGuestPassResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRedeemGuestPassResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRedeemGuestPassResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRedeemGuestPassResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientRedeemGuestPassResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 package_id = 2;
inline bool CMsgClientRedeemGuestPassResponse::has_package_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRedeemGuestPassResponse::set_has_package_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRedeemGuestPassResponse::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRedeemGuestPassResponse::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
inline ::google::protobuf::uint32 CMsgClientRedeemGuestPassResponse::package_id() const {
  return package_id_;
}
inline void CMsgClientRedeemGuestPassResponse::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
}

// optional uint32 must_own_appid = 3;
inline bool CMsgClientRedeemGuestPassResponse::has_must_own_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientRedeemGuestPassResponse::set_has_must_own_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientRedeemGuestPassResponse::clear_has_must_own_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientRedeemGuestPassResponse::clear_must_own_appid() {
  must_own_appid_ = 0u;
  clear_has_must_own_appid();
}
inline ::google::protobuf::uint32 CMsgClientRedeemGuestPassResponse::must_own_appid() const {
  return must_own_appid_;
}
inline void CMsgClientRedeemGuestPassResponse::set_must_own_appid(::google::protobuf::uint32 value) {
  set_has_must_own_appid();
  must_own_appid_ = value;
}

// -------------------------------------------------------------------

// CMsgClientGetClanActivityCounts

// repeated uint64 steamid_clans = 1;
inline int CMsgClientGetClanActivityCounts::steamid_clans_size() const {
  return steamid_clans_.size();
}
inline void CMsgClientGetClanActivityCounts::clear_steamid_clans() {
  steamid_clans_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientGetClanActivityCounts::steamid_clans(int index) const {
  return steamid_clans_.Get(index);
}
inline void CMsgClientGetClanActivityCounts::set_steamid_clans(int index, ::google::protobuf::uint64 value) {
  steamid_clans_.Set(index, value);
}
inline void CMsgClientGetClanActivityCounts::add_steamid_clans(::google::protobuf::uint64 value) {
  steamid_clans_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientGetClanActivityCounts::steamid_clans() const {
  return steamid_clans_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientGetClanActivityCounts::mutable_steamid_clans() {
  return &steamid_clans_;
}

// -------------------------------------------------------------------

// CMsgClientGetClanActivityCountsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientGetClanActivityCountsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetClanActivityCountsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetClanActivityCountsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetClanActivityCountsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientGetClanActivityCountsResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientGetClanActivityCountsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgClientOGSReportString

// optional bool accumulated = 1;
inline bool CMsgClientOGSReportString::has_accumulated() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientOGSReportString::set_has_accumulated() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientOGSReportString::clear_has_accumulated() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientOGSReportString::clear_accumulated() {
  accumulated_ = false;
  clear_has_accumulated();
}
inline bool CMsgClientOGSReportString::accumulated() const {
  return accumulated_;
}
inline void CMsgClientOGSReportString::set_accumulated(bool value) {
  set_has_accumulated();
  accumulated_ = value;
}

// optional uint64 sessionid = 2;
inline bool CMsgClientOGSReportString::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientOGSReportString::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientOGSReportString::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientOGSReportString::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 CMsgClientOGSReportString::sessionid() const {
  return sessionid_;
}
inline void CMsgClientOGSReportString::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// optional int32 severity = 3;
inline bool CMsgClientOGSReportString::has_severity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientOGSReportString::set_has_severity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientOGSReportString::clear_has_severity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientOGSReportString::clear_severity() {
  severity_ = 0;
  clear_has_severity();
}
inline ::google::protobuf::int32 CMsgClientOGSReportString::severity() const {
  return severity_;
}
inline void CMsgClientOGSReportString::set_severity(::google::protobuf::int32 value) {
  set_has_severity();
  severity_ = value;
}

// optional string formatter = 4;
inline bool CMsgClientOGSReportString::has_formatter() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientOGSReportString::set_has_formatter() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientOGSReportString::clear_has_formatter() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientOGSReportString::clear_formatter() {
  if (formatter_ != &::google::protobuf::internal::kEmptyString) {
    formatter_->clear();
  }
  clear_has_formatter();
}
inline const ::std::string& CMsgClientOGSReportString::formatter() const {
  return *formatter_;
}
inline void CMsgClientOGSReportString::set_formatter(const ::std::string& value) {
  set_has_formatter();
  if (formatter_ == &::google::protobuf::internal::kEmptyString) {
    formatter_ = new ::std::string;
  }
  formatter_->assign(value);
}
inline void CMsgClientOGSReportString::set_formatter(const char* value) {
  set_has_formatter();
  if (formatter_ == &::google::protobuf::internal::kEmptyString) {
    formatter_ = new ::std::string;
  }
  formatter_->assign(value);
}
inline void CMsgClientOGSReportString::set_formatter(const char* value, size_t size) {
  set_has_formatter();
  if (formatter_ == &::google::protobuf::internal::kEmptyString) {
    formatter_ = new ::std::string;
  }
  formatter_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientOGSReportString::mutable_formatter() {
  set_has_formatter();
  if (formatter_ == &::google::protobuf::internal::kEmptyString) {
    formatter_ = new ::std::string;
  }
  return formatter_;
}
inline ::std::string* CMsgClientOGSReportString::release_formatter() {
  clear_has_formatter();
  if (formatter_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = formatter_;
    formatter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientOGSReportString::set_allocated_formatter(::std::string* formatter) {
  if (formatter_ != &::google::protobuf::internal::kEmptyString) {
    delete formatter_;
  }
  if (formatter) {
    set_has_formatter();
    formatter_ = formatter;
  } else {
    clear_has_formatter();
    formatter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes varargs = 5;
inline bool CMsgClientOGSReportString::has_varargs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientOGSReportString::set_has_varargs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientOGSReportString::clear_has_varargs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientOGSReportString::clear_varargs() {
  if (varargs_ != &::google::protobuf::internal::kEmptyString) {
    varargs_->clear();
  }
  clear_has_varargs();
}
inline const ::std::string& CMsgClientOGSReportString::varargs() const {
  return *varargs_;
}
inline void CMsgClientOGSReportString::set_varargs(const ::std::string& value) {
  set_has_varargs();
  if (varargs_ == &::google::protobuf::internal::kEmptyString) {
    varargs_ = new ::std::string;
  }
  varargs_->assign(value);
}
inline void CMsgClientOGSReportString::set_varargs(const char* value) {
  set_has_varargs();
  if (varargs_ == &::google::protobuf::internal::kEmptyString) {
    varargs_ = new ::std::string;
  }
  varargs_->assign(value);
}
inline void CMsgClientOGSReportString::set_varargs(const void* value, size_t size) {
  set_has_varargs();
  if (varargs_ == &::google::protobuf::internal::kEmptyString) {
    varargs_ = new ::std::string;
  }
  varargs_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientOGSReportString::mutable_varargs() {
  set_has_varargs();
  if (varargs_ == &::google::protobuf::internal::kEmptyString) {
    varargs_ = new ::std::string;
  }
  return varargs_;
}
inline ::std::string* CMsgClientOGSReportString::release_varargs() {
  clear_has_varargs();
  if (varargs_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = varargs_;
    varargs_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientOGSReportString::set_allocated_varargs(::std::string* varargs) {
  if (varargs_ != &::google::protobuf::internal::kEmptyString) {
    delete varargs_;
  }
  if (varargs) {
    set_has_varargs();
    varargs_ = varargs;
  } else {
    clear_has_varargs();
    varargs_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientOGSReportBug

// optional uint64 sessionid = 1;
inline bool CMsgClientOGSReportBug::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientOGSReportBug::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientOGSReportBug::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientOGSReportBug::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
inline ::google::protobuf::uint64 CMsgClientOGSReportBug::sessionid() const {
  return sessionid_;
}
inline void CMsgClientOGSReportBug::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
}

// optional string bugtext = 2;
inline bool CMsgClientOGSReportBug::has_bugtext() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientOGSReportBug::set_has_bugtext() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientOGSReportBug::clear_has_bugtext() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientOGSReportBug::clear_bugtext() {
  if (bugtext_ != &::google::protobuf::internal::kEmptyString) {
    bugtext_->clear();
  }
  clear_has_bugtext();
}
inline const ::std::string& CMsgClientOGSReportBug::bugtext() const {
  return *bugtext_;
}
inline void CMsgClientOGSReportBug::set_bugtext(const ::std::string& value) {
  set_has_bugtext();
  if (bugtext_ == &::google::protobuf::internal::kEmptyString) {
    bugtext_ = new ::std::string;
  }
  bugtext_->assign(value);
}
inline void CMsgClientOGSReportBug::set_bugtext(const char* value) {
  set_has_bugtext();
  if (bugtext_ == &::google::protobuf::internal::kEmptyString) {
    bugtext_ = new ::std::string;
  }
  bugtext_->assign(value);
}
inline void CMsgClientOGSReportBug::set_bugtext(const char* value, size_t size) {
  set_has_bugtext();
  if (bugtext_ == &::google::protobuf::internal::kEmptyString) {
    bugtext_ = new ::std::string;
  }
  bugtext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientOGSReportBug::mutable_bugtext() {
  set_has_bugtext();
  if (bugtext_ == &::google::protobuf::internal::kEmptyString) {
    bugtext_ = new ::std::string;
  }
  return bugtext_;
}
inline ::std::string* CMsgClientOGSReportBug::release_bugtext() {
  clear_has_bugtext();
  if (bugtext_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bugtext_;
    bugtext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientOGSReportBug::set_allocated_bugtext(::std::string* bugtext) {
  if (bugtext_ != &::google::protobuf::internal::kEmptyString) {
    delete bugtext_;
  }
  if (bugtext) {
    set_has_bugtext();
    bugtext_ = bugtext;
  } else {
    clear_has_bugtext();
    bugtext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes screenshot = 3;
inline bool CMsgClientOGSReportBug::has_screenshot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientOGSReportBug::set_has_screenshot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientOGSReportBug::clear_has_screenshot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientOGSReportBug::clear_screenshot() {
  if (screenshot_ != &::google::protobuf::internal::kEmptyString) {
    screenshot_->clear();
  }
  clear_has_screenshot();
}
inline const ::std::string& CMsgClientOGSReportBug::screenshot() const {
  return *screenshot_;
}
inline void CMsgClientOGSReportBug::set_screenshot(const ::std::string& value) {
  set_has_screenshot();
  if (screenshot_ == &::google::protobuf::internal::kEmptyString) {
    screenshot_ = new ::std::string;
  }
  screenshot_->assign(value);
}
inline void CMsgClientOGSReportBug::set_screenshot(const char* value) {
  set_has_screenshot();
  if (screenshot_ == &::google::protobuf::internal::kEmptyString) {
    screenshot_ = new ::std::string;
  }
  screenshot_->assign(value);
}
inline void CMsgClientOGSReportBug::set_screenshot(const void* value, size_t size) {
  set_has_screenshot();
  if (screenshot_ == &::google::protobuf::internal::kEmptyString) {
    screenshot_ = new ::std::string;
  }
  screenshot_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientOGSReportBug::mutable_screenshot() {
  set_has_screenshot();
  if (screenshot_ == &::google::protobuf::internal::kEmptyString) {
    screenshot_ = new ::std::string;
  }
  return screenshot_;
}
inline ::std::string* CMsgClientOGSReportBug::release_screenshot() {
  clear_has_screenshot();
  if (screenshot_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = screenshot_;
    screenshot_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientOGSReportBug::set_allocated_screenshot(::std::string* screenshot) {
  if (screenshot_ != &::google::protobuf::internal::kEmptyString) {
    delete screenshot_;
  }
  if (screenshot) {
    set_has_screenshot();
    screenshot_ = screenshot;
  } else {
    clear_has_screenshot();
    screenshot_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientSentLogs

// -------------------------------------------------------------------

// CMsgGCClient

// optional uint32 appid = 1;
inline bool CMsgGCClient::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCClient::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCClient::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCClient::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgGCClient::appid() const {
  return appid_;
}
inline void CMsgGCClient::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint32 msgtype = 2;
inline bool CMsgGCClient::has_msgtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCClient::set_has_msgtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCClient::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCClient::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
inline ::google::protobuf::uint32 CMsgGCClient::msgtype() const {
  return msgtype_;
}
inline void CMsgGCClient::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
}

// optional bytes payload = 3;
inline bool CMsgGCClient::has_payload() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCClient::set_has_payload() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCClient::clear_has_payload() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCClient::clear_payload() {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    payload_->clear();
  }
  clear_has_payload();
}
inline const ::std::string& CMsgGCClient::payload() const {
  return *payload_;
}
inline void CMsgGCClient::set_payload(const ::std::string& value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void CMsgGCClient::set_payload(const char* value) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(value);
}
inline void CMsgGCClient::set_payload(const void* value, size_t size) {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  payload_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCClient::mutable_payload() {
  set_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    payload_ = new ::std::string;
  }
  return payload_;
}
inline ::std::string* CMsgGCClient::release_payload() {
  clear_has_payload();
  if (payload_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = payload_;
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCClient::set_allocated_payload(::std::string* payload) {
  if (payload_ != &::google::protobuf::internal::kEmptyString) {
    delete payload_;
  }
  if (payload) {
    set_has_payload();
    payload_ = payload;
  } else {
    clear_has_payload();
    payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional fixed64 steamid = 4;
inline bool CMsgGCClient::has_steamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCClient::set_has_steamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCClient::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCClient::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgGCClient::steamid() const {
  return steamid_;
}
inline void CMsgGCClient::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional string gcname = 5;
inline bool CMsgGCClient::has_gcname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCClient::set_has_gcname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCClient::clear_has_gcname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCClient::clear_gcname() {
  if (gcname_ != &::google::protobuf::internal::kEmptyString) {
    gcname_->clear();
  }
  clear_has_gcname();
}
inline const ::std::string& CMsgGCClient::gcname() const {
  return *gcname_;
}
inline void CMsgGCClient::set_gcname(const ::std::string& value) {
  set_has_gcname();
  if (gcname_ == &::google::protobuf::internal::kEmptyString) {
    gcname_ = new ::std::string;
  }
  gcname_->assign(value);
}
inline void CMsgGCClient::set_gcname(const char* value) {
  set_has_gcname();
  if (gcname_ == &::google::protobuf::internal::kEmptyString) {
    gcname_ = new ::std::string;
  }
  gcname_->assign(value);
}
inline void CMsgGCClient::set_gcname(const char* value, size_t size) {
  set_has_gcname();
  if (gcname_ == &::google::protobuf::internal::kEmptyString) {
    gcname_ = new ::std::string;
  }
  gcname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgGCClient::mutable_gcname() {
  set_has_gcname();
  if (gcname_ == &::google::protobuf::internal::kEmptyString) {
    gcname_ = new ::std::string;
  }
  return gcname_;
}
inline ::std::string* CMsgGCClient::release_gcname() {
  clear_has_gcname();
  if (gcname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gcname_;
    gcname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgGCClient::set_allocated_gcname(::std::string* gcname) {
  if (gcname_ != &::google::protobuf::internal::kEmptyString) {
    delete gcname_;
  }
  if (gcname) {
    set_has_gcname();
    gcname_ = gcname;
  } else {
    clear_has_gcname();
    gcname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 ip = 6;
inline bool CMsgGCClient::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCClient::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCClient::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCClient::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgGCClient::ip() const {
  return ip_;
}
inline void CMsgGCClient::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
}

// -------------------------------------------------------------------

// CMsgClientRequestFreeLicense

// repeated uint32 appids = 2;
inline int CMsgClientRequestFreeLicense::appids_size() const {
  return appids_.size();
}
inline void CMsgClientRequestFreeLicense::clear_appids() {
  appids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientRequestFreeLicense::appids(int index) const {
  return appids_.Get(index);
}
inline void CMsgClientRequestFreeLicense::set_appids(int index, ::google::protobuf::uint32 value) {
  appids_.Set(index, value);
}
inline void CMsgClientRequestFreeLicense::add_appids(::google::protobuf::uint32 value) {
  appids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientRequestFreeLicense::appids() const {
  return appids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientRequestFreeLicense::mutable_appids() {
  return &appids_;
}

// -------------------------------------------------------------------

// CMsgClientRequestFreeLicenseResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientRequestFreeLicenseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestFreeLicenseResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestFreeLicenseResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestFreeLicenseResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRequestFreeLicenseResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientRequestFreeLicenseResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// repeated uint32 granted_packageids = 2;
inline int CMsgClientRequestFreeLicenseResponse::granted_packageids_size() const {
  return granted_packageids_.size();
}
inline void CMsgClientRequestFreeLicenseResponse::clear_granted_packageids() {
  granted_packageids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientRequestFreeLicenseResponse::granted_packageids(int index) const {
  return granted_packageids_.Get(index);
}
inline void CMsgClientRequestFreeLicenseResponse::set_granted_packageids(int index, ::google::protobuf::uint32 value) {
  granted_packageids_.Set(index, value);
}
inline void CMsgClientRequestFreeLicenseResponse::add_granted_packageids(::google::protobuf::uint32 value) {
  granted_packageids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientRequestFreeLicenseResponse::granted_packageids() const {
  return granted_packageids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientRequestFreeLicenseResponse::mutable_granted_packageids() {
  return &granted_packageids_;
}

// repeated uint32 granted_appids = 3;
inline int CMsgClientRequestFreeLicenseResponse::granted_appids_size() const {
  return granted_appids_.size();
}
inline void CMsgClientRequestFreeLicenseResponse::clear_granted_appids() {
  granted_appids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientRequestFreeLicenseResponse::granted_appids(int index) const {
  return granted_appids_.Get(index);
}
inline void CMsgClientRequestFreeLicenseResponse::set_granted_appids(int index, ::google::protobuf::uint32 value) {
  granted_appids_.Set(index, value);
}
inline void CMsgClientRequestFreeLicenseResponse::add_granted_appids(::google::protobuf::uint32 value) {
  granted_appids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientRequestFreeLicenseResponse::granted_appids() const {
  return granted_appids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientRequestFreeLicenseResponse::mutable_granted_appids() {
  return &granted_appids_;
}

// -------------------------------------------------------------------

// CMsgDRMDownloadRequestWithCrashData

// optional uint32 download_flags = 1;
inline bool CMsgDRMDownloadRequestWithCrashData::has_download_flags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_download_flags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_download_flags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_download_flags() {
  download_flags_ = 0u;
  clear_has_download_flags();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadRequestWithCrashData::download_flags() const {
  return download_flags_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_download_flags(::google::protobuf::uint32 value) {
  set_has_download_flags();
  download_flags_ = value;
}

// optional uint32 download_types_known = 2;
inline bool CMsgDRMDownloadRequestWithCrashData::has_download_types_known() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_download_types_known() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_download_types_known() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_download_types_known() {
  download_types_known_ = 0u;
  clear_has_download_types_known();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadRequestWithCrashData::download_types_known() const {
  return download_types_known_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_download_types_known(::google::protobuf::uint32 value) {
  set_has_download_types_known();
  download_types_known_ = value;
}

// optional bytes guid_drm = 3;
inline bool CMsgDRMDownloadRequestWithCrashData::has_guid_drm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_guid_drm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_guid_drm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_guid_drm() {
  if (guid_drm_ != &::google::protobuf::internal::kEmptyString) {
    guid_drm_->clear();
  }
  clear_has_guid_drm();
}
inline const ::std::string& CMsgDRMDownloadRequestWithCrashData::guid_drm() const {
  return *guid_drm_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const ::std::string& value) {
  set_has_guid_drm();
  if (guid_drm_ == &::google::protobuf::internal::kEmptyString) {
    guid_drm_ = new ::std::string;
  }
  guid_drm_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const char* value) {
  set_has_guid_drm();
  if (guid_drm_ == &::google::protobuf::internal::kEmptyString) {
    guid_drm_ = new ::std::string;
  }
  guid_drm_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const void* value, size_t size) {
  set_has_guid_drm();
  if (guid_drm_ == &::google::protobuf::internal::kEmptyString) {
    guid_drm_ = new ::std::string;
  }
  guid_drm_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_drm() {
  set_has_guid_drm();
  if (guid_drm_ == &::google::protobuf::internal::kEmptyString) {
    guid_drm_ = new ::std::string;
  }
  return guid_drm_;
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_drm() {
  clear_has_guid_drm();
  if (guid_drm_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guid_drm_;
    guid_drm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_drm(::std::string* guid_drm) {
  if (guid_drm_ != &::google::protobuf::internal::kEmptyString) {
    delete guid_drm_;
  }
  if (guid_drm) {
    set_has_guid_drm();
    guid_drm_ = guid_drm;
  } else {
    clear_has_guid_drm();
    guid_drm_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes guid_split = 4;
inline bool CMsgDRMDownloadRequestWithCrashData::has_guid_split() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_guid_split() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_guid_split() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_guid_split() {
  if (guid_split_ != &::google::protobuf::internal::kEmptyString) {
    guid_split_->clear();
  }
  clear_has_guid_split();
}
inline const ::std::string& CMsgDRMDownloadRequestWithCrashData::guid_split() const {
  return *guid_split_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const ::std::string& value) {
  set_has_guid_split();
  if (guid_split_ == &::google::protobuf::internal::kEmptyString) {
    guid_split_ = new ::std::string;
  }
  guid_split_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const char* value) {
  set_has_guid_split();
  if (guid_split_ == &::google::protobuf::internal::kEmptyString) {
    guid_split_ = new ::std::string;
  }
  guid_split_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const void* value, size_t size) {
  set_has_guid_split();
  if (guid_split_ == &::google::protobuf::internal::kEmptyString) {
    guid_split_ = new ::std::string;
  }
  guid_split_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_split() {
  set_has_guid_split();
  if (guid_split_ == &::google::protobuf::internal::kEmptyString) {
    guid_split_ = new ::std::string;
  }
  return guid_split_;
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_split() {
  clear_has_guid_split();
  if (guid_split_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guid_split_;
    guid_split_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_split(::std::string* guid_split) {
  if (guid_split_ != &::google::protobuf::internal::kEmptyString) {
    delete guid_split_;
  }
  if (guid_split) {
    set_has_guid_split();
    guid_split_ = guid_split;
  } else {
    clear_has_guid_split();
    guid_split_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes guid_merge = 5;
inline bool CMsgDRMDownloadRequestWithCrashData::has_guid_merge() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_guid_merge() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_guid_merge() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_guid_merge() {
  if (guid_merge_ != &::google::protobuf::internal::kEmptyString) {
    guid_merge_->clear();
  }
  clear_has_guid_merge();
}
inline const ::std::string& CMsgDRMDownloadRequestWithCrashData::guid_merge() const {
  return *guid_merge_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const ::std::string& value) {
  set_has_guid_merge();
  if (guid_merge_ == &::google::protobuf::internal::kEmptyString) {
    guid_merge_ = new ::std::string;
  }
  guid_merge_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const char* value) {
  set_has_guid_merge();
  if (guid_merge_ == &::google::protobuf::internal::kEmptyString) {
    guid_merge_ = new ::std::string;
  }
  guid_merge_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const void* value, size_t size) {
  set_has_guid_merge();
  if (guid_merge_ == &::google::protobuf::internal::kEmptyString) {
    guid_merge_ = new ::std::string;
  }
  guid_merge_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_merge() {
  set_has_guid_merge();
  if (guid_merge_ == &::google::protobuf::internal::kEmptyString) {
    guid_merge_ = new ::std::string;
  }
  return guid_merge_;
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_merge() {
  clear_has_guid_merge();
  if (guid_merge_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guid_merge_;
    guid_merge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_merge(::std::string* guid_merge) {
  if (guid_merge_ != &::google::protobuf::internal::kEmptyString) {
    delete guid_merge_;
  }
  if (guid_merge) {
    set_has_guid_merge();
    guid_merge_ = guid_merge;
  } else {
    clear_has_guid_merge();
    guid_merge_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string module_name = 6;
inline bool CMsgDRMDownloadRequestWithCrashData::has_module_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_module_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_module_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_module_name() {
  if (module_name_ != &::google::protobuf::internal::kEmptyString) {
    module_name_->clear();
  }
  clear_has_module_name();
}
inline const ::std::string& CMsgDRMDownloadRequestWithCrashData::module_name() const {
  return *module_name_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(const ::std::string& value) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::kEmptyString) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(const char* value) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::kEmptyString) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(const char* value, size_t size) {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::kEmptyString) {
    module_name_ = new ::std::string;
  }
  module_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_module_name() {
  set_has_module_name();
  if (module_name_ == &::google::protobuf::internal::kEmptyString) {
    module_name_ = new ::std::string;
  }
  return module_name_;
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::release_module_name() {
  clear_has_module_name();
  if (module_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_name_;
    module_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_module_name(::std::string* module_name) {
  if (module_name_ != &::google::protobuf::internal::kEmptyString) {
    delete module_name_;
  }
  if (module_name) {
    set_has_module_name();
    module_name_ = module_name;
  } else {
    clear_has_module_name();
    module_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string module_path = 7;
inline bool CMsgDRMDownloadRequestWithCrashData::has_module_path() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_module_path() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_module_path() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_module_path() {
  if (module_path_ != &::google::protobuf::internal::kEmptyString) {
    module_path_->clear();
  }
  clear_has_module_path();
}
inline const ::std::string& CMsgDRMDownloadRequestWithCrashData::module_path() const {
  return *module_path_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(const ::std::string& value) {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  module_path_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(const char* value) {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  module_path_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(const char* value, size_t size) {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  module_path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_module_path() {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  return module_path_;
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::release_module_path() {
  clear_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_path_;
    module_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_module_path(::std::string* module_path) {
  if (module_path_ != &::google::protobuf::internal::kEmptyString) {
    delete module_path_;
  }
  if (module_path) {
    set_has_module_path();
    module_path_ = module_path;
  } else {
    clear_has_module_path();
    module_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes crash_data = 8;
inline bool CMsgDRMDownloadRequestWithCrashData::has_crash_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_has_crash_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_has_crash_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_crash_data() {
  if (crash_data_ != &::google::protobuf::internal::kEmptyString) {
    crash_data_->clear();
  }
  clear_has_crash_data();
}
inline const ::std::string& CMsgDRMDownloadRequestWithCrashData::crash_data() const {
  return *crash_data_;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const ::std::string& value) {
  set_has_crash_data();
  if (crash_data_ == &::google::protobuf::internal::kEmptyString) {
    crash_data_ = new ::std::string;
  }
  crash_data_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const char* value) {
  set_has_crash_data();
  if (crash_data_ == &::google::protobuf::internal::kEmptyString) {
    crash_data_ = new ::std::string;
  }
  crash_data_->assign(value);
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const void* value, size_t size) {
  set_has_crash_data();
  if (crash_data_ == &::google::protobuf::internal::kEmptyString) {
    crash_data_ = new ::std::string;
  }
  crash_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_crash_data() {
  set_has_crash_data();
  if (crash_data_ == &::google::protobuf::internal::kEmptyString) {
    crash_data_ = new ::std::string;
  }
  return crash_data_;
}
inline ::std::string* CMsgDRMDownloadRequestWithCrashData::release_crash_data() {
  clear_has_crash_data();
  if (crash_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = crash_data_;
    crash_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_crash_data(::std::string* crash_data) {
  if (crash_data_ != &::google::protobuf::internal::kEmptyString) {
    delete crash_data_;
  }
  if (crash_data) {
    set_has_crash_data();
    crash_data_ = crash_data;
  } else {
    clear_has_crash_data();
    crash_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgDRMDownloadResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDRMDownloadResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDRMDownloadResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDRMDownloadResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadResponse::eresult() const {
  return eresult_;
}
inline void CMsgDRMDownloadResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 app_id = 2;
inline bool CMsgDRMDownloadResponse::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDRMDownloadResponse::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDRMDownloadResponse::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadResponse::app_id() const {
  return app_id_;
}
inline void CMsgDRMDownloadResponse::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional uint32 blob_download_type = 3;
inline bool CMsgDRMDownloadResponse::has_blob_download_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_blob_download_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDRMDownloadResponse::clear_has_blob_download_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDRMDownloadResponse::clear_blob_download_type() {
  blob_download_type_ = 0u;
  clear_has_blob_download_type();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadResponse::blob_download_type() const {
  return blob_download_type_;
}
inline void CMsgDRMDownloadResponse::set_blob_download_type(::google::protobuf::uint32 value) {
  set_has_blob_download_type();
  blob_download_type_ = value;
}

// optional bytes merge_guid = 4;
inline bool CMsgDRMDownloadResponse::has_merge_guid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_merge_guid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDRMDownloadResponse::clear_has_merge_guid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDRMDownloadResponse::clear_merge_guid() {
  if (merge_guid_ != &::google::protobuf::internal::kEmptyString) {
    merge_guid_->clear();
  }
  clear_has_merge_guid();
}
inline const ::std::string& CMsgDRMDownloadResponse::merge_guid() const {
  return *merge_guid_;
}
inline void CMsgDRMDownloadResponse::set_merge_guid(const ::std::string& value) {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  merge_guid_->assign(value);
}
inline void CMsgDRMDownloadResponse::set_merge_guid(const char* value) {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  merge_guid_->assign(value);
}
inline void CMsgDRMDownloadResponse::set_merge_guid(const void* value, size_t size) {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  merge_guid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadResponse::mutable_merge_guid() {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  return merge_guid_;
}
inline ::std::string* CMsgDRMDownloadResponse::release_merge_guid() {
  clear_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = merge_guid_;
    merge_guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadResponse::set_allocated_merge_guid(::std::string* merge_guid) {
  if (merge_guid_ != &::google::protobuf::internal::kEmptyString) {
    delete merge_guid_;
  }
  if (merge_guid) {
    set_has_merge_guid();
    merge_guid_ = merge_guid;
  } else {
    clear_has_merge_guid();
    merge_guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 download_file_dfs_ip = 5;
inline bool CMsgDRMDownloadResponse::has_download_file_dfs_ip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_download_file_dfs_ip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDRMDownloadResponse::clear_has_download_file_dfs_ip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDRMDownloadResponse::clear_download_file_dfs_ip() {
  download_file_dfs_ip_ = 0u;
  clear_has_download_file_dfs_ip();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadResponse::download_file_dfs_ip() const {
  return download_file_dfs_ip_;
}
inline void CMsgDRMDownloadResponse::set_download_file_dfs_ip(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_ip();
  download_file_dfs_ip_ = value;
}

// optional uint32 download_file_dfs_port = 6;
inline bool CMsgDRMDownloadResponse::has_download_file_dfs_port() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_download_file_dfs_port() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDRMDownloadResponse::clear_has_download_file_dfs_port() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDRMDownloadResponse::clear_download_file_dfs_port() {
  download_file_dfs_port_ = 0u;
  clear_has_download_file_dfs_port();
}
inline ::google::protobuf::uint32 CMsgDRMDownloadResponse::download_file_dfs_port() const {
  return download_file_dfs_port_;
}
inline void CMsgDRMDownloadResponse::set_download_file_dfs_port(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_port();
  download_file_dfs_port_ = value;
}

// optional string download_file_url = 7;
inline bool CMsgDRMDownloadResponse::has_download_file_url() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_download_file_url() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDRMDownloadResponse::clear_has_download_file_url() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDRMDownloadResponse::clear_download_file_url() {
  if (download_file_url_ != &::google::protobuf::internal::kEmptyString) {
    download_file_url_->clear();
  }
  clear_has_download_file_url();
}
inline const ::std::string& CMsgDRMDownloadResponse::download_file_url() const {
  return *download_file_url_;
}
inline void CMsgDRMDownloadResponse::set_download_file_url(const ::std::string& value) {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  download_file_url_->assign(value);
}
inline void CMsgDRMDownloadResponse::set_download_file_url(const char* value) {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  download_file_url_->assign(value);
}
inline void CMsgDRMDownloadResponse::set_download_file_url(const char* value, size_t size) {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  download_file_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadResponse::mutable_download_file_url() {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  return download_file_url_;
}
inline ::std::string* CMsgDRMDownloadResponse::release_download_file_url() {
  clear_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = download_file_url_;
    download_file_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadResponse::set_allocated_download_file_url(::std::string* download_file_url) {
  if (download_file_url_ != &::google::protobuf::internal::kEmptyString) {
    delete download_file_url_;
  }
  if (download_file_url) {
    set_has_download_file_url();
    download_file_url_ = download_file_url;
  } else {
    clear_has_download_file_url();
    download_file_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string module_path = 8;
inline bool CMsgDRMDownloadResponse::has_module_path() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDRMDownloadResponse::set_has_module_path() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDRMDownloadResponse::clear_has_module_path() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDRMDownloadResponse::clear_module_path() {
  if (module_path_ != &::google::protobuf::internal::kEmptyString) {
    module_path_->clear();
  }
  clear_has_module_path();
}
inline const ::std::string& CMsgDRMDownloadResponse::module_path() const {
  return *module_path_;
}
inline void CMsgDRMDownloadResponse::set_module_path(const ::std::string& value) {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  module_path_->assign(value);
}
inline void CMsgDRMDownloadResponse::set_module_path(const char* value) {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  module_path_->assign(value);
}
inline void CMsgDRMDownloadResponse::set_module_path(const char* value, size_t size) {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  module_path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMDownloadResponse::mutable_module_path() {
  set_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    module_path_ = new ::std::string;
  }
  return module_path_;
}
inline ::std::string* CMsgDRMDownloadResponse::release_module_path() {
  clear_has_module_path();
  if (module_path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_path_;
    module_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMDownloadResponse::set_allocated_module_path(::std::string* module_path) {
  if (module_path_ != &::google::protobuf::internal::kEmptyString) {
    delete module_path_;
  }
  if (module_path) {
    set_has_module_path();
    module_path_ = module_path;
  } else {
    clear_has_module_path();
    module_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgDRMFinalResult

// optional uint32 eResult = 1 [default = 2];
inline bool CMsgDRMFinalResult::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDRMFinalResult::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDRMFinalResult::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDRMFinalResult::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDRMFinalResult::eresult() const {
  return eresult_;
}
inline void CMsgDRMFinalResult::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 app_id = 2;
inline bool CMsgDRMFinalResult::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDRMFinalResult::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDRMFinalResult::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDRMFinalResult::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgDRMFinalResult::app_id() const {
  return app_id_;
}
inline void CMsgDRMFinalResult::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional uint32 blob_download_type = 3;
inline bool CMsgDRMFinalResult::has_blob_download_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDRMFinalResult::set_has_blob_download_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDRMFinalResult::clear_has_blob_download_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDRMFinalResult::clear_blob_download_type() {
  blob_download_type_ = 0u;
  clear_has_blob_download_type();
}
inline ::google::protobuf::uint32 CMsgDRMFinalResult::blob_download_type() const {
  return blob_download_type_;
}
inline void CMsgDRMFinalResult::set_blob_download_type(::google::protobuf::uint32 value) {
  set_has_blob_download_type();
  blob_download_type_ = value;
}

// optional uint32 error_detail = 4;
inline bool CMsgDRMFinalResult::has_error_detail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDRMFinalResult::set_has_error_detail() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDRMFinalResult::clear_has_error_detail() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDRMFinalResult::clear_error_detail() {
  error_detail_ = 0u;
  clear_has_error_detail();
}
inline ::google::protobuf::uint32 CMsgDRMFinalResult::error_detail() const {
  return error_detail_;
}
inline void CMsgDRMFinalResult::set_error_detail(::google::protobuf::uint32 value) {
  set_has_error_detail();
  error_detail_ = value;
}

// optional bytes merge_guid = 5;
inline bool CMsgDRMFinalResult::has_merge_guid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDRMFinalResult::set_has_merge_guid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDRMFinalResult::clear_has_merge_guid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDRMFinalResult::clear_merge_guid() {
  if (merge_guid_ != &::google::protobuf::internal::kEmptyString) {
    merge_guid_->clear();
  }
  clear_has_merge_guid();
}
inline const ::std::string& CMsgDRMFinalResult::merge_guid() const {
  return *merge_guid_;
}
inline void CMsgDRMFinalResult::set_merge_guid(const ::std::string& value) {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  merge_guid_->assign(value);
}
inline void CMsgDRMFinalResult::set_merge_guid(const char* value) {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  merge_guid_->assign(value);
}
inline void CMsgDRMFinalResult::set_merge_guid(const void* value, size_t size) {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  merge_guid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMFinalResult::mutable_merge_guid() {
  set_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    merge_guid_ = new ::std::string;
  }
  return merge_guid_;
}
inline ::std::string* CMsgDRMFinalResult::release_merge_guid() {
  clear_has_merge_guid();
  if (merge_guid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = merge_guid_;
    merge_guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMFinalResult::set_allocated_merge_guid(::std::string* merge_guid) {
  if (merge_guid_ != &::google::protobuf::internal::kEmptyString) {
    delete merge_guid_;
  }
  if (merge_guid) {
    set_has_merge_guid();
    merge_guid_ = merge_guid;
  } else {
    clear_has_merge_guid();
    merge_guid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 download_file_dfs_ip = 6;
inline bool CMsgDRMFinalResult::has_download_file_dfs_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDRMFinalResult::set_has_download_file_dfs_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDRMFinalResult::clear_has_download_file_dfs_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDRMFinalResult::clear_download_file_dfs_ip() {
  download_file_dfs_ip_ = 0u;
  clear_has_download_file_dfs_ip();
}
inline ::google::protobuf::uint32 CMsgDRMFinalResult::download_file_dfs_ip() const {
  return download_file_dfs_ip_;
}
inline void CMsgDRMFinalResult::set_download_file_dfs_ip(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_ip();
  download_file_dfs_ip_ = value;
}

// optional uint32 download_file_dfs_port = 7;
inline bool CMsgDRMFinalResult::has_download_file_dfs_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDRMFinalResult::set_has_download_file_dfs_port() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDRMFinalResult::clear_has_download_file_dfs_port() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDRMFinalResult::clear_download_file_dfs_port() {
  download_file_dfs_port_ = 0u;
  clear_has_download_file_dfs_port();
}
inline ::google::protobuf::uint32 CMsgDRMFinalResult::download_file_dfs_port() const {
  return download_file_dfs_port_;
}
inline void CMsgDRMFinalResult::set_download_file_dfs_port(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_port();
  download_file_dfs_port_ = value;
}

// optional string download_file_url = 8;
inline bool CMsgDRMFinalResult::has_download_file_url() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDRMFinalResult::set_has_download_file_url() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDRMFinalResult::clear_has_download_file_url() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDRMFinalResult::clear_download_file_url() {
  if (download_file_url_ != &::google::protobuf::internal::kEmptyString) {
    download_file_url_->clear();
  }
  clear_has_download_file_url();
}
inline const ::std::string& CMsgDRMFinalResult::download_file_url() const {
  return *download_file_url_;
}
inline void CMsgDRMFinalResult::set_download_file_url(const ::std::string& value) {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  download_file_url_->assign(value);
}
inline void CMsgDRMFinalResult::set_download_file_url(const char* value) {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  download_file_url_->assign(value);
}
inline void CMsgDRMFinalResult::set_download_file_url(const char* value, size_t size) {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  download_file_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgDRMFinalResult::mutable_download_file_url() {
  set_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    download_file_url_ = new ::std::string;
  }
  return download_file_url_;
}
inline ::std::string* CMsgDRMFinalResult::release_download_file_url() {
  clear_has_download_file_url();
  if (download_file_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = download_file_url_;
    download_file_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgDRMFinalResult::set_allocated_download_file_url(::std::string* download_file_url) {
  if (download_file_url_ != &::google::protobuf::internal::kEmptyString) {
    delete download_file_url_;
  }
  if (download_file_url) {
    set_has_download_file_url();
    download_file_url_ = download_file_url;
  } else {
    clear_has_download_file_url();
    download_file_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientDPCheckSpecialSurvey

// optional uint32 survey_id = 1;
inline bool CMsgClientDPCheckSpecialSurvey::has_survey_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDPCheckSpecialSurvey::set_has_survey_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDPCheckSpecialSurvey::clear_has_survey_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDPCheckSpecialSurvey::clear_survey_id() {
  survey_id_ = 0u;
  clear_has_survey_id();
}
inline ::google::protobuf::uint32 CMsgClientDPCheckSpecialSurvey::survey_id() const {
  return survey_id_;
}
inline void CMsgClientDPCheckSpecialSurvey::set_survey_id(::google::protobuf::uint32 value) {
  set_has_survey_id();
  survey_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientDPCheckSpecialSurveyResponse

// optional uint32 eResult = 1 [default = 2];
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientDPCheckSpecialSurveyResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 state = 2;
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CMsgClientDPCheckSpecialSurveyResponse::state() const {
  return state_;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
}

// optional string name = 3;
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CMsgClientDPCheckSpecialSurveyResponse::name() const {
  return *name_;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CMsgClientDPCheckSpecialSurveyResponse::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string custom_url = 4;
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_custom_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_has_custom_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_has_custom_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_custom_url() {
  if (custom_url_ != &::google::protobuf::internal::kEmptyString) {
    custom_url_->clear();
  }
  clear_has_custom_url();
}
inline const ::std::string& CMsgClientDPCheckSpecialSurveyResponse::custom_url() const {
  return *custom_url_;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const ::std::string& value) {
  set_has_custom_url();
  if (custom_url_ == &::google::protobuf::internal::kEmptyString) {
    custom_url_ = new ::std::string;
  }
  custom_url_->assign(value);
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const char* value) {
  set_has_custom_url();
  if (custom_url_ == &::google::protobuf::internal::kEmptyString) {
    custom_url_ = new ::std::string;
  }
  custom_url_->assign(value);
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const char* value, size_t size) {
  set_has_custom_url();
  if (custom_url_ == &::google::protobuf::internal::kEmptyString) {
    custom_url_ = new ::std::string;
  }
  custom_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_custom_url() {
  set_has_custom_url();
  if (custom_url_ == &::google::protobuf::internal::kEmptyString) {
    custom_url_ = new ::std::string;
  }
  return custom_url_;
}
inline ::std::string* CMsgClientDPCheckSpecialSurveyResponse::release_custom_url() {
  clear_has_custom_url();
  if (custom_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = custom_url_;
    custom_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_custom_url(::std::string* custom_url) {
  if (custom_url_ != &::google::protobuf::internal::kEmptyString) {
    delete custom_url_;
  }
  if (custom_url) {
    set_has_custom_url();
    custom_url_ = custom_url;
  } else {
    clear_has_custom_url();
    custom_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool include_software = 5;
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_include_software() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_has_include_software() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_has_include_software() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_include_software() {
  include_software_ = false;
  clear_has_include_software();
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::include_software() const {
  return include_software_;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_include_software(bool value) {
  set_has_include_software();
  include_software_ = value;
}

// optional bytes token = 6;
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_token() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_has_token() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& CMsgClientDPCheckSpecialSurveyResponse::token() const {
  return *token_;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(const void* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* CMsgClientDPCheckSpecialSurveyResponse::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientDPSendSpecialSurveyResponse

// optional uint32 survey_id = 1;
inline bool CMsgClientDPSendSpecialSurveyResponse::has_survey_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_has_survey_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDPSendSpecialSurveyResponse::clear_has_survey_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDPSendSpecialSurveyResponse::clear_survey_id() {
  survey_id_ = 0u;
  clear_has_survey_id();
}
inline ::google::protobuf::uint32 CMsgClientDPSendSpecialSurveyResponse::survey_id() const {
  return survey_id_;
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_survey_id(::google::protobuf::uint32 value) {
  set_has_survey_id();
  survey_id_ = value;
}

// optional bytes data = 2;
inline bool CMsgClientDPSendSpecialSurveyResponse::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDPSendSpecialSurveyResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDPSendSpecialSurveyResponse::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& CMsgClientDPSendSpecialSurveyResponse::data() const {
  return *data_;
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientDPSendSpecialSurveyResponse::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* CMsgClientDPSendSpecialSurveyResponse::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientDPSendSpecialSurveyResponseReply

// optional uint32 eResult = 1 [default = 2];
inline bool CMsgClientDPSendSpecialSurveyResponseReply::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientDPSendSpecialSurveyResponseReply::eresult() const {
  return eresult_;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional bytes token = 2;
inline bool CMsgClientDPSendSpecialSurveyResponseReply::has_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_has_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::clear_has_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::clear_token() {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    token_->clear();
  }
  clear_has_token();
}
inline const ::std::string& CMsgClientDPSendSpecialSurveyResponseReply::token() const {
  return *token_;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const ::std::string& value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const char* value) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(value);
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const void* value, size_t size) {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientDPSendSpecialSurveyResponseReply::mutable_token() {
  set_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    token_ = new ::std::string;
  }
  return token_;
}
inline ::std::string* CMsgClientDPSendSpecialSurveyResponseReply::release_token() {
  clear_has_token();
  if (token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = token_;
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_allocated_token(::std::string* token) {
  if (token_ != &::google::protobuf::internal::kEmptyString) {
    delete token_;
  }
  if (token) {
    set_has_token();
    token_ = token;
  } else {
    clear_has_token();
    token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRequestForgottenPasswordEmail

// optional string account_name = 1;
inline bool CMsgClientRequestForgottenPasswordEmail::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestForgottenPasswordEmail::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestForgottenPasswordEmail::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestForgottenPasswordEmail::clear_account_name() {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    account_name_->clear();
  }
  clear_has_account_name();
}
inline const ::std::string& CMsgClientRequestForgottenPasswordEmail::account_name() const {
  return *account_name_;
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(const ::std::string& value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(const char* value) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(value);
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  account_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestForgottenPasswordEmail::mutable_account_name() {
  set_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    account_name_ = new ::std::string;
  }
  return account_name_;
}
inline ::std::string* CMsgClientRequestForgottenPasswordEmail::release_account_name() {
  clear_has_account_name();
  if (account_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_name_;
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestForgottenPasswordEmail::set_allocated_account_name(::std::string* account_name) {
  if (account_name_ != &::google::protobuf::internal::kEmptyString) {
    delete account_name_;
  }
  if (account_name) {
    set_has_account_name();
    account_name_ = account_name;
  } else {
    clear_has_account_name();
    account_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string password_tried = 2;
inline bool CMsgClientRequestForgottenPasswordEmail::has_password_tried() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRequestForgottenPasswordEmail::set_has_password_tried() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRequestForgottenPasswordEmail::clear_has_password_tried() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRequestForgottenPasswordEmail::clear_password_tried() {
  if (password_tried_ != &::google::protobuf::internal::kEmptyString) {
    password_tried_->clear();
  }
  clear_has_password_tried();
}
inline const ::std::string& CMsgClientRequestForgottenPasswordEmail::password_tried() const {
  return *password_tried_;
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const ::std::string& value) {
  set_has_password_tried();
  if (password_tried_ == &::google::protobuf::internal::kEmptyString) {
    password_tried_ = new ::std::string;
  }
  password_tried_->assign(value);
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const char* value) {
  set_has_password_tried();
  if (password_tried_ == &::google::protobuf::internal::kEmptyString) {
    password_tried_ = new ::std::string;
  }
  password_tried_->assign(value);
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const char* value, size_t size) {
  set_has_password_tried();
  if (password_tried_ == &::google::protobuf::internal::kEmptyString) {
    password_tried_ = new ::std::string;
  }
  password_tried_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientRequestForgottenPasswordEmail::mutable_password_tried() {
  set_has_password_tried();
  if (password_tried_ == &::google::protobuf::internal::kEmptyString) {
    password_tried_ = new ::std::string;
  }
  return password_tried_;
}
inline ::std::string* CMsgClientRequestForgottenPasswordEmail::release_password_tried() {
  clear_has_password_tried();
  if (password_tried_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_tried_;
    password_tried_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientRequestForgottenPasswordEmail::set_allocated_password_tried(::std::string* password_tried) {
  if (password_tried_ != &::google::protobuf::internal::kEmptyString) {
    delete password_tried_;
  }
  if (password_tried) {
    set_has_password_tried();
    password_tried_ = password_tried;
  } else {
    clear_has_password_tried();
    password_tried_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientRequestForgottenPasswordEmailResponse

// optional uint32 eResult = 1;
inline bool CMsgClientRequestForgottenPasswordEmailResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRequestForgottenPasswordEmailResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional bool use_secret_question = 2;
inline bool CMsgClientRequestForgottenPasswordEmailResponse::has_use_secret_question() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::set_has_use_secret_question() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::clear_has_use_secret_question() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::clear_use_secret_question() {
  use_secret_question_ = false;
  clear_has_use_secret_question();
}
inline bool CMsgClientRequestForgottenPasswordEmailResponse::use_secret_question() const {
  return use_secret_question_;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::set_use_secret_question(bool value) {
  set_has_use_secret_question();
  use_secret_question_ = value;
}

// -------------------------------------------------------------------

// CMsgClientItemAnnouncements_UnseenItem

// optional uint32 appid = 1;
inline bool CMsgClientItemAnnouncements_UnseenItem::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgClientItemAnnouncements_UnseenItem::appid() const {
  return appid_;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint64 context_id = 2;
inline bool CMsgClientItemAnnouncements_UnseenItem::has_context_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_has_context_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_has_context_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_context_id() {
  context_id_ = GOOGLE_ULONGLONG(0);
  clear_has_context_id();
}
inline ::google::protobuf::uint64 CMsgClientItemAnnouncements_UnseenItem::context_id() const {
  return context_id_;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_context_id(::google::protobuf::uint64 value) {
  set_has_context_id();
  context_id_ = value;
}

// optional uint64 asset_id = 3;
inline bool CMsgClientItemAnnouncements_UnseenItem::has_asset_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_has_asset_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_has_asset_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_asset_id() {
  asset_id_ = GOOGLE_ULONGLONG(0);
  clear_has_asset_id();
}
inline ::google::protobuf::uint64 CMsgClientItemAnnouncements_UnseenItem::asset_id() const {
  return asset_id_;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_asset_id(::google::protobuf::uint64 value) {
  set_has_asset_id();
  asset_id_ = value;
}

// optional uint64 amount = 4;
inline bool CMsgClientItemAnnouncements_UnseenItem::has_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_has_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_has_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_amount() {
  amount_ = GOOGLE_ULONGLONG(0);
  clear_has_amount();
}
inline ::google::protobuf::uint64 CMsgClientItemAnnouncements_UnseenItem::amount() const {
  return amount_;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_amount(::google::protobuf::uint64 value) {
  set_has_amount();
  amount_ = value;
}

// optional fixed32 rtime32_gained = 5;
inline bool CMsgClientItemAnnouncements_UnseenItem::has_rtime32_gained() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_has_rtime32_gained() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_has_rtime32_gained() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_rtime32_gained() {
  rtime32_gained_ = 0u;
  clear_has_rtime32_gained();
}
inline ::google::protobuf::uint32 CMsgClientItemAnnouncements_UnseenItem::rtime32_gained() const {
  return rtime32_gained_;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_rtime32_gained(::google::protobuf::uint32 value) {
  set_has_rtime32_gained();
  rtime32_gained_ = value;
}

// optional uint32 source_appid = 6;
inline bool CMsgClientItemAnnouncements_UnseenItem::has_source_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_has_source_appid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_has_source_appid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_source_appid() {
  source_appid_ = 0u;
  clear_has_source_appid();
}
inline ::google::protobuf::uint32 CMsgClientItemAnnouncements_UnseenItem::source_appid() const {
  return source_appid_;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_source_appid(::google::protobuf::uint32 value) {
  set_has_source_appid();
  source_appid_ = value;
}

// -------------------------------------------------------------------

// CMsgClientItemAnnouncements

// optional uint32 count_new_items = 1;
inline bool CMsgClientItemAnnouncements::has_count_new_items() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientItemAnnouncements::set_has_count_new_items() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientItemAnnouncements::clear_has_count_new_items() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientItemAnnouncements::clear_count_new_items() {
  count_new_items_ = 0u;
  clear_has_count_new_items();
}
inline ::google::protobuf::uint32 CMsgClientItemAnnouncements::count_new_items() const {
  return count_new_items_;
}
inline void CMsgClientItemAnnouncements::set_count_new_items(::google::protobuf::uint32 value) {
  set_has_count_new_items();
  count_new_items_ = value;
}

// repeated .CMsgClientItemAnnouncements.UnseenItem unseen_items = 2;
inline int CMsgClientItemAnnouncements::unseen_items_size() const {
  return unseen_items_.size();
}
inline void CMsgClientItemAnnouncements::clear_unseen_items() {
  unseen_items_.Clear();
}
inline const ::CMsgClientItemAnnouncements_UnseenItem& CMsgClientItemAnnouncements::unseen_items(int index) const {
  return unseen_items_.Get(index);
}
inline ::CMsgClientItemAnnouncements_UnseenItem* CMsgClientItemAnnouncements::mutable_unseen_items(int index) {
  return unseen_items_.Mutable(index);
}
inline ::CMsgClientItemAnnouncements_UnseenItem* CMsgClientItemAnnouncements::add_unseen_items() {
  return unseen_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >&
CMsgClientItemAnnouncements::unseen_items() const {
  return unseen_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >*
CMsgClientItemAnnouncements::mutable_unseen_items() {
  return &unseen_items_;
}

// -------------------------------------------------------------------

// CMsgClientRequestItemAnnouncements

// -------------------------------------------------------------------

// CMsgClientUserNotifications_Notification

// optional uint32 user_notification_type = 1;
inline bool CMsgClientUserNotifications_Notification::has_user_notification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUserNotifications_Notification::set_has_user_notification_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUserNotifications_Notification::clear_has_user_notification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUserNotifications_Notification::clear_user_notification_type() {
  user_notification_type_ = 0u;
  clear_has_user_notification_type();
}
inline ::google::protobuf::uint32 CMsgClientUserNotifications_Notification::user_notification_type() const {
  return user_notification_type_;
}
inline void CMsgClientUserNotifications_Notification::set_user_notification_type(::google::protobuf::uint32 value) {
  set_has_user_notification_type();
  user_notification_type_ = value;
}

// optional uint32 count = 2;
inline bool CMsgClientUserNotifications_Notification::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUserNotifications_Notification::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUserNotifications_Notification::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUserNotifications_Notification::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CMsgClientUserNotifications_Notification::count() const {
  return count_;
}
inline void CMsgClientUserNotifications_Notification::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// CMsgClientUserNotifications

// repeated .CMsgClientUserNotifications.Notification notifications = 1;
inline int CMsgClientUserNotifications::notifications_size() const {
  return notifications_.size();
}
inline void CMsgClientUserNotifications::clear_notifications() {
  notifications_.Clear();
}
inline const ::CMsgClientUserNotifications_Notification& CMsgClientUserNotifications::notifications(int index) const {
  return notifications_.Get(index);
}
inline ::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::mutable_notifications(int index) {
  return notifications_.Mutable(index);
}
inline ::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::add_notifications() {
  return notifications_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >&
CMsgClientUserNotifications::notifications() const {
  return notifications_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >*
CMsgClientUserNotifications::mutable_notifications() {
  return &notifications_;
}

// -------------------------------------------------------------------

// CMsgClientCommentNotifications

// optional uint32 count_new_comments = 1;
inline bool CMsgClientCommentNotifications::has_count_new_comments() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCommentNotifications::set_has_count_new_comments() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCommentNotifications::clear_has_count_new_comments() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCommentNotifications::clear_count_new_comments() {
  count_new_comments_ = 0u;
  clear_has_count_new_comments();
}
inline ::google::protobuf::uint32 CMsgClientCommentNotifications::count_new_comments() const {
  return count_new_comments_;
}
inline void CMsgClientCommentNotifications::set_count_new_comments(::google::protobuf::uint32 value) {
  set_has_count_new_comments();
  count_new_comments_ = value;
}

// optional uint32 count_new_comments_owner = 2;
inline bool CMsgClientCommentNotifications::has_count_new_comments_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientCommentNotifications::set_has_count_new_comments_owner() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientCommentNotifications::clear_has_count_new_comments_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientCommentNotifications::clear_count_new_comments_owner() {
  count_new_comments_owner_ = 0u;
  clear_has_count_new_comments_owner();
}
inline ::google::protobuf::uint32 CMsgClientCommentNotifications::count_new_comments_owner() const {
  return count_new_comments_owner_;
}
inline void CMsgClientCommentNotifications::set_count_new_comments_owner(::google::protobuf::uint32 value) {
  set_has_count_new_comments_owner();
  count_new_comments_owner_ = value;
}

// optional uint32 count_new_comments_subscriptions = 3;
inline bool CMsgClientCommentNotifications::has_count_new_comments_subscriptions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientCommentNotifications::set_has_count_new_comments_subscriptions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientCommentNotifications::clear_has_count_new_comments_subscriptions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientCommentNotifications::clear_count_new_comments_subscriptions() {
  count_new_comments_subscriptions_ = 0u;
  clear_has_count_new_comments_subscriptions();
}
inline ::google::protobuf::uint32 CMsgClientCommentNotifications::count_new_comments_subscriptions() const {
  return count_new_comments_subscriptions_;
}
inline void CMsgClientCommentNotifications::set_count_new_comments_subscriptions(::google::protobuf::uint32 value) {
  set_has_count_new_comments_subscriptions();
  count_new_comments_subscriptions_ = value;
}

// -------------------------------------------------------------------

// CMsgClientRequestCommentNotifications

// -------------------------------------------------------------------

// CMsgClientOfflineMessageNotification

// optional uint32 offline_messages = 1;
inline bool CMsgClientOfflineMessageNotification::has_offline_messages() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientOfflineMessageNotification::set_has_offline_messages() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientOfflineMessageNotification::clear_has_offline_messages() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientOfflineMessageNotification::clear_offline_messages() {
  offline_messages_ = 0u;
  clear_has_offline_messages();
}
inline ::google::protobuf::uint32 CMsgClientOfflineMessageNotification::offline_messages() const {
  return offline_messages_;
}
inline void CMsgClientOfflineMessageNotification::set_offline_messages(::google::protobuf::uint32 value) {
  set_has_offline_messages();
  offline_messages_ = value;
}

// repeated uint32 friends_with_offline_messages = 2;
inline int CMsgClientOfflineMessageNotification::friends_with_offline_messages_size() const {
  return friends_with_offline_messages_.size();
}
inline void CMsgClientOfflineMessageNotification::clear_friends_with_offline_messages() {
  friends_with_offline_messages_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientOfflineMessageNotification::friends_with_offline_messages(int index) const {
  return friends_with_offline_messages_.Get(index);
}
inline void CMsgClientOfflineMessageNotification::set_friends_with_offline_messages(int index, ::google::protobuf::uint32 value) {
  friends_with_offline_messages_.Set(index, value);
}
inline void CMsgClientOfflineMessageNotification::add_friends_with_offline_messages(::google::protobuf::uint32 value) {
  friends_with_offline_messages_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientOfflineMessageNotification::friends_with_offline_messages() const {
  return friends_with_offline_messages_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientOfflineMessageNotification::mutable_friends_with_offline_messages() {
  return &friends_with_offline_messages_;
}

// -------------------------------------------------------------------

// CMsgClientRequestOfflineMessageCount

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistory

// optional fixed64 steamid = 1;
inline bool CMsgClientChatGetFriendMessageHistory::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistory::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientChatGetFriendMessageHistory::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientChatGetFriendMessageHistory::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientChatGetFriendMessageHistory::steamid() const {
  return steamid_;
}
inline void CMsgClientChatGetFriendMessageHistory::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage

// optional uint32 accountid = 1;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::accountid() const {
  return accountid_;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 timestamp = 2;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::timestamp() const {
  return timestamp_;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
}

// optional string message = 3;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_message() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::message() const {
  return *message_;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(value);
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    message_ = new ::std::string;
  }
  return message_;
}
inline ::std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool unread = 4;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_unread() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_unread() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_unread() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_unread() {
  unread_ = false;
  clear_has_unread();
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::unread() const {
  return unread_;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_unread(bool value) {
  set_has_unread();
  unread_ = value;
}

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistoryResponse

// optional fixed64 steamid = 1;
inline bool CMsgClientChatGetFriendMessageHistoryResponse::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientChatGetFriendMessageHistoryResponse::steamid() const {
  return steamid_;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
}

// optional uint32 success = 2;
inline bool CMsgClientChatGetFriendMessageHistoryResponse::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_success() {
  success_ = 0u;
  clear_has_success();
}
inline ::google::protobuf::uint32 CMsgClientChatGetFriendMessageHistoryResponse::success() const {
  return success_;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::set_success(::google::protobuf::uint32 value) {
  set_has_success();
  success_ = value;
}

// repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
inline int CMsgClientChatGetFriendMessageHistoryResponse::messages_size() const {
  return messages_.size();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_messages() {
  messages_.Clear();
}
inline const ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse::messages(int index) const {
  return messages_.Get(index);
}
inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::mutable_messages(int index) {
  return messages_.Mutable(index);
}
inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::add_messages() {
  return messages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >&
CMsgClientChatGetFriendMessageHistoryResponse::messages() const {
  return messages_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >*
CMsgClientChatGetFriendMessageHistoryResponse::mutable_messages() {
  return &messages_;
}

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistoryForOfflineMessages

// -------------------------------------------------------------------

// CMsgClientFSGetFriendsSteamLevels

// repeated uint32 accountids = 1;
inline int CMsgClientFSGetFriendsSteamLevels::accountids_size() const {
  return accountids_.size();
}
inline void CMsgClientFSGetFriendsSteamLevels::clear_accountids() {
  accountids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientFSGetFriendsSteamLevels::accountids(int index) const {
  return accountids_.Get(index);
}
inline void CMsgClientFSGetFriendsSteamLevels::set_accountids(int index, ::google::protobuf::uint32 value) {
  accountids_.Set(index, value);
}
inline void CMsgClientFSGetFriendsSteamLevels::add_accountids(::google::protobuf::uint32 value) {
  accountids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientFSGetFriendsSteamLevels::accountids() const {
  return accountids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientFSGetFriendsSteamLevels::mutable_accountids() {
  return &accountids_;
}

// -------------------------------------------------------------------

// CMsgClientFSGetFriendsSteamLevelsResponse_Friend

// optional uint32 accountid = 1;
inline bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::accountid() const {
  return accountid_;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
}

// optional uint32 level = 2;
inline bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::level() const {
  return level_;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// CMsgClientFSGetFriendsSteamLevelsResponse

// repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
inline int CMsgClientFSGetFriendsSteamLevelsResponse::friends_size() const {
  return friends_.size();
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse::clear_friends() {
  friends_.Clear();
}
inline const ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse::friends(int index) const {
  return friends_.Get(index);
}
inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >&
CMsgClientFSGetFriendsSteamLevelsResponse::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >*
CMsgClientFSGetFriendsSteamLevelsResponse::mutable_friends() {
  return &friends_;
}

// -------------------------------------------------------------------

// CMsgClientEmailAddrInfo

// optional string email_address = 1;
inline bool CMsgClientEmailAddrInfo::has_email_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientEmailAddrInfo::set_has_email_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientEmailAddrInfo::clear_has_email_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientEmailAddrInfo::clear_email_address() {
  if (email_address_ != &::google::protobuf::internal::kEmptyString) {
    email_address_->clear();
  }
  clear_has_email_address();
}
inline const ::std::string& CMsgClientEmailAddrInfo::email_address() const {
  return *email_address_;
}
inline void CMsgClientEmailAddrInfo::set_email_address(const ::std::string& value) {
  set_has_email_address();
  if (email_address_ == &::google::protobuf::internal::kEmptyString) {
    email_address_ = new ::std::string;
  }
  email_address_->assign(value);
}
inline void CMsgClientEmailAddrInfo::set_email_address(const char* value) {
  set_has_email_address();
  if (email_address_ == &::google::protobuf::internal::kEmptyString) {
    email_address_ = new ::std::string;
  }
  email_address_->assign(value);
}
inline void CMsgClientEmailAddrInfo::set_email_address(const char* value, size_t size) {
  set_has_email_address();
  if (email_address_ == &::google::protobuf::internal::kEmptyString) {
    email_address_ = new ::std::string;
  }
  email_address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientEmailAddrInfo::mutable_email_address() {
  set_has_email_address();
  if (email_address_ == &::google::protobuf::internal::kEmptyString) {
    email_address_ = new ::std::string;
  }
  return email_address_;
}
inline ::std::string* CMsgClientEmailAddrInfo::release_email_address() {
  clear_has_email_address();
  if (email_address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = email_address_;
    email_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientEmailAddrInfo::set_allocated_email_address(::std::string* email_address) {
  if (email_address_ != &::google::protobuf::internal::kEmptyString) {
    delete email_address_;
  }
  if (email_address) {
    set_has_email_address();
    email_address_ = email_address;
  } else {
    clear_has_email_address();
    email_address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool email_is_validated = 2;
inline bool CMsgClientEmailAddrInfo::has_email_is_validated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientEmailAddrInfo::set_has_email_is_validated() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientEmailAddrInfo::clear_has_email_is_validated() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientEmailAddrInfo::clear_email_is_validated() {
  email_is_validated_ = false;
  clear_has_email_is_validated();
}
inline bool CMsgClientEmailAddrInfo::email_is_validated() const {
  return email_is_validated_;
}
inline void CMsgClientEmailAddrInfo::set_email_is_validated(bool value) {
  set_has_email_is_validated();
  email_is_validated_ = value;
}

// optional bool email_validation_changed = 3;
inline bool CMsgClientEmailAddrInfo::has_email_validation_changed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientEmailAddrInfo::set_has_email_validation_changed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientEmailAddrInfo::clear_has_email_validation_changed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientEmailAddrInfo::clear_email_validation_changed() {
  email_validation_changed_ = false;
  clear_has_email_validation_changed();
}
inline bool CMsgClientEmailAddrInfo::email_validation_changed() const {
  return email_validation_changed_;
}
inline void CMsgClientEmailAddrInfo::set_email_validation_changed(bool value) {
  set_has_email_validation_changed();
  email_validation_changed_ = value;
}

// optional bool credential_change_requires_code = 4;
inline bool CMsgClientEmailAddrInfo::has_credential_change_requires_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientEmailAddrInfo::set_has_credential_change_requires_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientEmailAddrInfo::clear_has_credential_change_requires_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientEmailAddrInfo::clear_credential_change_requires_code() {
  credential_change_requires_code_ = false;
  clear_has_credential_change_requires_code();
}
inline bool CMsgClientEmailAddrInfo::credential_change_requires_code() const {
  return credential_change_requires_code_;
}
inline void CMsgClientEmailAddrInfo::set_credential_change_requires_code(bool value) {
  set_has_credential_change_requires_code();
  credential_change_requires_code_ = value;
}

// optional bool password_or_secretqa_change_requires_code = 5;
inline bool CMsgClientEmailAddrInfo::has_password_or_secretqa_change_requires_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientEmailAddrInfo::set_has_password_or_secretqa_change_requires_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientEmailAddrInfo::clear_has_password_or_secretqa_change_requires_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientEmailAddrInfo::clear_password_or_secretqa_change_requires_code() {
  password_or_secretqa_change_requires_code_ = false;
  clear_has_password_or_secretqa_change_requires_code();
}
inline bool CMsgClientEmailAddrInfo::password_or_secretqa_change_requires_code() const {
  return password_or_secretqa_change_requires_code_;
}
inline void CMsgClientEmailAddrInfo::set_password_or_secretqa_change_requires_code(bool value) {
  set_has_password_or_secretqa_change_requires_code();
  password_or_secretqa_change_requires_code_ = value;
}

// optional bool remind_user_about_email = 6;
inline bool CMsgClientEmailAddrInfo::has_remind_user_about_email() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientEmailAddrInfo::set_has_remind_user_about_email() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientEmailAddrInfo::clear_has_remind_user_about_email() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientEmailAddrInfo::clear_remind_user_about_email() {
  remind_user_about_email_ = false;
  clear_has_remind_user_about_email();
}
inline bool CMsgClientEmailAddrInfo::remind_user_about_email() const {
  return remind_user_about_email_;
}
inline void CMsgClientEmailAddrInfo::set_remind_user_about_email(bool value) {
  set_has_remind_user_about_email();
  remind_user_about_email_ = value;
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummary_PublishedFileId

// optional fixed64 published_file_id = 1;
inline bool CMsgCREItemVoteSummary_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREItemVoteSummary_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREItemVoteSummary_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREItemVoteSummary_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
inline ::google::protobuf::uint64 CMsgCREItemVoteSummary_PublishedFileId::published_file_id() const {
  return published_file_id_;
}
inline void CMsgCREItemVoteSummary_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummary

// repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
inline int CMsgCREItemVoteSummary::published_file_ids_size() const {
  return published_file_ids_.size();
}
inline void CMsgCREItemVoteSummary::clear_published_file_ids() {
  published_file_ids_.Clear();
}
inline const ::CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary::published_file_ids(int index) const {
  return published_file_ids_.Get(index);
}
inline ::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::mutable_published_file_ids(int index) {
  return published_file_ids_.Mutable(index);
}
inline ::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::add_published_file_ids() {
  return published_file_ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >&
CMsgCREItemVoteSummary::published_file_ids() const {
  return published_file_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >*
CMsgCREItemVoteSummary::mutable_published_file_ids() {
  return &published_file_ids_;
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummaryResponse_ItemVoteSummary

// optional fixed64 published_file_id = 1;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
inline ::google::protobuf::uint64 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::published_file_id() const {
  return published_file_id_;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
}

// optional int32 votes_for = 2;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_votes_for() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_votes_for() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_votes_for() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_votes_for() {
  votes_for_ = 0;
  clear_has_votes_for();
}
inline ::google::protobuf::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::votes_for() const {
  return votes_for_;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_votes_for(::google::protobuf::int32 value) {
  set_has_votes_for();
  votes_for_ = value;
}

// optional int32 votes_against = 3;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_votes_against() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_votes_against() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_votes_against() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_votes_against() {
  votes_against_ = 0;
  clear_has_votes_against();
}
inline ::google::protobuf::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::votes_against() const {
  return votes_against_;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_votes_against(::google::protobuf::int32 value) {
  set_has_votes_against();
  votes_against_ = value;
}

// optional int32 reports = 4;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_reports() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_reports() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_reports() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_reports() {
  reports_ = 0;
  clear_has_reports();
}
inline ::google::protobuf::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::reports() const {
  return reports_;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_reports(::google::protobuf::int32 value) {
  set_has_reports();
  reports_ = value;
}

// optional float score = 5;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline float CMsgCREItemVoteSummaryResponse_ItemVoteSummary::score() const {
  return score_;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_score(float value) {
  set_has_score();
  score_ = value;
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummaryResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgCREItemVoteSummaryResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREItemVoteSummaryResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREItemVoteSummaryResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREItemVoteSummaryResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgCREItemVoteSummaryResponse::eresult() const {
  return eresult_;
}
inline void CMsgCREItemVoteSummaryResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
inline int CMsgCREItemVoteSummaryResponse::item_vote_summaries_size() const {
  return item_vote_summaries_.size();
}
inline void CMsgCREItemVoteSummaryResponse::clear_item_vote_summaries() {
  item_vote_summaries_.Clear();
}
inline const ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse::item_vote_summaries(int index) const {
  return item_vote_summaries_.Get(index);
}
inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::mutable_item_vote_summaries(int index) {
  return item_vote_summaries_.Mutable(index);
}
inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::add_item_vote_summaries() {
  return item_vote_summaries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >&
CMsgCREItemVoteSummaryResponse::item_vote_summaries() const {
  return item_vote_summaries_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >*
CMsgCREItemVoteSummaryResponse::mutable_item_vote_summaries() {
  return &item_vote_summaries_;
}

// -------------------------------------------------------------------

// CMsgCREUpdateUserPublishedItemVote

// optional fixed64 published_file_id = 1;
inline bool CMsgCREUpdateUserPublishedItemVote::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREUpdateUserPublishedItemVote::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREUpdateUserPublishedItemVote::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREUpdateUserPublishedItemVote::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
inline ::google::protobuf::uint64 CMsgCREUpdateUserPublishedItemVote::published_file_id() const {
  return published_file_id_;
}
inline void CMsgCREUpdateUserPublishedItemVote::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
}

// optional bool vote_up = 2;
inline bool CMsgCREUpdateUserPublishedItemVote::has_vote_up() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCREUpdateUserPublishedItemVote::set_has_vote_up() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCREUpdateUserPublishedItemVote::clear_has_vote_up() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCREUpdateUserPublishedItemVote::clear_vote_up() {
  vote_up_ = false;
  clear_has_vote_up();
}
inline bool CMsgCREUpdateUserPublishedItemVote::vote_up() const {
  return vote_up_;
}
inline void CMsgCREUpdateUserPublishedItemVote::set_vote_up(bool value) {
  set_has_vote_up();
  vote_up_ = value;
}

// -------------------------------------------------------------------

// CMsgCREUpdateUserPublishedItemVoteResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgCREUpdateUserPublishedItemVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgCREUpdateUserPublishedItemVoteResponse::eresult() const {
  return eresult_;
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId

// optional fixed64 published_file_id = 1;
inline bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
inline ::google::protobuf::uint64 CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::published_file_id() const {
  return published_file_id_;
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetails

// repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
inline int CMsgCREGetUserPublishedItemVoteDetails::published_file_ids_size() const {
  return published_file_ids_.size();
}
inline void CMsgCREGetUserPublishedItemVoteDetails::clear_published_file_ids() {
  published_file_ids_.Clear();
}
inline const ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails::published_file_ids(int index) const {
  return published_file_ids_.Get(index);
}
inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::mutable_published_file_ids(int index) {
  return published_file_ids_.Mutable(index);
}
inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::add_published_file_ids() {
  return published_file_ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >&
CMsgCREGetUserPublishedItemVoteDetails::published_file_ids() const {
  return published_file_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >*
CMsgCREGetUserPublishedItemVoteDetails::mutable_published_file_ids() {
  return &published_file_ids_;
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail

// optional fixed64 published_file_id = 1;
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
inline ::google::protobuf::uint64 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::published_file_id() const {
  return published_file_id_;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
}

// optional int32 vote = 2 [default = 0];
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::google::protobuf::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::vote() const {
  return vote_;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_vote(::google::protobuf::int32 value) {
  set_has_vote();
  vote_ = value;
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetailsResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse::eresult() const {
  return eresult_;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
inline int CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details_size() const {
  return user_item_vote_details_.size();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_user_item_vote_details() {
  user_item_vote_details_.Clear();
}
inline const ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details(int index) const {
  return user_item_vote_details_.Get(index);
}
inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::mutable_user_item_vote_details(int index) {
  return user_item_vote_details_.Mutable(index);
}
inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::add_user_item_vote_details() {
  return user_item_vote_details_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >&
CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details() const {
  return user_item_vote_details_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >*
CMsgCREGetUserPublishedItemVoteDetailsResponse::mutable_user_item_vote_details() {
  return &user_item_vote_details_;
}

// -------------------------------------------------------------------

// CMsgFSGetFollowerCount

// optional fixed64 steam_id = 1;
inline bool CMsgFSGetFollowerCount::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFSGetFollowerCount::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFSGetFollowerCount::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFSGetFollowerCount::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgFSGetFollowerCount::steam_id() const {
  return steam_id_;
}
inline void CMsgFSGetFollowerCount::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgFSGetFollowerCountResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgFSGetFollowerCountResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFSGetFollowerCountResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFSGetFollowerCountResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFSGetFollowerCountResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgFSGetFollowerCountResponse::eresult() const {
  return eresult_;
}
inline void CMsgFSGetFollowerCountResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 count = 2 [default = 0];
inline bool CMsgFSGetFollowerCountResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFSGetFollowerCountResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFSGetFollowerCountResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFSGetFollowerCountResponse::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CMsgFSGetFollowerCountResponse::count() const {
  return count_;
}
inline void CMsgFSGetFollowerCountResponse::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// CMsgFSGetIsFollowing

// optional fixed64 steam_id = 1;
inline bool CMsgFSGetIsFollowing::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFSGetIsFollowing::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFSGetIsFollowing::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFSGetIsFollowing::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgFSGetIsFollowing::steam_id() const {
  return steam_id_;
}
inline void CMsgFSGetIsFollowing::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
}

// -------------------------------------------------------------------

// CMsgFSGetIsFollowingResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgFSGetIsFollowingResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFSGetIsFollowingResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFSGetIsFollowingResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFSGetIsFollowingResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgFSGetIsFollowingResponse::eresult() const {
  return eresult_;
}
inline void CMsgFSGetIsFollowingResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional bool is_following = 2 [default = false];
inline bool CMsgFSGetIsFollowingResponse::has_is_following() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFSGetIsFollowingResponse::set_has_is_following() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFSGetIsFollowingResponse::clear_has_is_following() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFSGetIsFollowingResponse::clear_is_following() {
  is_following_ = false;
  clear_has_is_following();
}
inline bool CMsgFSGetIsFollowingResponse::is_following() const {
  return is_following_;
}
inline void CMsgFSGetIsFollowingResponse::set_is_following(bool value) {
  set_has_is_following();
  is_following_ = value;
}

// -------------------------------------------------------------------

// CMsgFSEnumerateFollowingList

// optional uint32 start_index = 1;
inline bool CMsgFSEnumerateFollowingList::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFSEnumerateFollowingList::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFSEnumerateFollowingList::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFSEnumerateFollowingList::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
inline ::google::protobuf::uint32 CMsgFSEnumerateFollowingList::start_index() const {
  return start_index_;
}
inline void CMsgFSEnumerateFollowingList::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
}

// -------------------------------------------------------------------

// CMsgFSEnumerateFollowingListResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgFSEnumerateFollowingListResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFSEnumerateFollowingListResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFSEnumerateFollowingListResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFSEnumerateFollowingListResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgFSEnumerateFollowingListResponse::eresult() const {
  return eresult_;
}
inline void CMsgFSEnumerateFollowingListResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 total_results = 2;
inline bool CMsgFSEnumerateFollowingListResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFSEnumerateFollowingListResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFSEnumerateFollowingListResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFSEnumerateFollowingListResponse::clear_total_results() {
  total_results_ = 0;
  clear_has_total_results();
}
inline ::google::protobuf::int32 CMsgFSEnumerateFollowingListResponse::total_results() const {
  return total_results_;
}
inline void CMsgFSEnumerateFollowingListResponse::set_total_results(::google::protobuf::int32 value) {
  set_has_total_results();
  total_results_ = value;
}

// repeated fixed64 steam_ids = 3;
inline int CMsgFSEnumerateFollowingListResponse::steam_ids_size() const {
  return steam_ids_.size();
}
inline void CMsgFSEnumerateFollowingListResponse::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgFSEnumerateFollowingListResponse::steam_ids(int index) const {
  return steam_ids_.Get(index);
}
inline void CMsgFSEnumerateFollowingListResponse::set_steam_ids(int index, ::google::protobuf::uint64 value) {
  steam_ids_.Set(index, value);
}
inline void CMsgFSEnumerateFollowingListResponse::add_steam_ids(::google::protobuf::uint64 value) {
  steam_ids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgFSEnumerateFollowingListResponse::steam_ids() const {
  return steam_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgFSEnumerateFollowingListResponse::mutable_steam_ids() {
  return &steam_ids_;
}

// -------------------------------------------------------------------

// CMsgDPGetNumberOfCurrentPlayers

// optional uint32 appid = 1;
inline bool CMsgDPGetNumberOfCurrentPlayers::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPGetNumberOfCurrentPlayers::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDPGetNumberOfCurrentPlayers::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDPGetNumberOfCurrentPlayers::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgDPGetNumberOfCurrentPlayers::appid() const {
  return appid_;
}
inline void CMsgDPGetNumberOfCurrentPlayers::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// -------------------------------------------------------------------

// CMsgDPGetNumberOfCurrentPlayersResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgDPGetNumberOfCurrentPlayersResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgDPGetNumberOfCurrentPlayersResponse::eresult() const {
  return eresult_;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 player_count = 2;
inline bool CMsgDPGetNumberOfCurrentPlayersResponse::has_player_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::set_has_player_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::clear_player_count() {
  player_count_ = 0;
  clear_has_player_count();
}
inline ::google::protobuf::int32 CMsgDPGetNumberOfCurrentPlayersResponse::player_count() const {
  return player_count_;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::set_player_count(::google::protobuf::int32 value) {
  set_has_player_count();
  player_count_ = value;
}

// -------------------------------------------------------------------

// CMsgClientFriendUserStatusPublished

// optional fixed64 friend_steamid = 1;
inline bool CMsgClientFriendUserStatusPublished::has_friend_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendUserStatusPublished::set_has_friend_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendUserStatusPublished::clear_has_friend_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendUserStatusPublished::clear_friend_steamid() {
  friend_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_steamid();
}
inline ::google::protobuf::uint64 CMsgClientFriendUserStatusPublished::friend_steamid() const {
  return friend_steamid_;
}
inline void CMsgClientFriendUserStatusPublished::set_friend_steamid(::google::protobuf::uint64 value) {
  set_has_friend_steamid();
  friend_steamid_ = value;
}

// optional uint32 appid = 2;
inline bool CMsgClientFriendUserStatusPublished::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendUserStatusPublished::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendUserStatusPublished::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendUserStatusPublished::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgClientFriendUserStatusPublished::appid() const {
  return appid_;
}
inline void CMsgClientFriendUserStatusPublished::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional string status_text = 3;
inline bool CMsgClientFriendUserStatusPublished::has_status_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientFriendUserStatusPublished::set_has_status_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientFriendUserStatusPublished::clear_has_status_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientFriendUserStatusPublished::clear_status_text() {
  if (status_text_ != &::google::protobuf::internal::kEmptyString) {
    status_text_->clear();
  }
  clear_has_status_text();
}
inline const ::std::string& CMsgClientFriendUserStatusPublished::status_text() const {
  return *status_text_;
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(const ::std::string& value) {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::kEmptyString) {
    status_text_ = new ::std::string;
  }
  status_text_->assign(value);
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(const char* value) {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::kEmptyString) {
    status_text_ = new ::std::string;
  }
  status_text_->assign(value);
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(const char* value, size_t size) {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::kEmptyString) {
    status_text_ = new ::std::string;
  }
  status_text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientFriendUserStatusPublished::mutable_status_text() {
  set_has_status_text();
  if (status_text_ == &::google::protobuf::internal::kEmptyString) {
    status_text_ = new ::std::string;
  }
  return status_text_;
}
inline ::std::string* CMsgClientFriendUserStatusPublished::release_status_text() {
  clear_has_status_text();
  if (status_text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = status_text_;
    status_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientFriendUserStatusPublished::set_allocated_status_text(::std::string* status_text) {
  if (status_text_ != &::google::protobuf::internal::kEmptyString) {
    delete status_text_;
  }
  if (status_text) {
    set_has_status_text();
    status_text_ = status_text;
  } else {
    clear_has_status_text();
    status_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientServiceMethodLegacy

// optional string method_name = 1;
inline bool CMsgClientServiceMethodLegacy::has_method_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientServiceMethodLegacy::set_has_method_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientServiceMethodLegacy::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientServiceMethodLegacy::clear_method_name() {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    method_name_->clear();
  }
  clear_has_method_name();
}
inline const ::std::string& CMsgClientServiceMethodLegacy::method_name() const {
  return *method_name_;
}
inline void CMsgClientServiceMethodLegacy::set_method_name(const ::std::string& value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgClientServiceMethodLegacy::set_method_name(const char* value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgClientServiceMethodLegacy::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceMethodLegacy::mutable_method_name() {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  return method_name_;
}
inline ::std::string* CMsgClientServiceMethodLegacy::release_method_name() {
  clear_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = method_name_;
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceMethodLegacy::set_allocated_method_name(::std::string* method_name) {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    delete method_name_;
  }
  if (method_name) {
    set_has_method_name();
    method_name_ = method_name;
  } else {
    clear_has_method_name();
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes serialized_method = 2;
inline bool CMsgClientServiceMethodLegacy::has_serialized_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientServiceMethodLegacy::set_has_serialized_method() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientServiceMethodLegacy::clear_has_serialized_method() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientServiceMethodLegacy::clear_serialized_method() {
  if (serialized_method_ != &::google::protobuf::internal::kEmptyString) {
    serialized_method_->clear();
  }
  clear_has_serialized_method();
}
inline const ::std::string& CMsgClientServiceMethodLegacy::serialized_method() const {
  return *serialized_method_;
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(const ::std::string& value) {
  set_has_serialized_method();
  if (serialized_method_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_ = new ::std::string;
  }
  serialized_method_->assign(value);
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(const char* value) {
  set_has_serialized_method();
  if (serialized_method_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_ = new ::std::string;
  }
  serialized_method_->assign(value);
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(const void* value, size_t size) {
  set_has_serialized_method();
  if (serialized_method_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_ = new ::std::string;
  }
  serialized_method_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceMethodLegacy::mutable_serialized_method() {
  set_has_serialized_method();
  if (serialized_method_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_ = new ::std::string;
  }
  return serialized_method_;
}
inline ::std::string* CMsgClientServiceMethodLegacy::release_serialized_method() {
  clear_has_serialized_method();
  if (serialized_method_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialized_method_;
    serialized_method_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceMethodLegacy::set_allocated_serialized_method(::std::string* serialized_method) {
  if (serialized_method_ != &::google::protobuf::internal::kEmptyString) {
    delete serialized_method_;
  }
  if (serialized_method) {
    set_has_serialized_method();
    serialized_method_ = serialized_method;
  } else {
    clear_has_serialized_method();
    serialized_method_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool is_notification = 3;
inline bool CMsgClientServiceMethodLegacy::has_is_notification() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientServiceMethodLegacy::set_has_is_notification() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientServiceMethodLegacy::clear_has_is_notification() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientServiceMethodLegacy::clear_is_notification() {
  is_notification_ = false;
  clear_has_is_notification();
}
inline bool CMsgClientServiceMethodLegacy::is_notification() const {
  return is_notification_;
}
inline void CMsgClientServiceMethodLegacy::set_is_notification(bool value) {
  set_has_is_notification();
  is_notification_ = value;
}

// -------------------------------------------------------------------

// CMsgClientServiceMethodLegacyResponse

// optional string method_name = 1;
inline bool CMsgClientServiceMethodLegacyResponse::has_method_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientServiceMethodLegacyResponse::set_has_method_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientServiceMethodLegacyResponse::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientServiceMethodLegacyResponse::clear_method_name() {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    method_name_->clear();
  }
  clear_has_method_name();
}
inline const ::std::string& CMsgClientServiceMethodLegacyResponse::method_name() const {
  return *method_name_;
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(const ::std::string& value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(const char* value) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(value);
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  method_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceMethodLegacyResponse::mutable_method_name() {
  set_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    method_name_ = new ::std::string;
  }
  return method_name_;
}
inline ::std::string* CMsgClientServiceMethodLegacyResponse::release_method_name() {
  clear_has_method_name();
  if (method_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = method_name_;
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceMethodLegacyResponse::set_allocated_method_name(::std::string* method_name) {
  if (method_name_ != &::google::protobuf::internal::kEmptyString) {
    delete method_name_;
  }
  if (method_name) {
    set_has_method_name();
    method_name_ = method_name;
  } else {
    clear_has_method_name();
    method_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes serialized_method_response = 2;
inline bool CMsgClientServiceMethodLegacyResponse::has_serialized_method_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientServiceMethodLegacyResponse::set_has_serialized_method_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientServiceMethodLegacyResponse::clear_has_serialized_method_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientServiceMethodLegacyResponse::clear_serialized_method_response() {
  if (serialized_method_response_ != &::google::protobuf::internal::kEmptyString) {
    serialized_method_response_->clear();
  }
  clear_has_serialized_method_response();
}
inline const ::std::string& CMsgClientServiceMethodLegacyResponse::serialized_method_response() const {
  return *serialized_method_response_;
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(const ::std::string& value) {
  set_has_serialized_method_response();
  if (serialized_method_response_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_response_ = new ::std::string;
  }
  serialized_method_response_->assign(value);
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(const char* value) {
  set_has_serialized_method_response();
  if (serialized_method_response_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_response_ = new ::std::string;
  }
  serialized_method_response_->assign(value);
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(const void* value, size_t size) {
  set_has_serialized_method_response();
  if (serialized_method_response_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_response_ = new ::std::string;
  }
  serialized_method_response_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceMethodLegacyResponse::mutable_serialized_method_response() {
  set_has_serialized_method_response();
  if (serialized_method_response_ == &::google::protobuf::internal::kEmptyString) {
    serialized_method_response_ = new ::std::string;
  }
  return serialized_method_response_;
}
inline ::std::string* CMsgClientServiceMethodLegacyResponse::release_serialized_method_response() {
  clear_has_serialized_method_response();
  if (serialized_method_response_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialized_method_response_;
    serialized_method_response_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceMethodLegacyResponse::set_allocated_serialized_method_response(::std::string* serialized_method_response) {
  if (serialized_method_response_ != &::google::protobuf::internal::kEmptyString) {
    delete serialized_method_response_;
  }
  if (serialized_method_response) {
    set_has_serialized_method_response();
    serialized_method_response_ = serialized_method_response;
  } else {
    clear_has_serialized_method_response();
    serialized_method_response_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientUIMode

// optional uint32 uimode = 1;
inline bool CMsgClientUIMode::has_uimode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUIMode::set_has_uimode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUIMode::clear_has_uimode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUIMode::clear_uimode() {
  uimode_ = 0u;
  clear_has_uimode();
}
inline ::google::protobuf::uint32 CMsgClientUIMode::uimode() const {
  return uimode_;
}
inline void CMsgClientUIMode::set_uimode(::google::protobuf::uint32 value) {
  set_has_uimode();
  uimode_ = value;
}

// optional uint32 chat_mode = 2;
inline bool CMsgClientUIMode::has_chat_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUIMode::set_has_chat_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUIMode::clear_has_chat_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUIMode::clear_chat_mode() {
  chat_mode_ = 0u;
  clear_has_chat_mode();
}
inline ::google::protobuf::uint32 CMsgClientUIMode::chat_mode() const {
  return chat_mode_;
}
inline void CMsgClientUIMode::set_chat_mode(::google::protobuf::uint32 value) {
  set_has_chat_mode();
  chat_mode_ = value;
}

// -------------------------------------------------------------------

// CMsgClientVanityURLChangedNotification

// optional string vanity_url = 1;
inline bool CMsgClientVanityURLChangedNotification::has_vanity_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientVanityURLChangedNotification::set_has_vanity_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientVanityURLChangedNotification::clear_has_vanity_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientVanityURLChangedNotification::clear_vanity_url() {
  if (vanity_url_ != &::google::protobuf::internal::kEmptyString) {
    vanity_url_->clear();
  }
  clear_has_vanity_url();
}
inline const ::std::string& CMsgClientVanityURLChangedNotification::vanity_url() const {
  return *vanity_url_;
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(const ::std::string& value) {
  set_has_vanity_url();
  if (vanity_url_ == &::google::protobuf::internal::kEmptyString) {
    vanity_url_ = new ::std::string;
  }
  vanity_url_->assign(value);
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(const char* value) {
  set_has_vanity_url();
  if (vanity_url_ == &::google::protobuf::internal::kEmptyString) {
    vanity_url_ = new ::std::string;
  }
  vanity_url_->assign(value);
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(const char* value, size_t size) {
  set_has_vanity_url();
  if (vanity_url_ == &::google::protobuf::internal::kEmptyString) {
    vanity_url_ = new ::std::string;
  }
  vanity_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientVanityURLChangedNotification::mutable_vanity_url() {
  set_has_vanity_url();
  if (vanity_url_ == &::google::protobuf::internal::kEmptyString) {
    vanity_url_ = new ::std::string;
  }
  return vanity_url_;
}
inline ::std::string* CMsgClientVanityURLChangedNotification::release_vanity_url() {
  clear_has_vanity_url();
  if (vanity_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = vanity_url_;
    vanity_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientVanityURLChangedNotification::set_allocated_vanity_url(::std::string* vanity_url) {
  if (vanity_url_ != &::google::protobuf::internal::kEmptyString) {
    delete vanity_url_;
  }
  if (vanity_url) {
    set_has_vanity_url();
    vanity_url_ = vanity_url;
  } else {
    clear_has_vanity_url();
    vanity_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientAuthorizeLocalDeviceRequest

// optional string device_description = 1;
inline bool CMsgClientAuthorizeLocalDeviceRequest::has_device_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_has_device_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_has_device_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_device_description() {
  if (device_description_ != &::google::protobuf::internal::kEmptyString) {
    device_description_->clear();
  }
  clear_has_device_description();
}
inline const ::std::string& CMsgClientAuthorizeLocalDeviceRequest::device_description() const {
  return *device_description_;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const ::std::string& value) {
  set_has_device_description();
  if (device_description_ == &::google::protobuf::internal::kEmptyString) {
    device_description_ = new ::std::string;
  }
  device_description_->assign(value);
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const char* value) {
  set_has_device_description();
  if (device_description_ == &::google::protobuf::internal::kEmptyString) {
    device_description_ = new ::std::string;
  }
  device_description_->assign(value);
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const char* value, size_t size) {
  set_has_device_description();
  if (device_description_ == &::google::protobuf::internal::kEmptyString) {
    device_description_ = new ::std::string;
  }
  device_description_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientAuthorizeLocalDeviceRequest::mutable_device_description() {
  set_has_device_description();
  if (device_description_ == &::google::protobuf::internal::kEmptyString) {
    device_description_ = new ::std::string;
  }
  return device_description_;
}
inline ::std::string* CMsgClientAuthorizeLocalDeviceRequest::release_device_description() {
  clear_has_device_description();
  if (device_description_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_description_;
    device_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_allocated_device_description(::std::string* device_description) {
  if (device_description_ != &::google::protobuf::internal::kEmptyString) {
    delete device_description_;
  }
  if (device_description) {
    set_has_device_description();
    device_description_ = device_description;
  } else {
    clear_has_device_description();
    device_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 owner_account_id = 2;
inline bool CMsgClientAuthorizeLocalDeviceRequest::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
inline ::google::protobuf::uint32 CMsgClientAuthorizeLocalDeviceRequest::owner_account_id() const {
  return owner_account_id_;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
}

// optional uint64 local_device_token = 3;
inline bool CMsgClientAuthorizeLocalDeviceRequest::has_local_device_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_has_local_device_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_has_local_device_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_local_device_token() {
  local_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_local_device_token();
}
inline ::google::protobuf::uint64 CMsgClientAuthorizeLocalDeviceRequest::local_device_token() const {
  return local_device_token_;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_local_device_token(::google::protobuf::uint64 value) {
  set_has_local_device_token();
  local_device_token_ = value;
}

// -------------------------------------------------------------------

// CMsgClientAuthorizeLocalDevice

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientAuthorizeLocalDevice::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAuthorizeLocalDevice::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAuthorizeLocalDevice::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAuthorizeLocalDevice::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientAuthorizeLocalDevice::eresult() const {
  return eresult_;
}
inline void CMsgClientAuthorizeLocalDevice::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 owner_account_id = 2;
inline bool CMsgClientAuthorizeLocalDevice::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientAuthorizeLocalDevice::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientAuthorizeLocalDevice::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientAuthorizeLocalDevice::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
inline ::google::protobuf::uint32 CMsgClientAuthorizeLocalDevice::owner_account_id() const {
  return owner_account_id_;
}
inline void CMsgClientAuthorizeLocalDevice::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
}

// optional uint64 authed_device_token = 3;
inline bool CMsgClientAuthorizeLocalDevice::has_authed_device_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientAuthorizeLocalDevice::set_has_authed_device_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientAuthorizeLocalDevice::clear_has_authed_device_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientAuthorizeLocalDevice::clear_authed_device_token() {
  authed_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_authed_device_token();
}
inline ::google::protobuf::uint64 CMsgClientAuthorizeLocalDevice::authed_device_token() const {
  return authed_device_token_;
}
inline void CMsgClientAuthorizeLocalDevice::set_authed_device_token(::google::protobuf::uint64 value) {
  set_has_authed_device_token();
  authed_device_token_ = value;
}

// -------------------------------------------------------------------

// CMsgClientAuthorizeLocalDeviceNotification

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientAuthorizeLocalDeviceNotification::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientAuthorizeLocalDeviceNotification::eresult() const {
  return eresult_;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 owner_account_id = 2;
inline bool CMsgClientAuthorizeLocalDeviceNotification::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
inline ::google::protobuf::uint32 CMsgClientAuthorizeLocalDeviceNotification::owner_account_id() const {
  return owner_account_id_;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
}

// optional uint64 local_device_token = 3;
inline bool CMsgClientAuthorizeLocalDeviceNotification::has_local_device_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_has_local_device_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_has_local_device_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_local_device_token() {
  local_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_local_device_token();
}
inline ::google::protobuf::uint64 CMsgClientAuthorizeLocalDeviceNotification::local_device_token() const {
  return local_device_token_;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_local_device_token(::google::protobuf::uint64 value) {
  set_has_local_device_token();
  local_device_token_ = value;
}

// -------------------------------------------------------------------

// CMsgClientDeauthorizeDeviceRequest

// optional uint32 deauthorization_account_id = 1;
inline bool CMsgClientDeauthorizeDeviceRequest::has_deauthorization_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDeauthorizeDeviceRequest::set_has_deauthorization_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDeauthorizeDeviceRequest::clear_has_deauthorization_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDeauthorizeDeviceRequest::clear_deauthorization_account_id() {
  deauthorization_account_id_ = 0u;
  clear_has_deauthorization_account_id();
}
inline ::google::protobuf::uint32 CMsgClientDeauthorizeDeviceRequest::deauthorization_account_id() const {
  return deauthorization_account_id_;
}
inline void CMsgClientDeauthorizeDeviceRequest::set_deauthorization_account_id(::google::protobuf::uint32 value) {
  set_has_deauthorization_account_id();
  deauthorization_account_id_ = value;
}

// optional uint64 deauthorization_device_token = 2;
inline bool CMsgClientDeauthorizeDeviceRequest::has_deauthorization_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDeauthorizeDeviceRequest::set_has_deauthorization_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDeauthorizeDeviceRequest::clear_has_deauthorization_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDeauthorizeDeviceRequest::clear_deauthorization_device_token() {
  deauthorization_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_deauthorization_device_token();
}
inline ::google::protobuf::uint64 CMsgClientDeauthorizeDeviceRequest::deauthorization_device_token() const {
  return deauthorization_device_token_;
}
inline void CMsgClientDeauthorizeDeviceRequest::set_deauthorization_device_token(::google::protobuf::uint64 value) {
  set_has_deauthorization_device_token();
  deauthorization_device_token_ = value;
}

// -------------------------------------------------------------------

// CMsgClientDeauthorizeDevice

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientDeauthorizeDevice::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDeauthorizeDevice::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDeauthorizeDevice::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDeauthorizeDevice::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientDeauthorizeDevice::eresult() const {
  return eresult_;
}
inline void CMsgClientDeauthorizeDevice::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional uint32 deauthorization_account_id = 2;
inline bool CMsgClientDeauthorizeDevice::has_deauthorization_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDeauthorizeDevice::set_has_deauthorization_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDeauthorizeDevice::clear_has_deauthorization_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDeauthorizeDevice::clear_deauthorization_account_id() {
  deauthorization_account_id_ = 0u;
  clear_has_deauthorization_account_id();
}
inline ::google::protobuf::uint32 CMsgClientDeauthorizeDevice::deauthorization_account_id() const {
  return deauthorization_account_id_;
}
inline void CMsgClientDeauthorizeDevice::set_deauthorization_account_id(::google::protobuf::uint32 value) {
  set_has_deauthorization_account_id();
  deauthorization_account_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientUseLocalDeviceAuthorizations_DeviceToken

// optional uint32 owner_account_id = 1;
inline bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
inline ::google::protobuf::uint32 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::owner_account_id() const {
  return owner_account_id_;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
}

// optional uint64 token_id = 2;
inline bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::has_token_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_has_token_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_has_token_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_token_id() {
  token_id_ = GOOGLE_ULONGLONG(0);
  clear_has_token_id();
}
inline ::google::protobuf::uint64 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::token_id() const {
  return token_id_;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_token_id(::google::protobuf::uint64 value) {
  set_has_token_id();
  token_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientUseLocalDeviceAuthorizations

// repeated uint32 authorization_account_id = 1;
inline int CMsgClientUseLocalDeviceAuthorizations::authorization_account_id_size() const {
  return authorization_account_id_.size();
}
inline void CMsgClientUseLocalDeviceAuthorizations::clear_authorization_account_id() {
  authorization_account_id_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientUseLocalDeviceAuthorizations::authorization_account_id(int index) const {
  return authorization_account_id_.Get(index);
}
inline void CMsgClientUseLocalDeviceAuthorizations::set_authorization_account_id(int index, ::google::protobuf::uint32 value) {
  authorization_account_id_.Set(index, value);
}
inline void CMsgClientUseLocalDeviceAuthorizations::add_authorization_account_id(::google::protobuf::uint32 value) {
  authorization_account_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientUseLocalDeviceAuthorizations::authorization_account_id() const {
  return authorization_account_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientUseLocalDeviceAuthorizations::mutable_authorization_account_id() {
  return &authorization_account_id_;
}

// repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
inline int CMsgClientUseLocalDeviceAuthorizations::device_tokens_size() const {
  return device_tokens_.size();
}
inline void CMsgClientUseLocalDeviceAuthorizations::clear_device_tokens() {
  device_tokens_.Clear();
}
inline const ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations::device_tokens(int index) const {
  return device_tokens_.Get(index);
}
inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::mutable_device_tokens(int index) {
  return device_tokens_.Mutable(index);
}
inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::add_device_tokens() {
  return device_tokens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >&
CMsgClientUseLocalDeviceAuthorizations::device_tokens() const {
  return device_tokens_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >*
CMsgClientUseLocalDeviceAuthorizations::mutable_device_tokens() {
  return &device_tokens_;
}

// -------------------------------------------------------------------

// CMsgClientGetAuthorizedDevices

// -------------------------------------------------------------------

// CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice

// optional uint64 auth_device_token = 1;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
inline ::google::protobuf::uint64 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::auth_device_token() const {
  return auth_device_token_;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
}

// optional string device_name = 2;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_device_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_device_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_device_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_device_name() {
  if (device_name_ != &::google::protobuf::internal::kEmptyString) {
    device_name_->clear();
  }
  clear_has_device_name();
}
inline const ::std::string& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::device_name() const {
  return *device_name_;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const ::std::string& value) {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::kEmptyString) {
    device_name_ = new ::std::string;
  }
  device_name_->assign(value);
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const char* value) {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::kEmptyString) {
    device_name_ = new ::std::string;
  }
  device_name_->assign(value);
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const char* value, size_t size) {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::kEmptyString) {
    device_name_ = new ::std::string;
  }
  device_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::mutable_device_name() {
  set_has_device_name();
  if (device_name_ == &::google::protobuf::internal::kEmptyString) {
    device_name_ = new ::std::string;
  }
  return device_name_;
}
inline ::std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::release_device_name() {
  clear_has_device_name();
  if (device_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = device_name_;
    device_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_allocated_device_name(::std::string* device_name) {
  if (device_name_ != &::google::protobuf::internal::kEmptyString) {
    delete device_name_;
  }
  if (device_name) {
    set_has_device_name();
    device_name_ = device_name;
  } else {
    clear_has_device_name();
    device_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 last_access_time = 3;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_last_access_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_last_access_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_last_access_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_last_access_time() {
  last_access_time_ = 0u;
  clear_has_last_access_time();
}
inline ::google::protobuf::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::last_access_time() const {
  return last_access_time_;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_last_access_time(::google::protobuf::uint32 value) {
  set_has_last_access_time();
  last_access_time_ = value;
}

// optional uint32 borrower_id = 4;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_borrower_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_borrower_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_borrower_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_borrower_id() {
  borrower_id_ = 0u;
  clear_has_borrower_id();
}
inline ::google::protobuf::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::borrower_id() const {
  return borrower_id_;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_borrower_id(::google::protobuf::uint32 value) {
  set_has_borrower_id();
  borrower_id_ = value;
}

// optional bool is_pending = 5;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_is_pending() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_is_pending() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_is_pending() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_is_pending() {
  is_pending_ = false;
  clear_has_is_pending();
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::is_pending() const {
  return is_pending_;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_is_pending(bool value) {
  set_has_is_pending();
  is_pending_ = value;
}

// optional uint32 app_played = 6;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_app_played() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_app_played() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_app_played() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_app_played() {
  app_played_ = 0u;
  clear_has_app_played();
}
inline ::google::protobuf::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::app_played() const {
  return app_played_;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_app_played(::google::protobuf::uint32 value) {
  set_has_app_played();
  app_played_ = value;
}

// -------------------------------------------------------------------

// CMsgClientGetAuthorizedDevicesResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientGetAuthorizedDevicesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientGetAuthorizedDevicesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientGetAuthorizedDevicesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientGetAuthorizedDevicesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientGetAuthorizedDevicesResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientGetAuthorizedDevicesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
inline int CMsgClientGetAuthorizedDevicesResponse::authorized_device_size() const {
  return authorized_device_.size();
}
inline void CMsgClientGetAuthorizedDevicesResponse::clear_authorized_device() {
  authorized_device_.Clear();
}
inline const ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse::authorized_device(int index) const {
  return authorized_device_.Get(index);
}
inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::mutable_authorized_device(int index) {
  return authorized_device_.Mutable(index);
}
inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::add_authorized_device() {
  return authorized_device_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >&
CMsgClientGetAuthorizedDevicesResponse::authorized_device() const {
  return authorized_device_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >*
CMsgClientGetAuthorizedDevicesResponse::mutable_authorized_device() {
  return &authorized_device_;
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryLockStatus_LockedLibrary

// optional uint32 owner_id = 1;
inline bool CMsgClientSharedLibraryLockStatus_LockedLibrary::has_owner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_has_owner_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
inline ::google::protobuf::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::owner_id() const {
  return owner_id_;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
}

// optional uint32 locked_by = 2;
inline bool CMsgClientSharedLibraryLockStatus_LockedLibrary::has_locked_by() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_has_locked_by() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_has_locked_by() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_locked_by() {
  locked_by_ = 0u;
  clear_has_locked_by();
}
inline ::google::protobuf::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::locked_by() const {
  return locked_by_;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_locked_by(::google::protobuf::uint32 value) {
  set_has_locked_by();
  locked_by_ = value;
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryLockStatus

// repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
inline int CMsgClientSharedLibraryLockStatus::locked_library_size() const {
  return locked_library_.size();
}
inline void CMsgClientSharedLibraryLockStatus::clear_locked_library() {
  locked_library_.Clear();
}
inline const ::CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus::locked_library(int index) const {
  return locked_library_.Get(index);
}
inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::mutable_locked_library(int index) {
  return locked_library_.Mutable(index);
}
inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::add_locked_library() {
  return locked_library_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >&
CMsgClientSharedLibraryLockStatus::locked_library() const {
  return locked_library_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >*
CMsgClientSharedLibraryLockStatus::mutable_locked_library() {
  return &locked_library_;
}

// optional uint32 own_library_locked_by = 2;
inline bool CMsgClientSharedLibraryLockStatus::has_own_library_locked_by() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientSharedLibraryLockStatus::set_has_own_library_locked_by() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientSharedLibraryLockStatus::clear_has_own_library_locked_by() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientSharedLibraryLockStatus::clear_own_library_locked_by() {
  own_library_locked_by_ = 0u;
  clear_has_own_library_locked_by();
}
inline ::google::protobuf::uint32 CMsgClientSharedLibraryLockStatus::own_library_locked_by() const {
  return own_library_locked_by_;
}
inline void CMsgClientSharedLibraryLockStatus::set_own_library_locked_by(::google::protobuf::uint32 value) {
  set_has_own_library_locked_by();
  own_library_locked_by_ = value;
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryStopPlaying_StopApp

// optional uint32 app_id = 1;
inline bool CMsgClientSharedLibraryStopPlaying_StopApp::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::app_id() const {
  return app_id_;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// optional uint32 owner_id = 2;
inline bool CMsgClientSharedLibraryStopPlaying_StopApp::has_owner_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::set_has_owner_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
inline ::google::protobuf::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::owner_id() const {
  return owner_id_;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryStopPlaying

// optional int32 seconds_left = 1;
inline bool CMsgClientSharedLibraryStopPlaying::has_seconds_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSharedLibraryStopPlaying::set_has_seconds_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSharedLibraryStopPlaying::clear_has_seconds_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSharedLibraryStopPlaying::clear_seconds_left() {
  seconds_left_ = 0;
  clear_has_seconds_left();
}
inline ::google::protobuf::int32 CMsgClientSharedLibraryStopPlaying::seconds_left() const {
  return seconds_left_;
}
inline void CMsgClientSharedLibraryStopPlaying::set_seconds_left(::google::protobuf::int32 value) {
  set_has_seconds_left();
  seconds_left_ = value;
}

// repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
inline int CMsgClientSharedLibraryStopPlaying::stop_apps_size() const {
  return stop_apps_.size();
}
inline void CMsgClientSharedLibraryStopPlaying::clear_stop_apps() {
  stop_apps_.Clear();
}
inline const ::CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying::stop_apps(int index) const {
  return stop_apps_.Get(index);
}
inline ::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::mutable_stop_apps(int index) {
  return stop_apps_.Mutable(index);
}
inline ::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::add_stop_apps() {
  return stop_apps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >&
CMsgClientSharedLibraryStopPlaying::stop_apps() const {
  return stop_apps_;
}
inline ::google::protobuf::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >*
CMsgClientSharedLibraryStopPlaying::mutable_stop_apps() {
  return &stop_apps_;
}

// -------------------------------------------------------------------

// CMsgClientServiceCall

// optional bytes sysid_routing = 1;
inline bool CMsgClientServiceCall::has_sysid_routing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientServiceCall::set_has_sysid_routing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientServiceCall::clear_has_sysid_routing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientServiceCall::clear_sysid_routing() {
  if (sysid_routing_ != &::google::protobuf::internal::kEmptyString) {
    sysid_routing_->clear();
  }
  clear_has_sysid_routing();
}
inline const ::std::string& CMsgClientServiceCall::sysid_routing() const {
  return *sysid_routing_;
}
inline void CMsgClientServiceCall::set_sysid_routing(const ::std::string& value) {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  sysid_routing_->assign(value);
}
inline void CMsgClientServiceCall::set_sysid_routing(const char* value) {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  sysid_routing_->assign(value);
}
inline void CMsgClientServiceCall::set_sysid_routing(const void* value, size_t size) {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  sysid_routing_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCall::mutable_sysid_routing() {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  return sysid_routing_;
}
inline ::std::string* CMsgClientServiceCall::release_sysid_routing() {
  clear_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sysid_routing_;
    sysid_routing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCall::set_allocated_sysid_routing(::std::string* sysid_routing) {
  if (sysid_routing_ != &::google::protobuf::internal::kEmptyString) {
    delete sysid_routing_;
  }
  if (sysid_routing) {
    set_has_sysid_routing();
    sysid_routing_ = sysid_routing;
  } else {
    clear_has_sysid_routing();
    sysid_routing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 call_handle = 2;
inline bool CMsgClientServiceCall::has_call_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientServiceCall::set_has_call_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientServiceCall::clear_has_call_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientServiceCall::clear_call_handle() {
  call_handle_ = 0u;
  clear_has_call_handle();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::call_handle() const {
  return call_handle_;
}
inline void CMsgClientServiceCall::set_call_handle(::google::protobuf::uint32 value) {
  set_has_call_handle();
  call_handle_ = value;
}

// optional uint32 module_crc = 3;
inline bool CMsgClientServiceCall::has_module_crc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientServiceCall::set_has_module_crc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientServiceCall::clear_has_module_crc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientServiceCall::clear_module_crc() {
  module_crc_ = 0u;
  clear_has_module_crc();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::module_crc() const {
  return module_crc_;
}
inline void CMsgClientServiceCall::set_module_crc(::google::protobuf::uint32 value) {
  set_has_module_crc();
  module_crc_ = value;
}

// optional bytes module_hash = 4;
inline bool CMsgClientServiceCall::has_module_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientServiceCall::set_has_module_hash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientServiceCall::clear_has_module_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientServiceCall::clear_module_hash() {
  if (module_hash_ != &::google::protobuf::internal::kEmptyString) {
    module_hash_->clear();
  }
  clear_has_module_hash();
}
inline const ::std::string& CMsgClientServiceCall::module_hash() const {
  return *module_hash_;
}
inline void CMsgClientServiceCall::set_module_hash(const ::std::string& value) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(value);
}
inline void CMsgClientServiceCall::set_module_hash(const char* value) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(value);
}
inline void CMsgClientServiceCall::set_module_hash(const void* value, size_t size) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCall::mutable_module_hash() {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  return module_hash_;
}
inline ::std::string* CMsgClientServiceCall::release_module_hash() {
  clear_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_hash_;
    module_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCall::set_allocated_module_hash(::std::string* module_hash) {
  if (module_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete module_hash_;
  }
  if (module_hash) {
    set_has_module_hash();
    module_hash_ = module_hash;
  } else {
    clear_has_module_hash();
    module_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 function_id = 5;
inline bool CMsgClientServiceCall::has_function_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientServiceCall::set_has_function_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientServiceCall::clear_has_function_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientServiceCall::clear_function_id() {
  function_id_ = 0u;
  clear_has_function_id();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::function_id() const {
  return function_id_;
}
inline void CMsgClientServiceCall::set_function_id(::google::protobuf::uint32 value) {
  set_has_function_id();
  function_id_ = value;
}

// optional uint32 cub_output_max = 6;
inline bool CMsgClientServiceCall::has_cub_output_max() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientServiceCall::set_has_cub_output_max() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientServiceCall::clear_has_cub_output_max() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientServiceCall::clear_cub_output_max() {
  cub_output_max_ = 0u;
  clear_has_cub_output_max();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::cub_output_max() const {
  return cub_output_max_;
}
inline void CMsgClientServiceCall::set_cub_output_max(::google::protobuf::uint32 value) {
  set_has_cub_output_max();
  cub_output_max_ = value;
}

// optional uint32 flags = 7;
inline bool CMsgClientServiceCall::has_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientServiceCall::set_has_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientServiceCall::clear_has_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientServiceCall::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::flags() const {
  return flags_;
}
inline void CMsgClientServiceCall::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
}

// optional bytes callparameter = 8;
inline bool CMsgClientServiceCall::has_callparameter() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientServiceCall::set_has_callparameter() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientServiceCall::clear_has_callparameter() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientServiceCall::clear_callparameter() {
  if (callparameter_ != &::google::protobuf::internal::kEmptyString) {
    callparameter_->clear();
  }
  clear_has_callparameter();
}
inline const ::std::string& CMsgClientServiceCall::callparameter() const {
  return *callparameter_;
}
inline void CMsgClientServiceCall::set_callparameter(const ::std::string& value) {
  set_has_callparameter();
  if (callparameter_ == &::google::protobuf::internal::kEmptyString) {
    callparameter_ = new ::std::string;
  }
  callparameter_->assign(value);
}
inline void CMsgClientServiceCall::set_callparameter(const char* value) {
  set_has_callparameter();
  if (callparameter_ == &::google::protobuf::internal::kEmptyString) {
    callparameter_ = new ::std::string;
  }
  callparameter_->assign(value);
}
inline void CMsgClientServiceCall::set_callparameter(const void* value, size_t size) {
  set_has_callparameter();
  if (callparameter_ == &::google::protobuf::internal::kEmptyString) {
    callparameter_ = new ::std::string;
  }
  callparameter_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCall::mutable_callparameter() {
  set_has_callparameter();
  if (callparameter_ == &::google::protobuf::internal::kEmptyString) {
    callparameter_ = new ::std::string;
  }
  return callparameter_;
}
inline ::std::string* CMsgClientServiceCall::release_callparameter() {
  clear_has_callparameter();
  if (callparameter_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = callparameter_;
    callparameter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCall::set_allocated_callparameter(::std::string* callparameter) {
  if (callparameter_ != &::google::protobuf::internal::kEmptyString) {
    delete callparameter_;
  }
  if (callparameter) {
    set_has_callparameter();
    callparameter_ = callparameter;
  } else {
    clear_has_callparameter();
    callparameter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool ping_only = 9;
inline bool CMsgClientServiceCall::has_ping_only() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientServiceCall::set_has_ping_only() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientServiceCall::clear_has_ping_only() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientServiceCall::clear_ping_only() {
  ping_only_ = false;
  clear_has_ping_only();
}
inline bool CMsgClientServiceCall::ping_only() const {
  return ping_only_;
}
inline void CMsgClientServiceCall::set_ping_only(bool value) {
  set_has_ping_only();
  ping_only_ = value;
}

// optional uint32 max_outstanding_calls = 10;
inline bool CMsgClientServiceCall::has_max_outstanding_calls() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientServiceCall::set_has_max_outstanding_calls() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientServiceCall::clear_has_max_outstanding_calls() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientServiceCall::clear_max_outstanding_calls() {
  max_outstanding_calls_ = 0u;
  clear_has_max_outstanding_calls();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::max_outstanding_calls() const {
  return max_outstanding_calls_;
}
inline void CMsgClientServiceCall::set_max_outstanding_calls(::google::protobuf::uint32 value) {
  set_has_max_outstanding_calls();
  max_outstanding_calls_ = value;
}

// optional uint32 app_id = 11;
inline bool CMsgClientServiceCall::has_app_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientServiceCall::set_has_app_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientServiceCall::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientServiceCall::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CMsgClientServiceCall::app_id() const {
  return app_id_;
}
inline void CMsgClientServiceCall::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
}

// -------------------------------------------------------------------

// CMsgClientServiceModule

// optional uint32 module_crc = 1;
inline bool CMsgClientServiceModule::has_module_crc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientServiceModule::set_has_module_crc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientServiceModule::clear_has_module_crc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientServiceModule::clear_module_crc() {
  module_crc_ = 0u;
  clear_has_module_crc();
}
inline ::google::protobuf::uint32 CMsgClientServiceModule::module_crc() const {
  return module_crc_;
}
inline void CMsgClientServiceModule::set_module_crc(::google::protobuf::uint32 value) {
  set_has_module_crc();
  module_crc_ = value;
}

// optional bytes module_hash = 2;
inline bool CMsgClientServiceModule::has_module_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientServiceModule::set_has_module_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientServiceModule::clear_has_module_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientServiceModule::clear_module_hash() {
  if (module_hash_ != &::google::protobuf::internal::kEmptyString) {
    module_hash_->clear();
  }
  clear_has_module_hash();
}
inline const ::std::string& CMsgClientServiceModule::module_hash() const {
  return *module_hash_;
}
inline void CMsgClientServiceModule::set_module_hash(const ::std::string& value) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(value);
}
inline void CMsgClientServiceModule::set_module_hash(const char* value) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(value);
}
inline void CMsgClientServiceModule::set_module_hash(const void* value, size_t size) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceModule::mutable_module_hash() {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  return module_hash_;
}
inline ::std::string* CMsgClientServiceModule::release_module_hash() {
  clear_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_hash_;
    module_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceModule::set_allocated_module_hash(::std::string* module_hash) {
  if (module_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete module_hash_;
  }
  if (module_hash) {
    set_has_module_hash();
    module_hash_ = module_hash;
  } else {
    clear_has_module_hash();
    module_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes module_content = 3;
inline bool CMsgClientServiceModule::has_module_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientServiceModule::set_has_module_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientServiceModule::clear_has_module_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientServiceModule::clear_module_content() {
  if (module_content_ != &::google::protobuf::internal::kEmptyString) {
    module_content_->clear();
  }
  clear_has_module_content();
}
inline const ::std::string& CMsgClientServiceModule::module_content() const {
  return *module_content_;
}
inline void CMsgClientServiceModule::set_module_content(const ::std::string& value) {
  set_has_module_content();
  if (module_content_ == &::google::protobuf::internal::kEmptyString) {
    module_content_ = new ::std::string;
  }
  module_content_->assign(value);
}
inline void CMsgClientServiceModule::set_module_content(const char* value) {
  set_has_module_content();
  if (module_content_ == &::google::protobuf::internal::kEmptyString) {
    module_content_ = new ::std::string;
  }
  module_content_->assign(value);
}
inline void CMsgClientServiceModule::set_module_content(const void* value, size_t size) {
  set_has_module_content();
  if (module_content_ == &::google::protobuf::internal::kEmptyString) {
    module_content_ = new ::std::string;
  }
  module_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceModule::mutable_module_content() {
  set_has_module_content();
  if (module_content_ == &::google::protobuf::internal::kEmptyString) {
    module_content_ = new ::std::string;
  }
  return module_content_;
}
inline ::std::string* CMsgClientServiceModule::release_module_content() {
  clear_has_module_content();
  if (module_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_content_;
    module_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceModule::set_allocated_module_content(::std::string* module_content) {
  if (module_content_ != &::google::protobuf::internal::kEmptyString) {
    delete module_content_;
  }
  if (module_content) {
    set_has_module_content();
    module_content_ = module_content;
  } else {
    clear_has_module_content();
    module_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgClientServiceCallResponse

// optional bytes sysid_routing = 1;
inline bool CMsgClientServiceCallResponse::has_sysid_routing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_sysid_routing() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientServiceCallResponse::clear_has_sysid_routing() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientServiceCallResponse::clear_sysid_routing() {
  if (sysid_routing_ != &::google::protobuf::internal::kEmptyString) {
    sysid_routing_->clear();
  }
  clear_has_sysid_routing();
}
inline const ::std::string& CMsgClientServiceCallResponse::sysid_routing() const {
  return *sysid_routing_;
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(const ::std::string& value) {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  sysid_routing_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(const char* value) {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  sysid_routing_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(const void* value, size_t size) {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  sysid_routing_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_sysid_routing() {
  set_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    sysid_routing_ = new ::std::string;
  }
  return sysid_routing_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_sysid_routing() {
  clear_has_sysid_routing();
  if (sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sysid_routing_;
    sysid_routing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_sysid_routing(::std::string* sysid_routing) {
  if (sysid_routing_ != &::google::protobuf::internal::kEmptyString) {
    delete sysid_routing_;
  }
  if (sysid_routing) {
    set_has_sysid_routing();
    sysid_routing_ = sysid_routing;
  } else {
    clear_has_sysid_routing();
    sysid_routing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 call_handle = 2;
inline bool CMsgClientServiceCallResponse::has_call_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_call_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientServiceCallResponse::clear_has_call_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientServiceCallResponse::clear_call_handle() {
  call_handle_ = 0u;
  clear_has_call_handle();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::call_handle() const {
  return call_handle_;
}
inline void CMsgClientServiceCallResponse::set_call_handle(::google::protobuf::uint32 value) {
  set_has_call_handle();
  call_handle_ = value;
}

// optional uint32 module_crc = 3;
inline bool CMsgClientServiceCallResponse::has_module_crc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_module_crc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientServiceCallResponse::clear_has_module_crc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientServiceCallResponse::clear_module_crc() {
  module_crc_ = 0u;
  clear_has_module_crc();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::module_crc() const {
  return module_crc_;
}
inline void CMsgClientServiceCallResponse::set_module_crc(::google::protobuf::uint32 value) {
  set_has_module_crc();
  module_crc_ = value;
}

// optional bytes module_hash = 4;
inline bool CMsgClientServiceCallResponse::has_module_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_module_hash() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientServiceCallResponse::clear_has_module_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientServiceCallResponse::clear_module_hash() {
  if (module_hash_ != &::google::protobuf::internal::kEmptyString) {
    module_hash_->clear();
  }
  clear_has_module_hash();
}
inline const ::std::string& CMsgClientServiceCallResponse::module_hash() const {
  return *module_hash_;
}
inline void CMsgClientServiceCallResponse::set_module_hash(const ::std::string& value) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_module_hash(const char* value) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_module_hash(const void* value, size_t size) {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  module_hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_module_hash() {
  set_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    module_hash_ = new ::std::string;
  }
  return module_hash_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_module_hash() {
  clear_has_module_hash();
  if (module_hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = module_hash_;
    module_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_module_hash(::std::string* module_hash) {
  if (module_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete module_hash_;
  }
  if (module_hash) {
    set_has_module_hash();
    module_hash_ = module_hash;
  } else {
    clear_has_module_hash();
    module_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 ecallresult = 5;
inline bool CMsgClientServiceCallResponse::has_ecallresult() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_ecallresult() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientServiceCallResponse::clear_has_ecallresult() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientServiceCallResponse::clear_ecallresult() {
  ecallresult_ = 0u;
  clear_has_ecallresult();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::ecallresult() const {
  return ecallresult_;
}
inline void CMsgClientServiceCallResponse::set_ecallresult(::google::protobuf::uint32 value) {
  set_has_ecallresult();
  ecallresult_ = value;
}

// optional bytes result_content = 6;
inline bool CMsgClientServiceCallResponse::has_result_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_result_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientServiceCallResponse::clear_has_result_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientServiceCallResponse::clear_result_content() {
  if (result_content_ != &::google::protobuf::internal::kEmptyString) {
    result_content_->clear();
  }
  clear_has_result_content();
}
inline const ::std::string& CMsgClientServiceCallResponse::result_content() const {
  return *result_content_;
}
inline void CMsgClientServiceCallResponse::set_result_content(const ::std::string& value) {
  set_has_result_content();
  if (result_content_ == &::google::protobuf::internal::kEmptyString) {
    result_content_ = new ::std::string;
  }
  result_content_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_result_content(const char* value) {
  set_has_result_content();
  if (result_content_ == &::google::protobuf::internal::kEmptyString) {
    result_content_ = new ::std::string;
  }
  result_content_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_result_content(const void* value, size_t size) {
  set_has_result_content();
  if (result_content_ == &::google::protobuf::internal::kEmptyString) {
    result_content_ = new ::std::string;
  }
  result_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_result_content() {
  set_has_result_content();
  if (result_content_ == &::google::protobuf::internal::kEmptyString) {
    result_content_ = new ::std::string;
  }
  return result_content_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_result_content() {
  clear_has_result_content();
  if (result_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = result_content_;
    result_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_result_content(::std::string* result_content) {
  if (result_content_ != &::google::protobuf::internal::kEmptyString) {
    delete result_content_;
  }
  if (result_content) {
    set_has_result_content();
    result_content_ = result_content;
  } else {
    clear_has_result_content();
    result_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes os_version_info = 7;
inline bool CMsgClientServiceCallResponse::has_os_version_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_os_version_info() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientServiceCallResponse::clear_has_os_version_info() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientServiceCallResponse::clear_os_version_info() {
  if (os_version_info_ != &::google::protobuf::internal::kEmptyString) {
    os_version_info_->clear();
  }
  clear_has_os_version_info();
}
inline const ::std::string& CMsgClientServiceCallResponse::os_version_info() const {
  return *os_version_info_;
}
inline void CMsgClientServiceCallResponse::set_os_version_info(const ::std::string& value) {
  set_has_os_version_info();
  if (os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    os_version_info_ = new ::std::string;
  }
  os_version_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_os_version_info(const char* value) {
  set_has_os_version_info();
  if (os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    os_version_info_ = new ::std::string;
  }
  os_version_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_os_version_info(const void* value, size_t size) {
  set_has_os_version_info();
  if (os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    os_version_info_ = new ::std::string;
  }
  os_version_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_os_version_info() {
  set_has_os_version_info();
  if (os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    os_version_info_ = new ::std::string;
  }
  return os_version_info_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_os_version_info() {
  clear_has_os_version_info();
  if (os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = os_version_info_;
    os_version_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_os_version_info(::std::string* os_version_info) {
  if (os_version_info_ != &::google::protobuf::internal::kEmptyString) {
    delete os_version_info_;
  }
  if (os_version_info) {
    set_has_os_version_info();
    os_version_info_ = os_version_info;
  } else {
    clear_has_os_version_info();
    os_version_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes system_info = 8;
inline bool CMsgClientServiceCallResponse::has_system_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_system_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientServiceCallResponse::clear_has_system_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientServiceCallResponse::clear_system_info() {
  if (system_info_ != &::google::protobuf::internal::kEmptyString) {
    system_info_->clear();
  }
  clear_has_system_info();
}
inline const ::std::string& CMsgClientServiceCallResponse::system_info() const {
  return *system_info_;
}
inline void CMsgClientServiceCallResponse::set_system_info(const ::std::string& value) {
  set_has_system_info();
  if (system_info_ == &::google::protobuf::internal::kEmptyString) {
    system_info_ = new ::std::string;
  }
  system_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_system_info(const char* value) {
  set_has_system_info();
  if (system_info_ == &::google::protobuf::internal::kEmptyString) {
    system_info_ = new ::std::string;
  }
  system_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_system_info(const void* value, size_t size) {
  set_has_system_info();
  if (system_info_ == &::google::protobuf::internal::kEmptyString) {
    system_info_ = new ::std::string;
  }
  system_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_system_info() {
  set_has_system_info();
  if (system_info_ == &::google::protobuf::internal::kEmptyString) {
    system_info_ = new ::std::string;
  }
  return system_info_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_system_info() {
  clear_has_system_info();
  if (system_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = system_info_;
    system_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_system_info(::std::string* system_info) {
  if (system_info_ != &::google::protobuf::internal::kEmptyString) {
    delete system_info_;
  }
  if (system_info) {
    set_has_system_info();
    system_info_ = system_info;
  } else {
    clear_has_system_info();
    system_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional fixed64 load_address = 9;
inline bool CMsgClientServiceCallResponse::has_load_address() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_load_address() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientServiceCallResponse::clear_has_load_address() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientServiceCallResponse::clear_load_address() {
  load_address_ = GOOGLE_ULONGLONG(0);
  clear_has_load_address();
}
inline ::google::protobuf::uint64 CMsgClientServiceCallResponse::load_address() const {
  return load_address_;
}
inline void CMsgClientServiceCallResponse::set_load_address(::google::protobuf::uint64 value) {
  set_has_load_address();
  load_address_ = value;
}

// optional bytes exception_record = 10;
inline bool CMsgClientServiceCallResponse::has_exception_record() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_exception_record() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientServiceCallResponse::clear_has_exception_record() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientServiceCallResponse::clear_exception_record() {
  if (exception_record_ != &::google::protobuf::internal::kEmptyString) {
    exception_record_->clear();
  }
  clear_has_exception_record();
}
inline const ::std::string& CMsgClientServiceCallResponse::exception_record() const {
  return *exception_record_;
}
inline void CMsgClientServiceCallResponse::set_exception_record(const ::std::string& value) {
  set_has_exception_record();
  if (exception_record_ == &::google::protobuf::internal::kEmptyString) {
    exception_record_ = new ::std::string;
  }
  exception_record_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_exception_record(const char* value) {
  set_has_exception_record();
  if (exception_record_ == &::google::protobuf::internal::kEmptyString) {
    exception_record_ = new ::std::string;
  }
  exception_record_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_exception_record(const void* value, size_t size) {
  set_has_exception_record();
  if (exception_record_ == &::google::protobuf::internal::kEmptyString) {
    exception_record_ = new ::std::string;
  }
  exception_record_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_exception_record() {
  set_has_exception_record();
  if (exception_record_ == &::google::protobuf::internal::kEmptyString) {
    exception_record_ = new ::std::string;
  }
  return exception_record_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_exception_record() {
  clear_has_exception_record();
  if (exception_record_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = exception_record_;
    exception_record_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_exception_record(::std::string* exception_record) {
  if (exception_record_ != &::google::protobuf::internal::kEmptyString) {
    delete exception_record_;
  }
  if (exception_record) {
    set_has_exception_record();
    exception_record_ = exception_record;
  } else {
    clear_has_exception_record();
    exception_record_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes portable_os_version_info = 11;
inline bool CMsgClientServiceCallResponse::has_portable_os_version_info() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_portable_os_version_info() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientServiceCallResponse::clear_has_portable_os_version_info() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientServiceCallResponse::clear_portable_os_version_info() {
  if (portable_os_version_info_ != &::google::protobuf::internal::kEmptyString) {
    portable_os_version_info_->clear();
  }
  clear_has_portable_os_version_info();
}
inline const ::std::string& CMsgClientServiceCallResponse::portable_os_version_info() const {
  return *portable_os_version_info_;
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(const ::std::string& value) {
  set_has_portable_os_version_info();
  if (portable_os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_os_version_info_ = new ::std::string;
  }
  portable_os_version_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(const char* value) {
  set_has_portable_os_version_info();
  if (portable_os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_os_version_info_ = new ::std::string;
  }
  portable_os_version_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(const void* value, size_t size) {
  set_has_portable_os_version_info();
  if (portable_os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_os_version_info_ = new ::std::string;
  }
  portable_os_version_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_portable_os_version_info() {
  set_has_portable_os_version_info();
  if (portable_os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_os_version_info_ = new ::std::string;
  }
  return portable_os_version_info_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_portable_os_version_info() {
  clear_has_portable_os_version_info();
  if (portable_os_version_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = portable_os_version_info_;
    portable_os_version_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_portable_os_version_info(::std::string* portable_os_version_info) {
  if (portable_os_version_info_ != &::google::protobuf::internal::kEmptyString) {
    delete portable_os_version_info_;
  }
  if (portable_os_version_info) {
    set_has_portable_os_version_info();
    portable_os_version_info_ = portable_os_version_info;
  } else {
    clear_has_portable_os_version_info();
    portable_os_version_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes portable_system_info = 12;
inline bool CMsgClientServiceCallResponse::has_portable_system_info() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_portable_system_info() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientServiceCallResponse::clear_has_portable_system_info() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientServiceCallResponse::clear_portable_system_info() {
  if (portable_system_info_ != &::google::protobuf::internal::kEmptyString) {
    portable_system_info_->clear();
  }
  clear_has_portable_system_info();
}
inline const ::std::string& CMsgClientServiceCallResponse::portable_system_info() const {
  return *portable_system_info_;
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(const ::std::string& value) {
  set_has_portable_system_info();
  if (portable_system_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_system_info_ = new ::std::string;
  }
  portable_system_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(const char* value) {
  set_has_portable_system_info();
  if (portable_system_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_system_info_ = new ::std::string;
  }
  portable_system_info_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(const void* value, size_t size) {
  set_has_portable_system_info();
  if (portable_system_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_system_info_ = new ::std::string;
  }
  portable_system_info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_portable_system_info() {
  set_has_portable_system_info();
  if (portable_system_info_ == &::google::protobuf::internal::kEmptyString) {
    portable_system_info_ = new ::std::string;
  }
  return portable_system_info_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_portable_system_info() {
  clear_has_portable_system_info();
  if (portable_system_info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = portable_system_info_;
    portable_system_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_portable_system_info(::std::string* portable_system_info) {
  if (portable_system_info_ != &::google::protobuf::internal::kEmptyString) {
    delete portable_system_info_;
  }
  if (portable_system_info) {
    set_has_portable_system_info();
    portable_system_info_ = portable_system_info;
  } else {
    clear_has_portable_system_info();
    portable_system_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool was_converted = 13;
inline bool CMsgClientServiceCallResponse::has_was_converted() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_was_converted() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientServiceCallResponse::clear_has_was_converted() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientServiceCallResponse::clear_was_converted() {
  was_converted_ = false;
  clear_has_was_converted();
}
inline bool CMsgClientServiceCallResponse::was_converted() const {
  return was_converted_;
}
inline void CMsgClientServiceCallResponse::set_was_converted(bool value) {
  set_has_was_converted();
  was_converted_ = value;
}

// optional uint32 internal_result = 14;
inline bool CMsgClientServiceCallResponse::has_internal_result() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_internal_result() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientServiceCallResponse::clear_has_internal_result() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientServiceCallResponse::clear_internal_result() {
  internal_result_ = 0u;
  clear_has_internal_result();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::internal_result() const {
  return internal_result_;
}
inline void CMsgClientServiceCallResponse::set_internal_result(::google::protobuf::uint32 value) {
  set_has_internal_result();
  internal_result_ = value;
}

// optional uint32 current_count = 15;
inline bool CMsgClientServiceCallResponse::has_current_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_current_count() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientServiceCallResponse::clear_has_current_count() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientServiceCallResponse::clear_current_count() {
  current_count_ = 0u;
  clear_has_current_count();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::current_count() const {
  return current_count_;
}
inline void CMsgClientServiceCallResponse::set_current_count(::google::protobuf::uint32 value) {
  set_has_current_count();
  current_count_ = value;
}

// optional uint32 last_call_handle = 16;
inline bool CMsgClientServiceCallResponse::has_last_call_handle() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_last_call_handle() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientServiceCallResponse::clear_has_last_call_handle() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientServiceCallResponse::clear_last_call_handle() {
  last_call_handle_ = 0u;
  clear_has_last_call_handle();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::last_call_handle() const {
  return last_call_handle_;
}
inline void CMsgClientServiceCallResponse::set_last_call_handle(::google::protobuf::uint32 value) {
  set_has_last_call_handle();
  last_call_handle_ = value;
}

// optional uint32 last_call_module_crc = 17;
inline bool CMsgClientServiceCallResponse::has_last_call_module_crc() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_last_call_module_crc() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientServiceCallResponse::clear_has_last_call_module_crc() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientServiceCallResponse::clear_last_call_module_crc() {
  last_call_module_crc_ = 0u;
  clear_has_last_call_module_crc();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::last_call_module_crc() const {
  return last_call_module_crc_;
}
inline void CMsgClientServiceCallResponse::set_last_call_module_crc(::google::protobuf::uint32 value) {
  set_has_last_call_module_crc();
  last_call_module_crc_ = value;
}

// optional bytes last_call_sysid_routing = 18;
inline bool CMsgClientServiceCallResponse::has_last_call_sysid_routing() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_last_call_sysid_routing() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgClientServiceCallResponse::clear_has_last_call_sysid_routing() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgClientServiceCallResponse::clear_last_call_sysid_routing() {
  if (last_call_sysid_routing_ != &::google::protobuf::internal::kEmptyString) {
    last_call_sysid_routing_->clear();
  }
  clear_has_last_call_sysid_routing();
}
inline const ::std::string& CMsgClientServiceCallResponse::last_call_sysid_routing() const {
  return *last_call_sysid_routing_;
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const ::std::string& value) {
  set_has_last_call_sysid_routing();
  if (last_call_sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    last_call_sysid_routing_ = new ::std::string;
  }
  last_call_sysid_routing_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const char* value) {
  set_has_last_call_sysid_routing();
  if (last_call_sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    last_call_sysid_routing_ = new ::std::string;
  }
  last_call_sysid_routing_->assign(value);
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const void* value, size_t size) {
  set_has_last_call_sysid_routing();
  if (last_call_sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    last_call_sysid_routing_ = new ::std::string;
  }
  last_call_sysid_routing_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgClientServiceCallResponse::mutable_last_call_sysid_routing() {
  set_has_last_call_sysid_routing();
  if (last_call_sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    last_call_sysid_routing_ = new ::std::string;
  }
  return last_call_sysid_routing_;
}
inline ::std::string* CMsgClientServiceCallResponse::release_last_call_sysid_routing() {
  clear_has_last_call_sysid_routing();
  if (last_call_sysid_routing_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = last_call_sysid_routing_;
    last_call_sysid_routing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgClientServiceCallResponse::set_allocated_last_call_sysid_routing(::std::string* last_call_sysid_routing) {
  if (last_call_sysid_routing_ != &::google::protobuf::internal::kEmptyString) {
    delete last_call_sysid_routing_;
  }
  if (last_call_sysid_routing) {
    set_has_last_call_sysid_routing();
    last_call_sysid_routing_ = last_call_sysid_routing;
  } else {
    clear_has_last_call_sysid_routing();
    last_call_sysid_routing_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 last_ecallresult = 19;
inline bool CMsgClientServiceCallResponse::has_last_ecallresult() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_last_ecallresult() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgClientServiceCallResponse::clear_has_last_ecallresult() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgClientServiceCallResponse::clear_last_ecallresult() {
  last_ecallresult_ = 0u;
  clear_has_last_ecallresult();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::last_ecallresult() const {
  return last_ecallresult_;
}
inline void CMsgClientServiceCallResponse::set_last_ecallresult(::google::protobuf::uint32 value) {
  set_has_last_ecallresult();
  last_ecallresult_ = value;
}

// optional uint32 last_callissue_delta = 20;
inline bool CMsgClientServiceCallResponse::has_last_callissue_delta() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_last_callissue_delta() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgClientServiceCallResponse::clear_has_last_callissue_delta() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgClientServiceCallResponse::clear_last_callissue_delta() {
  last_callissue_delta_ = 0u;
  clear_has_last_callissue_delta();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::last_callissue_delta() const {
  return last_callissue_delta_;
}
inline void CMsgClientServiceCallResponse::set_last_callissue_delta(::google::protobuf::uint32 value) {
  set_has_last_callissue_delta();
  last_callissue_delta_ = value;
}

// optional uint32 last_callcomplete_delta = 21;
inline bool CMsgClientServiceCallResponse::has_last_callcomplete_delta() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgClientServiceCallResponse::set_has_last_callcomplete_delta() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgClientServiceCallResponse::clear_has_last_callcomplete_delta() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgClientServiceCallResponse::clear_last_callcomplete_delta() {
  last_callcomplete_delta_ = 0u;
  clear_has_last_callcomplete_delta();
}
inline ::google::protobuf::uint32 CMsgClientServiceCallResponse::last_callcomplete_delta() const {
  return last_callcomplete_delta_;
}
inline void CMsgClientServiceCallResponse::set_last_callcomplete_delta(::google::protobuf::uint32 value) {
  set_has_last_callcomplete_delta();
  last_callcomplete_delta_ = value;
}

// -------------------------------------------------------------------

// CMsgAMUnlockStreaming

// -------------------------------------------------------------------

// CMsgAMUnlockStreamingResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMUnlockStreamingResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMUnlockStreamingResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMUnlockStreamingResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMUnlockStreamingResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgAMUnlockStreamingResponse::eresult() const {
  return eresult_;
}
inline void CMsgAMUnlockStreamingResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional bytes encryption_key = 2;
inline bool CMsgAMUnlockStreamingResponse::has_encryption_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAMUnlockStreamingResponse::set_has_encryption_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAMUnlockStreamingResponse::clear_has_encryption_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAMUnlockStreamingResponse::clear_encryption_key() {
  if (encryption_key_ != &::google::protobuf::internal::kEmptyString) {
    encryption_key_->clear();
  }
  clear_has_encryption_key();
}
inline const ::std::string& CMsgAMUnlockStreamingResponse::encryption_key() const {
  return *encryption_key_;
}
inline void CMsgAMUnlockStreamingResponse::set_encryption_key(const ::std::string& value) {
  set_has_encryption_key();
  if (encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    encryption_key_ = new ::std::string;
  }
  encryption_key_->assign(value);
}
inline void CMsgAMUnlockStreamingResponse::set_encryption_key(const char* value) {
  set_has_encryption_key();
  if (encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    encryption_key_ = new ::std::string;
  }
  encryption_key_->assign(value);
}
inline void CMsgAMUnlockStreamingResponse::set_encryption_key(const void* value, size_t size) {
  set_has_encryption_key();
  if (encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    encryption_key_ = new ::std::string;
  }
  encryption_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CMsgAMUnlockStreamingResponse::mutable_encryption_key() {
  set_has_encryption_key();
  if (encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    encryption_key_ = new ::std::string;
  }
  return encryption_key_;
}
inline ::std::string* CMsgAMUnlockStreamingResponse::release_encryption_key() {
  clear_has_encryption_key();
  if (encryption_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = encryption_key_;
    encryption_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CMsgAMUnlockStreamingResponse::set_allocated_encryption_key(::std::string* encryption_key) {
  if (encryption_key_ != &::google::protobuf::internal::kEmptyString) {
    delete encryption_key_;
  }
  if (encryption_key) {
    set_has_encryption_key();
    encryption_key_ = encryption_key;
  } else {
    clear_has_encryption_key();
    encryption_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CMsgAMUnlockHEVC

// -------------------------------------------------------------------

// CMsgAMUnlockHEVCResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMUnlockHEVCResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAMUnlockHEVCResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAMUnlockHEVCResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAMUnlockHEVCResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgAMUnlockHEVCResponse::eresult() const {
  return eresult_;
}
inline void CMsgAMUnlockHEVCResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// -------------------------------------------------------------------

// CMsgClientPlayingSessionState

// optional bool playing_blocked = 2;
inline bool CMsgClientPlayingSessionState::has_playing_blocked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPlayingSessionState::set_has_playing_blocked() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPlayingSessionState::clear_has_playing_blocked() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPlayingSessionState::clear_playing_blocked() {
  playing_blocked_ = false;
  clear_has_playing_blocked();
}
inline bool CMsgClientPlayingSessionState::playing_blocked() const {
  return playing_blocked_;
}
inline void CMsgClientPlayingSessionState::set_playing_blocked(bool value) {
  set_has_playing_blocked();
  playing_blocked_ = value;
}

// optional uint32 playing_app = 3;
inline bool CMsgClientPlayingSessionState::has_playing_app() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientPlayingSessionState::set_has_playing_app() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientPlayingSessionState::clear_has_playing_app() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientPlayingSessionState::clear_playing_app() {
  playing_app_ = 0u;
  clear_has_playing_app();
}
inline ::google::protobuf::uint32 CMsgClientPlayingSessionState::playing_app() const {
  return playing_app_;
}
inline void CMsgClientPlayingSessionState::set_playing_app(::google::protobuf::uint32 value) {
  set_has_playing_app();
  playing_app_ = value;
}

// -------------------------------------------------------------------

// CMsgClientKickPlayingSession

// optional bool only_stop_game = 1;
inline bool CMsgClientKickPlayingSession::has_only_stop_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientKickPlayingSession::set_has_only_stop_game() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientKickPlayingSession::clear_has_only_stop_game() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientKickPlayingSession::clear_only_stop_game() {
  only_stop_game_ = false;
  clear_has_only_stop_game();
}
inline bool CMsgClientKickPlayingSession::only_stop_game() const {
  return only_stop_game_;
}
inline void CMsgClientKickPlayingSession::set_only_stop_game(bool value) {
  set_has_only_stop_game();
  only_stop_game_ = value;
}

// -------------------------------------------------------------------

// CMsgClientVoiceCallPreAuthorize

// optional fixed64 caller_steamid = 1;
inline bool CMsgClientVoiceCallPreAuthorize::has_caller_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorize::set_has_caller_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_has_caller_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_caller_steamid() {
  caller_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_caller_steamid();
}
inline ::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorize::caller_steamid() const {
  return caller_steamid_;
}
inline void CMsgClientVoiceCallPreAuthorize::set_caller_steamid(::google::protobuf::uint64 value) {
  set_has_caller_steamid();
  caller_steamid_ = value;
}

// optional fixed64 receiver_steamid = 2;
inline bool CMsgClientVoiceCallPreAuthorize::has_receiver_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorize::set_has_receiver_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_has_receiver_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_receiver_steamid() {
  receiver_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiver_steamid();
}
inline ::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorize::receiver_steamid() const {
  return receiver_steamid_;
}
inline void CMsgClientVoiceCallPreAuthorize::set_receiver_steamid(::google::protobuf::uint64 value) {
  set_has_receiver_steamid();
  receiver_steamid_ = value;
}

// optional int32 caller_id = 3;
inline bool CMsgClientVoiceCallPreAuthorize::has_caller_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorize::set_has_caller_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_has_caller_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_caller_id() {
  caller_id_ = 0;
  clear_has_caller_id();
}
inline ::google::protobuf::int32 CMsgClientVoiceCallPreAuthorize::caller_id() const {
  return caller_id_;
}
inline void CMsgClientVoiceCallPreAuthorize::set_caller_id(::google::protobuf::int32 value) {
  set_has_caller_id();
  caller_id_ = value;
}

// optional bool hangup = 4;
inline bool CMsgClientVoiceCallPreAuthorize::has_hangup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorize::set_has_hangup() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_has_hangup() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientVoiceCallPreAuthorize::clear_hangup() {
  hangup_ = false;
  clear_has_hangup();
}
inline bool CMsgClientVoiceCallPreAuthorize::hangup() const {
  return hangup_;
}
inline void CMsgClientVoiceCallPreAuthorize::set_hangup(bool value) {
  set_has_hangup();
  hangup_ = value;
}

// -------------------------------------------------------------------

// CMsgClientVoiceCallPreAuthorizeResponse

// optional fixed64 caller_steamid = 1;
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_caller_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_has_caller_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_caller_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_caller_steamid() {
  caller_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_caller_steamid();
}
inline ::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorizeResponse::caller_steamid() const {
  return caller_steamid_;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_caller_steamid(::google::protobuf::uint64 value) {
  set_has_caller_steamid();
  caller_steamid_ = value;
}

// optional fixed64 receiver_steamid = 2;
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_receiver_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_has_receiver_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_receiver_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_receiver_steamid() {
  receiver_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiver_steamid();
}
inline ::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorizeResponse::receiver_steamid() const {
  return receiver_steamid_;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_receiver_steamid(::google::protobuf::uint64 value) {
  set_has_receiver_steamid();
  receiver_steamid_ = value;
}

// optional int32 eresult = 3 [default = 2];
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientVoiceCallPreAuthorizeResponse::eresult() const {
  return eresult_;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
}

// optional int32 caller_id = 4;
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_caller_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_has_caller_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_caller_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_caller_id() {
  caller_id_ = 0;
  clear_has_caller_id();
}
inline ::google::protobuf::int32 CMsgClientVoiceCallPreAuthorizeResponse::caller_id() const {
  return caller_id_;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_caller_id(::google::protobuf::int32 value) {
  set_has_caller_id();
  caller_id_ = value;
}

// -------------------------------------------------------------------

// CMsgBadgeCraftedNotification

// optional uint32 appid = 1;
inline bool CMsgBadgeCraftedNotification::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBadgeCraftedNotification::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBadgeCraftedNotification::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBadgeCraftedNotification::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMsgBadgeCraftedNotification::appid() const {
  return appid_;
}
inline void CMsgBadgeCraftedNotification::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
}

// optional uint32 badge_level = 2;
inline bool CMsgBadgeCraftedNotification::has_badge_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBadgeCraftedNotification::set_has_badge_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBadgeCraftedNotification::clear_has_badge_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBadgeCraftedNotification::clear_badge_level() {
  badge_level_ = 0u;
  clear_has_badge_level();
}
inline ::google::protobuf::uint32 CMsgBadgeCraftedNotification::badge_level() const {
  return badge_level_;
}
inline void CMsgBadgeCraftedNotification::set_badge_level(::google::protobuf::uint32 value) {
  set_has_badge_level();
  badge_level_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5fclientserver_5f2_2eproto__INCLUDED
