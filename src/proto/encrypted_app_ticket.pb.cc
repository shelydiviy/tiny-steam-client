// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encrypted_app_ticket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "encrypted_app_ticket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* EncryptedAppTicket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncryptedAppTicket_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_encrypted_5fapp_5fticket_2eproto() {
  protobuf_AddDesc_encrypted_5fapp_5fticket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "encrypted_app_ticket.proto");
  GOOGLE_CHECK(file != NULL);
  EncryptedAppTicket_descriptor_ = file->message_type(0);
  static const int EncryptedAppTicket_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, ticket_version_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, crc_encryptedticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, cb_encrypteduserdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, cb_encrypted_appownershipticket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, encrypted_ticket_),
  };
  EncryptedAppTicket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EncryptedAppTicket_descriptor_,
      EncryptedAppTicket::default_instance_,
      EncryptedAppTicket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EncryptedAppTicket));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_encrypted_5fapp_5fticket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EncryptedAppTicket_descriptor_, &EncryptedAppTicket::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_encrypted_5fapp_5fticket_2eproto() {
  delete EncryptedAppTicket::default_instance_;
  delete EncryptedAppTicket_reflection_;
}

void protobuf_AddDesc_encrypted_5fapp_5fticket_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032encrypted_app_ticket.proto\"\255\001\n\022Encrypt"
    "edAppTicket\022\031\n\021ticket_version_no\030\001 \001(\r\022\033"
    "\n\023crc_encryptedticket\030\002 \001(\r\022\034\n\024cb_encryp"
    "teduserdata\030\003 \001(\r\022\'\n\037cb_encrypted_appown"
    "ershipticket\030\004 \001(\r\022\030\n\020encrypted_ticket\030\005"
    " \001(\014B\005H\001\200\001\000", 211);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "encrypted_app_ticket.proto", &protobuf_RegisterTypes);
  EncryptedAppTicket::default_instance_ = new EncryptedAppTicket();
  EncryptedAppTicket::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_encrypted_5fapp_5fticket_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_encrypted_5fapp_5fticket_2eproto {
  StaticDescriptorInitializer_encrypted_5fapp_5fticket_2eproto() {
    protobuf_AddDesc_encrypted_5fapp_5fticket_2eproto();
  }
} static_descriptor_initializer_encrypted_5fapp_5fticket_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EncryptedAppTicket::kTicketVersionNoFieldNumber;
const int EncryptedAppTicket::kCrcEncryptedticketFieldNumber;
const int EncryptedAppTicket::kCbEncrypteduserdataFieldNumber;
const int EncryptedAppTicket::kCbEncryptedAppownershipticketFieldNumber;
const int EncryptedAppTicket::kEncryptedTicketFieldNumber;
#endif  // !_MSC_VER

EncryptedAppTicket::EncryptedAppTicket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EncryptedAppTicket::InitAsDefaultInstance() {
}

EncryptedAppTicket::EncryptedAppTicket(const EncryptedAppTicket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EncryptedAppTicket::SharedCtor() {
  _cached_size_ = 0;
  ticket_version_no_ = 0u;
  crc_encryptedticket_ = 0u;
  cb_encrypteduserdata_ = 0u;
  cb_encrypted_appownershipticket_ = 0u;
  encrypted_ticket_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EncryptedAppTicket::~EncryptedAppTicket() {
  SharedDtor();
}

void EncryptedAppTicket::SharedDtor() {
  if (encrypted_ticket_ != &::google::protobuf::internal::kEmptyString) {
    delete encrypted_ticket_;
  }
  if (this != default_instance_) {
  }
}

void EncryptedAppTicket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncryptedAppTicket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncryptedAppTicket_descriptor_;
}

const EncryptedAppTicket& EncryptedAppTicket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_encrypted_5fapp_5fticket_2eproto();
  return *default_instance_;
}

EncryptedAppTicket* EncryptedAppTicket::default_instance_ = NULL;

EncryptedAppTicket* EncryptedAppTicket::New() const {
  return new EncryptedAppTicket;
}

void EncryptedAppTicket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ticket_version_no_ = 0u;
    crc_encryptedticket_ = 0u;
    cb_encrypteduserdata_ = 0u;
    cb_encrypted_appownershipticket_ = 0u;
    if (has_encrypted_ticket()) {
      if (encrypted_ticket_ != &::google::protobuf::internal::kEmptyString) {
        encrypted_ticket_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EncryptedAppTicket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ticket_version_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_version_no_)));
          set_has_ticket_version_no();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_crc_encryptedticket;
        break;
      }

      // optional uint32 crc_encryptedticket = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crc_encryptedticket:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_encryptedticket_)));
          set_has_crc_encryptedticket();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cb_encrypteduserdata;
        break;
      }

      // optional uint32 cb_encrypteduserdata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cb_encrypteduserdata:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cb_encrypteduserdata_)));
          set_has_cb_encrypteduserdata();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cb_encrypted_appownershipticket;
        break;
      }

      // optional uint32 cb_encrypted_appownershipticket = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cb_encrypted_appownershipticket:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cb_encrypted_appownershipticket_)));
          set_has_cb_encrypted_appownershipticket();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_encrypted_ticket;
        break;
      }

      // optional bytes encrypted_ticket = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_encrypted_ticket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encrypted_ticket()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EncryptedAppTicket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 ticket_version_no = 1;
  if (has_ticket_version_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ticket_version_no(), output);
  }

  // optional uint32 crc_encryptedticket = 2;
  if (has_crc_encryptedticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->crc_encryptedticket(), output);
  }

  // optional uint32 cb_encrypteduserdata = 3;
  if (has_cb_encrypteduserdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cb_encrypteduserdata(), output);
  }

  // optional uint32 cb_encrypted_appownershipticket = 4;
  if (has_cb_encrypted_appownershipticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cb_encrypted_appownershipticket(), output);
  }

  // optional bytes encrypted_ticket = 5;
  if (has_encrypted_ticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      5, this->encrypted_ticket(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EncryptedAppTicket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 ticket_version_no = 1;
  if (has_ticket_version_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ticket_version_no(), target);
  }

  // optional uint32 crc_encryptedticket = 2;
  if (has_crc_encryptedticket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->crc_encryptedticket(), target);
  }

  // optional uint32 cb_encrypteduserdata = 3;
  if (has_cb_encrypteduserdata()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cb_encrypteduserdata(), target);
  }

  // optional uint32 cb_encrypted_appownershipticket = 4;
  if (has_cb_encrypted_appownershipticket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cb_encrypted_appownershipticket(), target);
  }

  // optional bytes encrypted_ticket = 5;
  if (has_encrypted_ticket()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->encrypted_ticket(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EncryptedAppTicket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 ticket_version_no = 1;
    if (has_ticket_version_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket_version_no());
    }

    // optional uint32 crc_encryptedticket = 2;
    if (has_crc_encryptedticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_encryptedticket());
    }

    // optional uint32 cb_encrypteduserdata = 3;
    if (has_cb_encrypteduserdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cb_encrypteduserdata());
    }

    // optional uint32 cb_encrypted_appownershipticket = 4;
    if (has_cb_encrypted_appownershipticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cb_encrypted_appownershipticket());
    }

    // optional bytes encrypted_ticket = 5;
    if (has_encrypted_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encrypted_ticket());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncryptedAppTicket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EncryptedAppTicket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EncryptedAppTicket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EncryptedAppTicket::MergeFrom(const EncryptedAppTicket& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ticket_version_no()) {
      set_ticket_version_no(from.ticket_version_no());
    }
    if (from.has_crc_encryptedticket()) {
      set_crc_encryptedticket(from.crc_encryptedticket());
    }
    if (from.has_cb_encrypteduserdata()) {
      set_cb_encrypteduserdata(from.cb_encrypteduserdata());
    }
    if (from.has_cb_encrypted_appownershipticket()) {
      set_cb_encrypted_appownershipticket(from.cb_encrypted_appownershipticket());
    }
    if (from.has_encrypted_ticket()) {
      set_encrypted_ticket(from.encrypted_ticket());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EncryptedAppTicket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptedAppTicket::CopyFrom(const EncryptedAppTicket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptedAppTicket::IsInitialized() const {

  return true;
}

void EncryptedAppTicket::Swap(EncryptedAppTicket* other) {
  if (other != this) {
    std::swap(ticket_version_no_, other->ticket_version_no_);
    std::swap(crc_encryptedticket_, other->crc_encryptedticket_);
    std::swap(cb_encrypteduserdata_, other->cb_encrypteduserdata_);
    std::swap(cb_encrypted_appownershipticket_, other->cb_encrypted_appownershipticket_);
    std::swap(encrypted_ticket_, other->encrypted_ticket_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EncryptedAppTicket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EncryptedAppTicket_descriptor_;
  metadata.reflection = EncryptedAppTicket_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
